<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo 实战（六）：部署到 coding</title>
    <url>/p/hexo-coding/</url>
    <content><![CDATA[<p>前面的文章介绍了部署到 github，但是 github 禁止了百度的爬虫，而且 github 服务器在国外，国内访问速度很慢。</p>
<p>今天介绍部署到 coding 网站。</p>
<h2 id="注册登录"><a href="#注册登录" class="headerlink" title="注册登录"></a>注册登录</h2><p>进入官网 coding 官网【<a href="https://coding.net】，登录，没有账号的注册下然后登录。" target="_blank" rel="noopener">https://coding.net】，登录，没有账号的注册下然后登录。</a></p>
<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>新建项目：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_223114.png" alt="20200515003458"></p>
<p>选择模板：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_223350.png" alt="20200515003541"></p>
<p>填写基本信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_223557.png" alt="20200515003611"></p>
<h2 id="配置SSH公钥"><a href="#配置SSH公钥" class="headerlink" title="配置SSH公钥"></a>配置SSH公钥</h2><p>进入配置页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_223721.png" alt="20200515004141"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_223743.png" alt="20200515004158"></p>
<p>找到原来部署到 github 上生成的公钥：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_225219.png" alt="20200515004245"></p>
<p>复制出来然后拷贝到文本框：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_225310.png" alt="20200515004337"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_225324.png" alt="20200515004356"></p>
<p>添加完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_225335.png" alt="20200515004428"></p>
<p>验证公钥是否配置成功，打开 Git Bash，输入命令 <code>ssh -T git@e.coding.net</code>，如下表示成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_225804.png" alt="20200515004622"></p>
<h2 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h2><p>复制 git 地址：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_231127.png" alt="20200515004747"></p>
<p>打开配置文件 _config.yml，找到 deploy 设置，修改成如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">github:</span> <span class="string">github地址</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">上面复制的git地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>先清理 <code>hexo clean</code>，然后生成 <code>hexo g</code> 生成，再 <code>hexo d</code> 部署：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_231915.png" alt="20200515005022"></p>
<p>项目动态可以看到提交的信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_231944.png" alt="20200515005206"></p>
<p>进入代码仓库，可以看到代码已经提交过来了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_231956.png" alt="20200515005237"></p>
<h2 id="部署静态网站"><a href="#部署静态网站" class="headerlink" title="部署静态网站"></a>部署静态网站</h2><p>打开持续部署功能：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-15_005353.png" alt="20200515005449"></p>
<p>部署静态网站：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_233725.png" alt="20200515005559"></p>
<p>需要实名认证：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_233750.png" alt="20200515005630"></p>
<p>进入实名认证页面，按提示需要实名认证下即可：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_233854.png" alt="20200515005829"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_233946.png" alt="20200515005906"></p>
<p>实名认证完成之后就可以部署网站了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_234004.png" alt="20200515005936"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_234054.png" alt="20200515005948"></p>
<p>立即部署：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_234125.png" alt="20200515010008"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_234145.png" alt="20200515010019"></p>
<p>这样就可以通过访问地址进行访问了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_234207.png" alt="20200515010049"></p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>先在静态网站设置域名，点击设置进入修改页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-15_010251.png" alt="20200515010555"></p>
<p>绑定域名：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-15_001731.png" alt="20200515010619"></p>
<p>在域名解析服务商域名解析页面添加解析：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_234735.png" alt="20200515010708"></p>
<p>原来解析到 github 不用删除，仍可以保留，域名 DNS 能智能解析，境外访问走 github，国内访问则走 coding。</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-15_010939.png" alt="20200515010946"></p>
<h2 id="测试访问"><a href="#测试访问" class="headerlink" title="测试访问"></a>测试访问</h2><p>等几分钟，本地 ping 一下，发现已经解析到 coding：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_235725.png" alt="20200515011044"></p>
<p>访问速度很快：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-15_0112.gif" alt="20200515011329"></p>
]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>coding</tag>
        <tag>hexo 实战</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 使用问题 bug 记录</title>
    <url>/p/2020-05-17_00/</url>
    <content><![CDATA[<p>如果 markdown 文件中有这种类型额代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#123;#id .class1 .class2&#125;&#96;</span><br></pre></td></tr></table></figure>

<p>就会报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Special\Test\HexoTest\blog&gt;hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Template render error: (unknown path)</span></span><br><span class="line"><span class="string">  Error: expected end of comment, got end of file</span></span><br><span class="line"><span class="string">    at Object._prettifyError (C:\Special\Test\HexoTest\blog\node_modules\nunjucks\src\lib.js:36:11)</span></span><br><span class="line"><span class="string">    at Template.render (C:\Special\Test\HexoTest\blog\node_modules\nunjucks\src\environment.js:536:21)</span></span><br><span class="line"><span class="string">    at Environment.renderString (C:\Special\Test\HexoTest\blog\node_modules\nunjucks\src\environment.js:378:17)</span></span><br><span class="line"><span class="string">    at C:\Special\Test\HexoTest\blog\node_modules\hexo\lib\extend\tag.js:120:48</span></span><br><span class="line"><span class="string">    at tryCatcher (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\util.js:16:23)</span></span><br><span class="line"><span class="string">    at Function.Promise.fromNode.Promise.fromCallback (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\promise.js:209:30)</span></span><br><span class="line"><span class="string">    at Tag.render (C:\Special\Test\HexoTest\blog\node_modules\hexo\lib\extend\tag.js:120:18)</span></span><br><span class="line"><span class="string">    at Object.onRenderEnd (C:\Special\Test\HexoTest\blog\node_modules\hexo\lib\hexo\post.js:291:22)</span></span><br><span class="line"><span class="string">    at C:\Special\Test\HexoTest\blog\node_modules\hexo\lib\hexo\render.js:79:21</span></span><br><span class="line"><span class="string">    at tryCatcher (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\util.js:16:23)</span></span><br><span class="line"><span class="string">    at Promise._settlePromiseFromHandler (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\promise.js:547:31)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\promise.js:604:18)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise0 (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\promise.js:649:10)</span></span><br><span class="line"><span class="string">    at Promise._settlePromises (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\promise.js:729:18)</span></span><br><span class="line"><span class="string">    at _drainQueueStep (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\async.js:93:12)</span></span><br><span class="line"><span class="string">    at _drainQueue (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\async.js:86:9)</span></span><br><span class="line"><span class="string">    at Async._drainQueues (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\async.js:102:5)</span></span><br><span class="line"><span class="string">    at Immediate.Async.drainQueues (C:\Special\Test\HexoTest\blog\node_modules\bluebird\js\release\async.js:15:14)</span></span><br><span class="line"><span class="string">    at processImmediate (internal/timers.js:456:21)</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战（二）：Hexo 基本设置和使用</title>
    <url>/p/hexo-base/</url>
    <content><![CDATA[<h2 id="Hexo-站点配置文件"><a href="#Hexo-站点配置文件" class="headerlink" title="Hexo 站点配置文件"></a>Hexo 站点配置文件</h2><p>官方关于配置的文档：<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration</a></p>
<p>网站的配置信息在文件 _config.yml 中，完整的初始配置信息（除了修改 Deployment）如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://yoursite.com</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## Use post's date for updated date unless set in front-matter</span></span><br><span class="line"><span class="attr">use_date_for_updated:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the 'source/' folder</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/kungge/kungge.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>主要分成如下：</p>
<ul>
<li>Site：网站</li>
<li>URL：网址</li>
<li>Directory：目录</li>
<li>Writing：文章写作</li>
<li>Category &amp; Tag：分类和标签</li>
<li>Date / Time format：日期 / 时间格式</li>
<li>Pagination：分页</li>
<li>Include / Exclude file(s)：包括或不包括目录和文件</li>
<li>Extensions：扩展</li>
</ul>
<h3 id="网站信息配置"><a href="#网站信息配置" class="headerlink" title="网站信息配置"></a>网站信息配置</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">坤哥博客小站</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">热爱生活,热爱技术,听听故事</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">生活是一门艺术,更是一门技术</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">坤哥博客小站,坤哥博客网,坤哥博客技术网</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">wankun</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_222440.png" alt="2225"></p>
<h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>上一篇文章讲过通过命令 <code>hexo new [layout] &lt;title&gt;</code> 可以新建一篇文章，layout 表示布局，Hexo 有三种默认布局：post、page 和 draft，不指定布局则会使用默认布局，默认布局配置使用 <code>default_layout: post</code> 设置，不同的布局会存储在不同的目录中，前面使用命令 hexo new “Hello by hexo newcommand” 新增文件【Hello-by-hexo-new-command.md】存储在目录【source/_posts】中，如果是 draft 则是【source/_drafts】，page 则是【source】。</p>
<p>【Hello-by-hexo-new-command.md】文件内容为空，但是有“头”信息：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">by</span> <span class="string">hexo</span> <span class="string">new</span> <span class="string">command</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-29</span> <span class="number">01</span><span class="string">:09:05</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_230431.png" alt="2313"></p>
<p>这里的“头”信息叫 Front-matter，是文件最上方以 — 分隔的区域，用于指定个别文件的变量，以下是预先定义的参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>layout</td>
<td>布局</td>
<td>不指定则使用默认_config.yml中配置的</td>
</tr>
<tr>
<td>title</td>
<td>标题</td>
<td>文章的文件名</td>
</tr>
<tr>
<td>date</td>
<td>建立日期</td>
<td>文件建立日期</td>
</tr>
<tr>
<td>updated</td>
<td>更新日期</td>
<td>文件更新日期</td>
</tr>
<tr>
<td>comments</td>
<td>开启文章的评论功能</td>
<td>true</td>
</tr>
<tr>
<td>tags</td>
<td>标签（不适用于分页）</td>
<td></td>
</tr>
<tr>
<td>categories</td>
<td>分类（不适用于分页）</td>
<td></td>
</tr>
<tr>
<td>permalink</td>
<td>覆盖文章网址</td>
<td></td>
</tr>
<tr>
<td>keywords</td>
<td>仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td>
<td></td>
</tr>
</tbody></table>
<p>修改该文件内容如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">by</span> <span class="string">hexo</span> <span class="string">new</span> <span class="string">command</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-29</span> <span class="number">01</span><span class="string">:09:05</span></span><br><span class="line"><span class="attr">updated:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-31</span> <span class="number">23</span><span class="string">:10:05</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">标签1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签2</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签3</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">类别1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">[类别2,</span> <span class="string">类别2-1]</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">[类别2,</span> <span class="string">类别2-2]</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">[类别3]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">这里是文章内容。。。</span></span><br></pre></td></tr></table></figure>

<p><em>注：在hexo中类别有父子之分，<code>[类别2, 类别2-1]</code> 表示 <code>类别2-1</code> 是 <code>类别2</code> 的子类别。</em></p>
<p>标签和类别也可以使用 <code>[]</code>,如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span> <span class="string">[hexo,Hexo</span> <span class="string">基本设置]</span></span><br><span class="line"><span class="attr">categories:</span>  <span class="string">开源博客</span></span><br></pre></td></tr></table></figure>

<p>生成静态文件时，发现不光生成了文件本身，还生成了类别和标签页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_231603.png" alt="2316"></p>
<p>渲染结果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_231301.png" alt="2314"></p>
<p>进入类别页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_232035.png" alt="2320"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_231917.png" alt="2319"></p>
<p>文件名称使用 <code>new_post_name: :title.md # File name of new posts</code> 来配置，默认使用 <code>:title.md</code> 表示使用文章标题名来命名，可使用加入时间信息来命名方便文章管理：</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>:title</td>
<td>标题（小写，空格将会被替换为短杠）</td>
</tr>
<tr>
<td>:year</td>
<td>建立的年份，比如， 2015</td>
</tr>
<tr>
<td>:month</td>
<td>建立的月份（有前导零），比如， 04</td>
</tr>
<tr>
<td>:i_month</td>
<td>建立的月份（无前导零），比如， 4</td>
</tr>
<tr>
<td>:day</td>
<td>建立的日期（有前导零），比如， 07</td>
</tr>
<tr>
<td>:i_day</td>
<td>建立的日期（无前导零），比如， 7</td>
</tr>
</tbody></table>
<h2 id="文章地址"><a href="#文章地址" class="headerlink" title="文章地址"></a>文章地址</h2><p>站点配置文件，默认：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://yoursite.com</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_181257.png" alt="20200510181308"></p>
<p>这样的地址对seo不太友好。</p>
<p>修改如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://yoursite.com</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">p/:id/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br></pre></td></tr></table></figure>

<p>每篇文章 <code>---xx---</code> 中指定一个 Id 唯一值，如 <code>id: nas-network</code>，渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_200340.png" alt="20200510200349"></p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="网站中文乱码"><a href="#网站中文乱码" class="headerlink" title="网站中文乱码"></a>网站中文乱码</h3><p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_212732.png" alt="2127"></p>
<p>为什么会出现乱码？</p>
<p>先查看网站用的主题，在 <code># Extensions</code> 一栏，使用命令 <code>npm install hexo-generator-searchdb --save</code> 安装：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure>

<p>用的主题是 landscape，然后再主题的目录下找到语言配置文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_213309.png" alt="2133"></p>
<p>那么在 <code># Site</code> 一栏中语言配置 <code>language:</code> 也要在使用的主题语言配置中。</p>
<p>如上中文应使用 <code>zh-CN</code>，设置 <code>language: zh-CN</code>。</p>
<p>如果还不行，那可能是配置文件【_config.yml】本身的编码格式，另存为 UTF-8 格式：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_221710.png" alt="2217"></p>
<h3 id="yml-可读性差"><a href="#yml-可读性差" class="headerlink" title=".yml 可读性差"></a>.yml 可读性差</h3><p>在华为云的 windows 服务器上用记事本打开成这样：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_223727.png" alt="2237"></p>
<p>可读性太差。</p>
<p>而在本机的 windows 打开却是正常的：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_224656.png" alt="2247"></p>
<p>在华为云的 windows 服务器上记事本也设置了自动换行，这是怎么回事？</p>
<p>不做深究，强烈建议使用第三方编辑器编写即可，如 vs code、sublime等。</p>
<h3 id="网站全空白"><a href="#网站全空白" class="headerlink" title="网站全空白"></a>网站全空白</h3><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_121157.png" alt="20200510121234"></p>
<p>查看页面元素，发现都在：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_121908.png" alt="20200510122402"></p>
<p>说明是样式的问题，查看日志：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_121952.png" alt="20200510122428"></p>
<p>查看使用主题的 font-asesome.min.css 文件，发现确实不存在，刚才误删了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_122210.png" alt="20200510122544"></p>
<p>恢复就好了。</p>
]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 实战</tag>
        <tag>Hexo 设置</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战（五）：主题 NexT 进阶配置和使用</title>
    <url>/p/hexo-next-advance/</url>
    <content><![CDATA[<h2 id="页面浏览进度展示"><a href="#页面浏览进度展示" class="headerlink" title="页面浏览进度展示"></a>页面浏览进度展示</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>将 scrollpercent 设为 true。</p>
<p>若想把 top 按钮放在侧边栏，将 sidebar 设为 true。</p>
<p>效果（侧边栏向上的小箭头）：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_231119.png" alt="20200510231141"></p>
<p>还是放到文章右侧吧：</p>
<h2 id="页面加载进度展示"><a href="#页面加载进度展示" class="headerlink" title="页面加载进度展示"></a>页面加载进度展示</h2><p>命令窗口进入目录【themes/next/】,然后下载安装 <code>git clone https://github.com/theme-next/theme-next-pace source/lib/pace</code>，在主题配置文件中找到下面的设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/HubSpot/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure>

<p>将 enable 设为 true 即可，theme 表示不同的样式效果。</p>
<h2 id="增加网站运行时间"><a href="#增加网站运行时间" class="headerlink" title="增加网站运行时间"></a>增加网站运行时间</h2><p>找到底部设置的代码【themes\next\layout_partials\footer.swig】，在后面增加如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!--添加运行时间--&gt;</span><br><span class="line">&lt;span id=<span class="string">"sitetime"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;script language=javascript&gt;</span></span><br><span class="line"><span class="regexp">	function siteTime()&#123;</span></span><br><span class="line"><span class="regexp">		window.setTimeout("siteTime()", 1000);</span></span><br><span class="line"><span class="regexp">		var seconds = 1000;</span></span><br><span class="line"><span class="regexp">		var minutes = seconds * 60;</span></span><br><span class="line"><span class="regexp">		var hours = minutes * 60;</span></span><br><span class="line"><span class="regexp">		var days = hours * 24;</span></span><br><span class="line"><span class="regexp">		var years = days * 365;</span></span><br><span class="line"><span class="regexp">		var today = new Date();</span></span><br><span class="line"><span class="regexp">		var todayYear = today.getFullYear();</span></span><br><span class="line"><span class="regexp">		var todayMonth = today.getMonth()+1;</span></span><br><span class="line"><span class="regexp">		var todayDate = today.getDate();</span></span><br><span class="line"><span class="regexp">		var todayHour = today.getHours();</span></span><br><span class="line"><span class="regexp">		var todayMinute = today.getMinutes();</span></span><br><span class="line"><span class="regexp">		var todaySecond = today.getSeconds();</span></span><br><span class="line"><span class="regexp">		/</span>* </span><br><span class="line">      <span class="built_in">Date</span>.UTC() -- 返回date对象距世界标准时间(UTC)<span class="number">1970</span>年<span class="number">1</span>月<span class="number">1</span>日午夜之间的毫秒数(时间戳)</span><br><span class="line">      year - 作为date对象的年份，为<span class="number">4</span>位年份值</span><br><span class="line">      month - <span class="number">0</span><span class="number">-11</span>之间的整数，做为date对象的月份</span><br><span class="line">      day - <span class="number">1</span><span class="number">-31</span>之间的整数，做为date对象的天数</span><br><span class="line">      hours - <span class="number">0</span>(午夜<span class="number">24</span>点)<span class="number">-23</span>之间的整数，做为date对象的小时数</span><br><span class="line">      minutes - <span class="number">0</span><span class="number">-59</span>之间的整数，做为date对象的分钟数</span><br><span class="line">      seconds - <span class="number">0</span><span class="number">-59</span>之间的整数，做为date对象的秒数</span><br><span class="line">      microseconds - <span class="number">0</span><span class="number">-999</span>之间的整数，做为date对象的毫秒数</span><br><span class="line">     *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">		var t1 = Date.UTC(2020,03,29,00,51,12);</span></span><br><span class="line"><span class="regexp">		var t2 = Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span></span><br><span class="line"><span class="regexp">		var diff = t2-t1;</span></span><br><span class="line"><span class="regexp">		var diffYears = Math.floor(diff/y</span>ears);</span><br><span class="line">		<span class="keyword">var</span> diffDays = <span class="built_in">Math</span>.floor((diff/days)-diffYears*<span class="number">365</span>);</span><br><span class="line">		<span class="keyword">var</span> diffHours = <span class="built_in">Math</span>.floor((diff-(diffYears*<span class="number">365</span>+diffDays)*days)/hours);</span><br><span class="line">		<span class="keyword">var</span> diffMinutes = <span class="built_in">Math</span>.floor((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours)/minutes);</span><br><span class="line">		<span class="keyword">var</span> diffSeconds = <span class="built_in">Math</span>.floor((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span><br><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">"sitetime"</span>).innerHTML=<span class="string">" 已运行"</span>+<span class="comment">/*diffYears+" 年 "+*/</span>diffDays+<span class="string">" 天 "</span>+diffHours+<span class="string">" 小时 "</span>+diffMinutes+<span class="string">" 分钟 "</span>+diffSeconds+<span class="string">" 秒"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	siteTime();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--添加运行时间--&gt;</span></span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_105832.png" alt="20200516105841"></p>
<h2 id="添加显示文章摘要"><a href="#添加显示文章摘要" class="headerlink" title="添加显示文章摘要"></a>添加显示文章摘要</h2><p>在首页默认为展示很多，可以显示【阅读全文】的链接，找到主题的配置文件 _config.yml 关于此的内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>可以不用设置，只需要在截断处添加 <code>&lt;!-- more --&gt;</code> 标签，如（使用了 Hexo 可以不用自己添加目录了，上面的目录应该去掉）：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_235039.png" alt="20200508235056"></p>
<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_234213.png" alt="20200508235151"></p>
<p>如果要自动添加摘要，可以安装插件 <code>npm install hexo-auto-excerpt</code>，然后在 package.json 中添加 <code>&quot;hexo-auto-excerpt&quot;: &quot;^1.1.2&quot;</code> ，显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_153226.png" alt="20200510153237"></p>
<h2 id="打赏设置"><a href="#打赏设置" class="headerlink" title="打赏设置"></a>打赏设置</h2><p>找到主题的配置文件 _config.yml 关于此的内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">#comment: Donate comment here.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="comment">#wechatpay: /images/wechatpay.png</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure>

<p>本次使用支付宝和微信，准备好收款图片，将其存放到 source 的目录下或某个目录下如 images，设置修改如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">您的支持是我最大的动力！</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure>

<p>在文章末尾出现了打赏按钮：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_000807.png" alt="20200509000818"></p>
<p>点击打赏按钮则会跳出设置的图片：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_001029.png" alt="20200509001042"></p>
<p>animation 如果设置为 true，鼠标放上去图片下面的字会动。</p>
<h2 id="网站访问次数统计"><a href="#网站访问次数统计" class="headerlink" title="网站访问次数统计"></a>网站访问次数统计</h2><p>将 enable 设为 true：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_001411.png" alt="20200509001656"></p>
<p>换个浏览器再次访问：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_001444.png" alt="20200509001719"></p>
<p>次数增加了，说明功能正常，使用域名访问，次数清空了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_185914.png" alt="20200510190036"></p>
<p>文章阅读数：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_003140.png" alt="20200509003231"></p>
<h2 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h2><p>设置内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Swiftype Search API Key</span></span><br><span class="line"><span class="attr">swiftype_key:</span></span><br></pre></td></tr></table></figure>

<p>将 local_search.enable 设为 true。</p>
<p>npm 安装 hexo-generator-searchdb 依赖，</p>
<p>然后在根目录下的 _config.xml 中添加如下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>这样就会产生一个搜索框，然后点击会弹出一个窗口，文本框输入关键字即可实现搜索：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_003848.png" alt="20200509003921"></p>
<p>实现原理主要是 hexo-generator-searchdb 会预先生成一个文本库 search.xml，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_153855.png" alt="20200510153903"></p>
<p>本地搜索是，NexT就会直接使用 js 来调用这个文件，这样就实现了静态网站的本地搜索。</p>
<h2 id="图片弹出"><a href="#图片弹出" class="headerlink" title="图片弹出"></a>图片弹出</h2><p>github 地址：<a href="https://github.com/theme-next/theme-next-fancybox" target="_blank" rel="noopener">https://github.com/theme-next/theme-next-fancybox</a></p>
<p>使用命令将远程代码下载下来：<code>git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox</code>，速度可能会很慢，可从本站下载：<a href="http://www.kungge.com/assist/theme-next-fancybox-master.zip" target="_blank" rel="noopener">http://www.kungge.com/assist/theme-next-fancybox-master.zip</a></p>
<p>主题配置文件 <code>fancybox: true</code>。</p>
<p>点击图片即可弹出来，显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_142716.png" alt="20200510142736"></p>
<h2 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h2><p>目前hexo支持的评论系统很多，next 主题自带了 gitalk，需要配置下，但是需要 github 账号登录，很麻烦，网上也有人反馈国内会报网络错误，翻墙才能使用。</p>
<p>本次添加 Valine，比较简洁好用，官网：<a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></p>
<p>分三个版本：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_155524.png" alt="20200510162629"></p>
<p>个人直接使用开发版即可，一般够用。</p>
<p>next 本身也集成了 valine。</p>
<h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><p>去注册登录，然后创建应用，创建好的应用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_160844.png" alt="20200510160919"></p>
<p>点击应用进入配置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_161116.png" alt="20200510161154"></p>
<h3 id="配置-valine"><a href="#配置-valine" class="headerlink" title="配置 valine"></a>配置 valine</h3><p>打开主题配置文件，找到 valine，初始信息：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>

<p>将 appid 和 appkey 填入进来</p>
<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_161752.png" alt="20200510161816"></p>
<h3 id="测试评论效果"><a href="#测试评论效果" class="headerlink" title="测试评论效果"></a>测试评论效果</h3><p>评论一下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_162139.png" alt="20200510162158"></p>
<p>修改评论头像，属性是 avatar</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_212340.png" alt="20200510212352"></p>
<h3 id="查看评论数据"><a href="#查看评论数据" class="headerlink" title="查看评论数据"></a>查看评论数据</h3><p>登录 leancloud 进入应用选择存储（如本次的地址是【<a href="https://leancloud.cn/dashboard/data.html?appid=WS9yN0bdMnmWCTEGdPtRjty5-gzGzoHsz】），然后选择的" target="_blank" rel="noopener">https://leancloud.cn/dashboard/data.html?appid=WS9yN0bdMnmWCTEGdPtRjty5-gzGzoHsz】），然后选择的</a> Class 为 Comment，就可以看到评论数据了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_210939.png" alt="20200510211015"></p>
]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 实战</tag>
        <tag>next 主题</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战（三）：主题 NexT 使用和基本设置</title>
    <url>/p/hexo-next/</url>
    <content><![CDATA[<h2 id="使用主题-NexT"><a href="#使用主题-NexT" class="headerlink" title="使用主题 NexT"></a>使用主题 NexT</h2><p>默认的主题是 landscape，而 NexT 主题很多人选择，简洁好看，接下来会在该主题基础上进行设置。</p>
<p>NexT 主题源码地址：<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></p>
<p>下载 release 版：<a href="https://github.com/theme-next/hexo-theme-next/releases" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next/releases</a></p>
<p>将下载的压缩包解压到 <code>themes/</code> 目录下，将_config.yml 中 theme 修改为 :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<h2 id="NexT-主题基本配置"><a href="#NexT-主题基本配置" class="headerlink" title="NexT 主题基本配置"></a>NexT 主题基本配置</h2><h3 id="Schemes-配置"><a href="#Schemes-配置" class="headerlink" title="Schemes 配置"></a>Schemes 配置</h3><p>scheme 默认是 Muse：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_225028.png" alt="2250"></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment"># scheme: Mist</span></span><br><span class="line"><span class="comment"># scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>

<p>Pisces 效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_225430.png" alt="2254"></p>
<p>Mist 效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_225933.png" alt="2259"></p>
<p>Gemini 效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_163654.png" alt="20200510163714"></p>
<p>个人推荐使用 Gemini，比较好看。</p>
<h3 id="菜单配置"><a href="#菜单配置" class="headerlink" title="菜单配置"></a>菜单配置</h3><p>默认的菜单配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || th</span></span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>

<p><code>||</code> 前面的是超链接，后面的是图标，修改如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  schedule: /schedule/ || calendar</span><br><span class="line">  sitemap: /sitemap.xml || sitemap</span><br><span class="line">  commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_230927.png" alt="2309"></p>
<p>配置的是英文，为啥会显示成对应中文？</p>
<p>其实这是有语言配置文件决定的，配置什么语言就用目录 【languages/】下【语言.yml】文件，如本次配置的是【language: zh-CN】，使用的文件就是【zh-CN.yml】。</p>
<h3 id="侧栏配置"><a href="#侧栏配置" class="headerlink" title="侧栏配置"></a>侧栏配置</h3><p>侧栏默认配置如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/sidebar</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  position: left</span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  <span class="comment">#width: 300</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display (only for Muse | Mist), available values:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically.</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  display: post</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar padding in pixels.</span></span><br><span class="line">  padding: 18</span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class="line">  offset: 12</span><br><span class="line">  <span class="comment"># Enable sidebar on narrow view (only for Muse | Mist).</span></span><br><span class="line">  onmobile: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line">avatar:</span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  url: <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  rounded: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  rotated: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Posts / Categories / Tags in sidebar.</span></span><br><span class="line">site_state: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_232856.png" alt="2329"></p>
<ul>
<li>Sidebar Position 用来配置侧栏的位置</li>
<li>Sidebar Display 用来配置侧栏的显示时机</li>
<li>Sidebar Avatar 用来配置侧栏头像</li>
</ul>
<h3 id="友情链接配置"><a href="#友情链接配置" class="headerlink" title="友情链接配置"></a>友情链接配置</h3><p>默认：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line">social:</span><br><span class="line">  <span class="comment">#GitHub: https://github.com/yourname || github</span></span><br><span class="line">  <span class="comment">#E-Mail: mailto:yourname@gmail.com || envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  icons_only: <span class="literal">false</span></span><br><span class="line">  transition: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>把注释去掉，看看效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_234930.png" alt="2349"></p>
<h3 id="站点建立时间配置"><a href="#站点建立时间配置" class="headerlink" title="站点建立时间配置"></a>站点建立时间配置</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup. If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2020</span></span><br></pre></td></tr></table></figure>

<p>底部显示的是：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_235238.png" alt="2352"></p>
<p>修改成2019，显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_180745.png" alt="20200510180826"></p>
<h3 id="修改网站图标"><a href="#修改网站图标" class="headerlink" title="修改网站图标"></a>修改网站图标</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>

<p>进入主题图片目录【C:\Special\Test\HexoTest\blog\themes\next\source\images】，换成自己的就好：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/smiley_lock_16x16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/smiley_lock_32x32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_141102.png" alt="20200510141112"></p>
<h3 id="备案信息配置"><a href="#备案信息配置" class="headerlink" title="备案信息配置"></a>备案信息配置</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Beian ICP and gongan information for Chinese users. See: http://www.beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">icp:</span></span><br><span class="line">    <span class="comment"># The digit in the num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_id:</span></span><br><span class="line">    <span class="comment"># The full num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_num:</span></span><br><span class="line">    <span class="comment"># The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span></span><br></pre></td></tr></table></figure>

<p>修改：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Beian ICP and gongan information for Chinese users. See: http://www.beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">icp:</span> <span class="string">赣ICP备16000944号-1</span></span><br><span class="line">    <span class="comment"># The digit in the num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_id:</span></span><br><span class="line">    <span class="comment"># The full num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_num:</span></span><br><span class="line">    <span class="comment"># The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span> <span class="string">http://img2.kungge.com/content/beian.png</span></span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_152534.png" alt="20200510152547"></p>
<h3 id="修改侧边栏头像"><a href="#修改侧边栏头像" class="headerlink" title="修改侧边栏头像"></a>修改侧边栏头像</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>修改：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">http://img2.kungge.com/content/dog.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_165528.png" alt="20200510165535"></p>
<h3 id="修改标签样式"><a href="#修改标签样式" class="headerlink" title="修改标签样式"></a>修改标签样式</h3><p>文章末尾标签样式展示，在控制【blog\themes\next\layout_macro\post.swig】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_170455.png" alt="20200510170531"></p>
<p>默认标签小图标是不展示：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line"><span class="attr">tag_icon:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>使用 <code>#</code> ：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_170648.png" alt="20200510170700"></p>
<p>只需要修改配置，将其设为 true，效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_170733.png" alt="20200510170740"></p>
<h3 id="添加文章版权信息"><a href="#添加文章版权信息" class="headerlink" title="添加文章版权信息"></a>添加文章版权信息</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>

<p>将 false 都设为 true，效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_171608.png" alt="20200510171629"></p>
<h3 id="不显示-power-by"><a href="#不显示-power-by" class="headerlink" title="不显示 power by"></a>不显示 power by</h3><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_211929.png" alt="20200510212035"></p>
<p>主题配置文件将 fo0ter 下 powered 设为 <code>powered: false</code>：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_212145.png" alt="20200510212152"></p>
<h3 id="设置代码块"><a href="#设置代码块" class="headerlink" title="设置代码块"></a>设置代码块</h3><p>默认：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_172308.png" alt="20200510172319"></p>
<p>修改样式，复制按钮可见：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span></span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_172939.png" alt="20200510172950"></p>
<h3 id="添加-github-banner"><a href="#添加-github-banner" class="headerlink" title="添加 github_banner"></a>添加 github_banner</h3><p>启用：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/kungge</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_164635.png" alt="20200510164644"></p>
]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 实战</tag>
        <tag>next 主题</tag>
        <tag>hexo 主题</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战（七）：搜索引擎 SEO Settings 设置百度和谷歌</title>
    <url>/p/hexo-seo/</url>
    <content><![CDATA[<p>本次以百度为例，谷歌类似。</p>
<h2 id="添加网站"><a href="#添加网站" class="headerlink" title="添加网站"></a>添加网站</h2><p>进入【<a href="https://ziyuan.baidu.com/linksubmit/index?" target="_blank" rel="noopener">百度站长平台</a>】，添加站点</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_214348.png" alt="20200510215249"></p>
<p>添加的站点需要验证：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_002624.png" alt="20200511002631"></p>
<p>采用【HTMl标签验证】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_220432.png" alt="20200510225133"></p>
<p>html 内容就是 content 中的内容。</p>
<p>next 支持 SEO Settings，配置项如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># SEO Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Baidu transformation on mobile devices.</span></span><br><span class="line"><span class="attr">disable_baidu_transformation:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If true, site-subtitle will be added to index page.</span></span><br><span class="line"><span class="comment"># Remember to set up your site-subtitle in Hexo `_config.yml` (e.g. subtitle: Subtitle)</span></span><br><span class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically add external URL with Base64 encrypt &amp; decrypt.</span></span><br><span class="line"><span class="attr">exturl:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters</span></span><br><span class="line"><span class="attr">google_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bing Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.bing.com/webmaster</span></span><br><span class="line"><span class="attr">bing_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Yandex Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://webmaster.yandex.ru</span></span><br><span class="line"><span class="attr">yandex_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://ziyuan.baidu.com/site</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO.</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>将 <code>baidu_site_verification</code> 设置为 true，然后找到输出该标签的地方【themes\next\layout_partials\head\head.swig】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_121329.png" alt="20200516121350"></p>
<p>将百度提供的验证标签输出：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme.baidu_site_verification %&#125;</span><br><span class="line">  &lt;meta name=<span class="string">"baidu-site-verification"</span> content=<span class="string">"xSB5shU7SK"</span> /&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p>点击完成验证，验证成功后，进入站点属性：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_001139.png" alt="20200511001220"></p>
<p>因为是一个子站，所以关联主体：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_001240.png" alt="20200511001306"></p>
<p>在站点管理中可以看到新站已经验证完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_001357.png" alt="20200511001439"></p>
<p>如果已经有主站添加了验证，可以批量添加子站：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_001320.png" alt="20200510215413"></p>
<h2 id="生成站点地图"><a href="#生成站点地图" class="headerlink" title="生成站点地图"></a>生成站点地图</h2><p>站点地图是网站上各网页的列表，创建这个文件有助于搜索引擎发现并了解网站的所有网页。</p>
<p>在站点配置文件中设置博客首页：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://blog.kungge.com</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>

<p>这样生成的地址就是你的网站地址。</p>
<p>使用 npm 自动生成 sitemap，然后将其提交到百度或者其它搜索引擎。</p>
<p>安装两个组件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<p>生成，在 public 目录中会生成 sitemap.xml 和 baidusitemap.xml 两个文件。</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_000027.png" alt="20200511000047"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_000329.png" alt="20200511000337"></p>
<p>生成的 baidusitemap.xml 中只包含文章内容，其它页面不包含（如404、类别、标签页面等）。</p>
<h2 id="提交站点地图"><a href="#提交站点地图" class="headerlink" title="提交站点地图"></a>提交站点地图</h2><p>向搜索引擎主动提交信息，可以缩短搜索引起爬虫发现网站链接的时间，百度后台管理中提供了这个功能，进入【百度收录】一栏：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-13_235309.png" alt="20200513235400"></p>
<p>提交完成，属于等待状态：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-13_235534.png" alt="20200513235647"></p>
<p>过一会儿就能看到新的状态了。</p>
<p>后来经过一段时间研究发现，github 和 coding 都做了防爬虫处理，搜索引擎无法爬取文章，因此需要设置自动手动提交或自动推送。</p>
<h2 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h2><p>可以手动提交网站链接到搜索引擎，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_101134.png" alt="20200516101208"></p>
<p>但这样太麻烦了，自动推送比较方便。</p>
<p>修改主题站点配置文件，将 baidu_push 设置为 true， <code>baidu_push: true</code>。</p>
<p>百度站点管理后台中找到自动推送的代码：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_102652.png" alt="20200516102723"></p>
<p>然后找到 next 主题设置百度推送的工具代码，这个版本的路径是【themes\next\layout_third-party\baidu-push.swig】：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme.baidu_push %&#125;</span><br><span class="line">  &lt;script&#123;&#123; pjax &#125;&#125;&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">      <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span><br><span class="line">      bp.src = (curProtocol === <span class="string">'https'</span>) ? <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span> : <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">      <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">      s.parentNode.insertBefore(bp, s);</span><br><span class="line">    &#125;)();</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;%- endif %&#125;</span></span><br></pre></td></tr></table></figure>

<p>对比下是否一样，不一样则需要把百度站点管理后台中的代码复制到配置文件中，这里发现是一样的，就没复制。</p>
<p>这样每次访问博客页面就会自动向百度提交。</p>
<h2 id="验证网站是否收录"><a href="#验证网站是否收录" class="headerlink" title="验证网站是否收录"></a>验证网站是否收录</h2><p>在百度搜索框中输入 <code>site:blog.kungge.com</code>，没有收录的话，如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-13_225941.png" alt="20200513225948"></p>
<p>过一段时间再来查，就可以看到类似这样：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-13_230110.png" alt="20200513230116"></p>
<p>百度收录时间比较长，一般大概半个月。</p>
<h2 id="设置谷歌"><a href="#设置谷歌" class="headerlink" title="设置谷歌"></a>设置谷歌</h2><p>谷歌收录比百度快，方法和百度类似。</p>
<p>登录【<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN】" target="_blank" rel="noopener">https://www.google.com/webmasters/tools/home?hl=zh-CN】</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_111943.png" alt="20200516142010"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_112024.png" alt="20200516142028"></p>
<p>参考百度设置方式，将 <code>google_site_verification: true</code>，然后添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.google_site_verification %&#125;</span><br><span class="line">  &lt;meta name&#x3D;&quot;google-site-verification&quot; content&#x3D;&quot;gVkA-jeqZSVbPLhHyQnRI8oEBse0D3GaV0B98Yjai_k&quot; &#x2F;&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p>重新生成发布，打开网页源代码，验证标签是否加进来：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_142430.png" alt="20200516142452"></p>
<p>然后点击验证，验证成功如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_141619.png" alt="20200516142526"></p>
<p>点击【前往资源页面】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_142759.png" alt="20200516142818"></p>
<p>提交站点地图：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_142948.png" alt="20200516143009"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_143032.png" alt="20200516143045"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_143058.png" alt="20200516143113"></p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="文件方式验证网站失败"><a href="#文件方式验证网站失败" class="headerlink" title="文件方式验证网站失败"></a>文件方式验证网站失败</h3><p>验证网站：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_214358.png" alt="20200510215322"></p>
<p>在 source 目录中添加这个文件，然后重新生成再发布即可。</p>
<p>查看这个文件是否发布：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_224443.png" alt="20200510224458"></p>
<p>还可以选择 HTML 标签验证：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_220432.png" alt="20200510221147"></p>
<p>然后点击完成验证，验证失败：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_224624.png" alt="20200510224657"></p>
<p>因为最终生成的这个文件不再是之前的那个文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_224900.png" alt="20200510224932"></p>
<h3 id="错误的验证方式"><a href="#错误的验证方式" class="headerlink" title="错误的验证方式"></a>错误的验证方式</h3><p>将 meta 标签设置到 baidu_site_verification 中，  <code>baidu_site_verification: &lt;meta name=&quot;baidu-site-verification&quot; content=&quot;xSB5shU7SK&quot; /&gt;</code>，这样也可以通过验证，但是生成的效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_112504.png" alt="20200516120819"></p>
<p>而且在网站顶部会产生：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_121008.png" alt="20200516121026"></p>
<h3 id="谷歌网域验证失败"><a href="#谷歌网域验证失败" class="headerlink" title="谷歌网域验证失败"></a>谷歌网域验证失败</h3><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_110716.png" alt="20200516122238"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_110733.png" alt="20200516141854"></p>
<p>无法添加记录集：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-16_111733.png" alt="20200516141933"></p>
<h3 id="提交站点地图状态抓取失败"><a href="#提交站点地图状态抓取失败" class="headerlink" title="提交站点地图状态抓取失败"></a>提交站点地图状态抓取失败</h3><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-13_235732.png" alt="20200513235835"></p>
<p>点击【抓取失败】进去提示：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_000004.png" alt="20200514000019"></p>
<p>先确定资源是否能正常访问，如果能正常访问则不用管它。</p>
<p>可以晚点再看看，可能百度方系统异常了，第二天再看看，发现【抓取失败】可以点进去：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_215302.png" alt="20200514215313"></p>
<p>查看网络IP情况：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_215527.png" alt="20200514215543"></p>
<p>经查阅资料发现 GitHub 禁止了百度爬虫，如果要解决这个问题可以双线部署 Coding Pages 和 GitHub Pages 。</p>
<p>然后再次提交 sitemap 试试。</p>
<p>当已经部署到 Coding 时：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_235725.png" alt="20200515011044"></p>
<p>百度还是走了原来的地址：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-15_011930.png" alt="20200515011952"></p>
<p>好吧，再等等吧。。。</p>
]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 实战</tag>
        <tag>hexo seo</tag>
        <tag>seo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战（四）：页面添加</title>
    <url>/p/hexo-page-add/</url>
    <content><![CDATA[<h2 id="分类页面添加"><a href="#分类页面添加" class="headerlink" title="分类页面添加"></a>分类页面添加</h2><p>使用命令 <code>hexo new page categories</code> 新增一个 categories 文件夹：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_000948.png" alt="0009"></p>
<p>里面默认会添加一个 index.md 文件，默认展示：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_001050.png" alt="0010"></p>
<p>修改 index.md：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">网站分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-30</span> <span class="number">23</span><span class="string">:55:32</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>如果文章指定 categories 参数则会在这里展示出来，显示效果范例：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-06_234730.png" alt="20200506234740"></p>
<h2 id="标签页面添加"><a href="#标签页面添加" class="headerlink" title="标签页面添加"></a>标签页面添加</h2><p>标签页面添加和类别类似，使用命令 <code>hexo new page tags</code> 新增一个 tags 文件夹：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_000106.png" alt="0001"></p>
<p>默认内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-30</span> <span class="number">23</span><span class="string">:59:32</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>展示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_000437.png" alt="0004"></p>
<p>修改 index.md 文件如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">网站标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-30</span> <span class="number">23</span><span class="string">:59:32</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>显示效果范例：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-06_235434.png" alt="20200506235250"></p>
<h2 id="关于我页面添加"><a href="#关于我页面添加" class="headerlink" title="关于我页面添加"></a>关于我页面添加</h2><p>使用命令 <code>hexo new page about</code> 生成文件夹，修改 index.html 内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">关于本站</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-05</span><span class="number">-07</span> <span class="number">00</span><span class="string">:11:24</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">本站是坤哥网的精选文章，均属原创，欢迎转载！转载时请保留原文链接！</span></span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-07_001454.png" alt="20200507001504"></p>
]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 实战</tag>
        <tag>hexo 页面</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战系列：看这一篇文章就够了</title>
    <url>/p/hexo-summary/</url>
    <content><![CDATA[<p><a href="/p/hexo-create-github/">Hexo 实战（一）：搭建开源博客系统 Hexo 并将其部署到 GitHub</a><br><a href="/p/hexo-base/">Hexo 实战（二）：Hexo 基本设置和使用</a><br><a href="/p/hexo-next/">Hexo 实战（三）：主题 NexT 使用和基本设置</a><br><a href="/p/hexo-page-add/">Hexo 实战（四）：页面添加</a><br><a href="/p/hexo-next-advance/">Hexo 实战（五）：主题 NexT 进阶配置和使用</a><br><a href="/p/hexo-coding/">Hexo 实战（六）：部署到 coding</a><br><a href="/p/hexo-seo/">Hexo 实战（七）：搜索引擎 SEO Settings 设置百度和谷歌</a></p>
]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 实战</tag>
      </tags>
  </entry>
  <entry>
    <title>云服务器 windows IIS SSL证书安装与使用</title>
    <url>/p/cloud-iis-ssl/</url>
    <content><![CDATA[<p>本次使用的是阿里云里送的免费一年的 SSL 证书。</p>
<p>服务器是阿里云ECS Windows Server 2016 Datacenter，其他版本 windows 服务器类似。</p>
<h2 id="一、证书申请"><a href="#一、证书申请" class="headerlink" title="一、证书申请"></a>一、证书申请</h2><p>阿里云给的免费证书：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-18_232638.png" alt="免费证书"></p>
<p>购买之后：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-18_232845.png" alt="证书列表"></p>
<p>证书申请：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-18_233036.png" alt="申请"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-18_233228.png" alt="验证"></p>
<p>在域名解析中添加记录：</p>
<p>提交后：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-18_233617.png" alt="提交后"></p>
<h2 id="二、证书下载"><a href="#二、证书下载" class="headerlink" title="二、证书下载"></a>二、证书下载</h2><p>证书申请通过后，阿里云站内信会发送【证书签发成功提醒】提醒：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-22_100520.png" alt="证书通过提醒"></p>
<p>在控制台的 SSL 证书管理的概览中可看到状态为已签发的证书：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-22_100707.png" alt="证书列表"></p>
<p>查看证书详情：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-22_010554.png" alt="证书详情"></p>
<p>证书下载：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-22_010001.png" alt="下载证书"></p>
<p>下载 IIS 版本：</p>
<p>【3623015_<a href="http://www.kungge.com_iis.zip】里面包含两个文件，如：">www.kungge.com_iis.zip】里面包含两个文件，如：</a></p>
<ul>
<li>3623015_<a href="http://www.kungge.com.pfx：证书文件">www.kungge.com.pfx：证书文件</a></li>
<li>pfx-password.txt：密钥文件</li>
</ul>
<h2 id="三、证书安装"><a href="#三、证书安装" class="headerlink" title="三、证书安装"></a>三、证书安装</h2><p>将证书拷贝到服务器。</p>
<p>运行命令MMC：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-22_101118.png" alt="MMC命令"></p>
<p>打开控制台，按如下方法进行导入：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-22_101249.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_101413.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_101430.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_101527.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_101540.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_101804.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_101928.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_102010.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_102041.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_102052.png" alt="1012"></p>
<p>证书导入成功，查看证书信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_102247.png" alt="1012"></p>
<p>关闭时可将设置保存如【控制台1.msc】，方便下次直接查看：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_113246.png" alt="msc"></p>
<h2 id="四、证书分配"><a href="#四、证书分配" class="headerlink" title="四、证书分配"></a>四、证书分配</h2><p>打开IIS，添加绑定，类型选择 https，443 端口，再选择 SSL 证书：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_114343.png" alt="绑定443"></p>
<p>重新启动网站即可。</p>
<h2 id="五、开通443端口"><a href="#五、开通443端口" class="headerlink" title="五、开通443端口"></a>五、开通443端口</h2><p>需要在防火墙开通443端口，如果是云服务器可在安全组管理界面添加公网入方向：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_105730.png" alt="公网入方向https"></p>
<h2 id="六、验证证书是否生效"><a href="#六、验证证书是否生效" class="headerlink" title="六、验证证书是否生效"></a>六、验证证书是否生效</h2><p>检测地址：<a href="https://www.getssl.cn/sslchecker" target="_blank" rel="noopener">https://www.getssl.cn/sslchecker</a></p>
<p>输入要检测的域名：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_114808.png" alt="检测SSL证书"></p>
<p>浏览器访问网站：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_113941.png" alt="证书正确"></p>
<p>查看证书：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_114637.png" alt="证书信息"></p>
<h2 id="七、其他问题"><a href="#七、其他问题" class="headerlink" title="七、其他问题"></a>七、其他问题</h2><h3 id="7-1-CDN-安装证书"><a href="#7-1-CDN-安装证书" class="headerlink" title="7.1 CDN 安装证书"></a>7.1 CDN 安装证书</h3><p>如果使用了 CDN，还需要将证书安装在 CDN 上面，如下之前有一个过期证书：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_105849.png" alt="CDN 过期证书"></p>
<p>CDN 域名管理中要开启 HTTPS，点击管理更新证书：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_105951.png" alt="1110"></p>
<p>之前安装的云盾证书：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_110015.png" alt="云盾证书"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_110212.png" alt="云盾证书"></p>
<p>本次是阿里云的免费DV版证书，需要更改证书类型：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_110108.png" alt="免费证书"></p>
<h3 id="7-2-过期证书"><a href="#7-2-过期证书" class="headerlink" title="7.2 过期证书"></a>7.2 过期证书</h3><p>如果之前安装过证书且已过期，在证书检测网站上也能检测到：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_103617.png" alt="过期证书"></p>
<p>吊销证书：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_103827.png" alt="吊销证书"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_103919.png" alt="吊销证书"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_103934.png" alt="吊销证书"></p>
<h3 id="7-3-IIS-绑定错误的证书"><a href="#7-3-IIS-绑定错误的证书" class="headerlink" title="7.3 IIS 绑定错误的证书"></a>7.3 IIS 绑定错误的证书</h3><p>如果绑定的是：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_102352.png" alt="1012"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_102435.png" alt="1012"></p>
<p>则检测出来的是：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_112003.png" alt="检测ssl"></p>
<p>在浏览器显示的还是不安全证书，切记要选择正确的证书。</p>
]]></content>
      <categories>
        <category>云服务器</category>
      </categories>
      <tags>
        <tag>ssl证书</tag>
        <tag>windows</tag>
        <tag>iis</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战（一）：搭建开源博客系统 Hexo 并将其部署到 GitHub</title>
    <url>/p/hexo-create-github/</url>
    <content><![CDATA[<p>Hexo 是使用 Node.js 技术实现的静态博客框架，依赖很少，安装非常简单，可以将 markdown 文件生成博客文章，而<br>且可以将生成的静态内容发布到 Github 上。</p>
<p>本次使用的操作系统是 Windows，在 Linux 上操作类似。</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><p>下载地址：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></p>
<p>本次下载安装的文件是【Git-2.22.0-64-bit.exe】。</p>
<p>安装完成后在命令窗口输入命令 <code>git --version</code> 验证是否安装成功，如下能输出 git 版本说明安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;git --version</span><br><span class="line">git version 2.22.0.windows.1</span><br></pre></td></tr></table></figure>

<p>在鼠标右键也会有 git 操作的显示：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_212329.png" alt="2123"></p>
<h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p>
<p>本次下载安装的文件是【node-v12.16.1-x64.msi】。</p>
<p>安装完成后在命令窗口输入命令 <code>node -v</code> 验证是否安装成功，如下能输出 node 版本说明安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;node -v</span><br><span class="line">v12.16.1</span><br></pre></td></tr></table></figure>

<h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>使用命令 <code>npm install -g hexo-cli</code> 安装 Hexo。</p>
<p>使用命令 <code>hexo init blog</code> 初始化博客：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010139.png" alt="2054"></p>
<p>如上已初始化完成，目录结构如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<ul>
<li>_config.yml：网站配置信息文件</li>
<li>package.json：应用程序的信息</li>
<li>scaffolds：目标目录</li>
<li>source：存放用户资源的目录，除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</li>
<li>themes：主题目录，hexo 会根据主题来生成静态页面</li>
</ul>
<h2 id="hexo-基本使用"><a href="#hexo-基本使用" class="headerlink" title="hexo 基本使用"></a>hexo 基本使用</h2><p>进入 blog 文件夹，使用命令 <code>hexo server</code> （可简写 <code>hexo s</code>）启动服务：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010630.png" alt="2057"></p>
<p>如上 hexo 博客系统服务已启动完成，浏览器输入地址 <code>http://localhost:4000</code> 访问：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010648.png" alt="2059"></p>
<p>系统默认新建了一个 Hello World 博文，其实这个博客就是目录【source/_posts】中文件为【hello-world.md】的内容，使用命令 <code>hexo new &quot;Hello by hexo newcommand&quot;</code> 则会在该目录中新增一个文件【Hello-by-hexo-new-command.md】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010936.png" alt="2101"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Special\Test\HexoTest\blog&gt;hexo new <span class="string">"Hello by hexo new command"</span></span><br><span class="line">INFO  Created: C:\Special\Test\HexoTest\blog\<span class="built_in">source</span>\_posts\Hello-by-hexo-new-command.md</span><br></pre></td></tr></table></figure>

<p>就会在博客系统中产生一篇名为【Hello by hexo newcommand】的博文：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010959.png" alt="2102"></p>
<p>直接在目录中【source/_posts】拷贝过来一个文件，如【frp.2020032301.md】，Hexo 检测到有文件就会在博客系统中生成一篇博文与文件名相同的博文，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_211234.png" alt="0329"></p>
<p>如果是多层目录，也会对应生成多层路径如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_203410.png" alt="2034"></p>
<h2 id="结合-GitHub-使用"><a href="#结合-GitHub-使用" class="headerlink" title="结合 GitHub 使用"></a>结合 GitHub 使用</h2><h3 id="GitHub-创建个人仓库"><a href="#GitHub-创建个人仓库" class="headerlink" title="GitHub 创建个人仓库"></a>GitHub 创建个人仓库</h3><p>登录 GitHub ,新建仓库（New repository）,在 Repository name 输入【你的用户名.github.io】，这样配置在后面部署到 GitHub 时就能被失败，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_215644.png" alt="2327"></p>
<h3 id="Git-与-GitHub-帐号绑定"><a href="#Git-与-GitHub-帐号绑定" class="headerlink" title="Git 与 GitHub 帐号绑定"></a>Git 与 GitHub 帐号绑定</h3><ol>
<li>配置 git 全局的的用户名和邮箱</li>
</ol>
<p>将 git 全局的的用户名和邮箱配置成 GitHub：</p>
<blockquote>
<ol>
<li>使用命令 <code>git config --global user.name &quot;你的GitHub用户名&quot;</code> 配置 git 全局的的用户名。</li>
<li>使用命令 <code>git config --global user.email &quot;你的GitHub使用的邮箱&quot;</code> 配置 git 全局的的邮箱。</li>
</ol>
</blockquote>
<p>范例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ git config --global user.name <span class="string">"kungge"</span></span><br><span class="line"></span><br><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ git config --global user.email <span class="string">"kunggewan@hotmail.com"</span></span><br><span class="line"></span><br><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ git config user.name</span><br><span class="line">kungge</span><br><span class="line"></span><br><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ git config user.email</span><br><span class="line">kunggewan@hotmail.com</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>生成密钥</li>
</ol>
<p>使用命令 <code>ssh-keygen -t rsa -C &quot;kunggewan@hotmail.com&quot;</code> 后一直回车即可，范例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"kunggewan@hotmail.com"</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/Administrator/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/Administrator/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/Administrator/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:97THjWf3vbYf4BpwOfUra/sz/Sr0gk8SFNEU9RotcM0 kunggewan@hotmail.com</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 3072]----+</span></span><br><span class="line"><span class="string">|          o++ooo |</span></span><br><span class="line"><span class="string">|           ..o oE|</span></span><br><span class="line"><span class="string">|          .  .o o|</span></span><br><span class="line"><span class="string">|         .  o .+ |</span></span><br><span class="line"><span class="string">|        S.o+.... |</span></span><br><span class="line"><span class="string">|         .o++o.o.|</span></span><br><span class="line"><span class="string">|          .++++o*|</span></span><br><span class="line"><span class="string">|          .o=o+**|</span></span><br><span class="line"><span class="string">|           oo===%|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure>

<p>这样就在目录【C:\Users\你的用户名.ssh】中生成密钥，如【C:\Users\Administrator.ssh】中：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_222602.png" alt="2309"></p>
<ol start="3">
<li>将生成的密钥更新到 GitHub 上</li>
</ol>
<p>打开 GitHub settings 下的 【SSH and GPG keys】，然后添加 SSH Key，Title 自取，Key 的内容为上面生成的文件【id_rsa.pub】的内容：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_222710.png" alt="2312"></p>
<p>点击【Add SSH Key】后会在列表中显示新增的 SSH Key，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_222726.png" alt="2316"></p>
<ol start="4">
<li>验证是否成功</li>
</ol>
<p>使用命令 <code>ssh -T git@github.com</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 /c/Special/Test/HexoTest/blog</span><br><span class="line">$ ssh -T git@github.com</span><br><span class="line">The authenticity of host <span class="string">'github.com (52.74.223.119)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCsp***TxdCARLviKw6E5SY8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>github.com,52.74.223.119<span class="string">' (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Hi kungge! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<h3 id="将-Hexo-部署到-GitHub"><a href="#将-Hexo-部署到-GitHub" class="headerlink" title="将 Hexo 部署到 GitHub"></a>将 Hexo 部署到 GitHub</h3><p>打开配置文件【_config.yml】，将 deploy 节点下内容修改如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;kungge&#x2F;kungge.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>repo 为你上面创建的项目仓库地址。</p>
<p>安装 git 部署插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Special\Test\HexoTest\blog&gt;npm install hexo-deployer-git --save</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@2.1.2: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br><span class="line"></span><br><span class="line">+ hexo-deployer-git@2.1.0</span><br><span class="line">added 1 package from 1 contributor and audited 570 packages <span class="keyword">in</span> 3.271s</span><br><span class="line"></span><br><span class="line">5 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">found 2 low severity vulnerabilities</span><br><span class="line">  run `npm audit fix` to fix them, or `npm audit` <span class="keyword">for</span> details</span><br></pre></td></tr></table></figure>

<p>然后分别执行如下命令：</p>
<ul>
<li><code>hexo clean</code>：清除</li>
<li><code>hexo generate</code>，可简写成 <code>hexo g</code>：生成静态内容</li>
<li><code>hexo deploy</code>，可简写成 <code>hexo d</code>：部署文章</li>
</ul>
<p>也可以组合使用 <code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>。</p>
<p>执行部署命令 <code>hexo deploy</code> 时，会要求输入 GitHub 的用户名和密码：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_224043.png" alt="2324"></p>
<br>

<p>登录确认，如果出现如下则表示部署成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_232554.png" alt="2325"></p>
<p><em>注：如果失败可参考【P.3 部署到 GitHub 失败】解决。</em></p>
<p>如下已部署到 GitHub 成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_225412.png" alt="2254"></p>
<p>查看 GitHub 仓库代码可看到静态页面已经发布过来了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_001637.png" alt="0017"></p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><h3 id="域名解析设置"><a href="#域名解析设置" class="headerlink" title="域名解析设置"></a>域名解析设置</h3><p>进入域名控制台，本次使用的华为云，添加记录集，主机记录，如果是主域名，则使用 www，如果是二级域名则使用二级域名名称，如 blog，类型选择 CNAME，值就是你的 github 博客网站项目地址，如 <code>kungge.github.com</code>：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_225323.png" alt="20200508230714"></p>
<p>这个时候如果直接访问你的域名还是会404报错：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_225514.png" alt="20200508230831"></p>
<h3 id="github-设置"><a href="#github-设置" class="headerlink" title="github 设置"></a>github 设置</h3><p>进入你的项目，点击 Settings 进入设置页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_225542.png" alt="20200508231343"></p>
<p>在 GitHub Pages 一栏中找到 Custom domain 然后在文本框中输入你的域名，点击 save 即可：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_225728.png" alt="20200508231455"></p>
<p>其实这个时候就可以通过访问域名来访问网站了。</p>
<h3 id="本地博客设置"><a href="#本地博客设置" class="headerlink" title="本地博客设置"></a>本地博客设置</h3><p>在本地博客的 blog/source  目录中，创建一个记事本，内容输入你的域名，如本次为 blog.kungge.com，保存为 CNAME 文件名称，不要带后缀。</p>
<p>然后使用如下三个命令来重新生成内容并部署到 Github。</p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="安装-hexo-出错"><a href="#安装-hexo-出错" class="headerlink" title="安装 hexo 出错"></a>安装 hexo 出错</h3><p>使用命令 <code>npm install -g hexo-cli</code> 后，再使用的时候报 git 不是内部或外部命令：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_002023.png" alt="2025"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_004703.png" alt="2026"></p>
<p>解决办法：重新删除目录重来。</p>
<h3 id="图片解析不出来"><a href="#图片解析不出来" class="headerlink" title="图片解析不出来"></a>图片解析不出来</h3><p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_211540.png" alt="0329"></p>
<p>可以将图片放置在目录【source】，这样图片就能显示出来：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_212858.png" alt="2130"></p>
<p>但是这样肯定不行，当图片不哦多时则会占据大量的存储空间，文章加载时候会变慢，而且md文件过多图片过多，这个目录就会变得很大，难于维护。</p>
<p>可以使用图床解决这个问题，图片存储在云存储中，如阿里云存储、又拍云存储等第三方的文件存储服务，使用图片链接地址即可，如在 markdown 中就可以这样使用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![2323](http:&#x2F;&#x2F;img.kungge.com&#x2F;a&#x2F;2020-03-24_232349.png)</span><br></pre></td></tr></table></figure>

<h3 id="部署到-GitHub-失败"><a href="#部署到-GitHub-失败" class="headerlink" title="部署到 GitHub 失败"></a>部署到 GitHub 失败</h3><p>使用命令 <code>hexo d</code> 部署如出现访问git地址失败，如： </p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_224648.png" alt="2247"></p>
<p>解决：重新使用命令 <code>hexo d</code> 则会在命令窗口要求输入 github 的用户和密码，回车即可：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_225202.png" alt="2252"></p>
]]></content>
      <categories>
        <category>开源博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 实战</tag>
        <tag>hexo 搭建</tag>
        <tag>hexo 部署</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云和腾讯云服务器 windows server 2016 datacenter 使用记录</title>
    <url>/p/cloud-server-use/</url>
    <content><![CDATA[<h2 id="一、三年前买的阿里云服务器"><a href="#一、三年前买的阿里云服务器" class="headerlink" title="一、三年前买的阿里云服务器"></a>一、三年前买的阿里云服务器</h2><h3 id="1-1-阿里云服务器配置"><a href="#1-1-阿里云服务器配置" class="headerlink" title="1.1 阿里云服务器配置"></a>1.1 阿里云服务器配置</h3><p>使用了阿里云3年了，2020年3月21日 23:59 到期，当初花了四千多买的2核4G的配置，实际如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">实例名称：iZsq2g1yt4yml6Z</span><br><span class="line">实例ID：i-uf679rtwsq2g1yt4yml6	地域：华东 2(华东 2 可用区 A)	付费类型：包年包月</span><br><span class="line">实例系列：系列 II	实例规格：2 vCPU 4 GiB ( 共享计算型 n1, ecs.n1.medium )	I&#x2F;O 优化：I&#x2F;O 优化实例</span><br><span class="line">网络类型：经典网络	安全组：sg-uf69v9qbmmk0wh3hkwtg</span><br><span class="line">内网 IP：10.X.X.X	公网 IP：106.X.X.X</span><br><span class="line">公网带宽：按固定带宽	基础带宽：1Mbps	当前使用带宽 ：1Mbps</span><br><span class="line">系统盘：60GB 高效云盘	操作系统：Windows Server 2016 数据中心版 64位中文版	镜像 ID：win2016_64_datactr_1607_zh-cn_40G_alibase_20161230.vhd</span><br><span class="line">数据盘： 40GB 高效云盘(磁盘ID:d-uf67lpp0wul3irsygsws)</span><br></pre></td></tr></table></figure>

<p>2块云盘：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">高效云盘 </span><br><span class="line">40GiB (2120 IOPS)</span><br><span class="line">	</span><br><span class="line">高效云盘 </span><br><span class="line">60GiB (2280 IOPS)</span><br></pre></td></tr></table></figure>

<h3 id="1-2-阿里云服务器续费价格"><a href="#1-2-阿里云服务器续费价格" class="headerlink" title="1.2 阿里云服务器续费价格"></a>1.2 阿里云服务器续费价格</h3><p>续费价格比较高，1年：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">配置费用：</span><br><span class="line">￥ 2509.20  </span><br><span class="line">省:￥442.80</span><br></pre></td></tr></table></figure>

<p>2年：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">配置费用：</span><br><span class="line">￥ 4215.60  </span><br><span class="line">省:￥1688.40</span><br></pre></td></tr></table></figure>

<p>3年：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">配置费用：</span><br><span class="line">￥ 4717.80  </span><br><span class="line">省:￥4138.20</span><br></pre></td></tr></table></figure>

<p>4年：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">配置费用：</span><br><span class="line">￥ 6290.40  </span><br><span class="line">省:￥5517.60</span><br></pre></td></tr></table></figure>

<p>5年：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">配置费用：</span><br><span class="line">￥ 7863.00  </span><br><span class="line">省:￥6897.00</span><br></pre></td></tr></table></figure>

<h2 id="二、现在买的腾讯云服务器"><a href="#二、现在买的腾讯云服务器" class="headerlink" title="二、现在买的腾讯云服务器"></a>二、现在买的腾讯云服务器</h2><h3 id="2-1-腾讯云服务器配置"><a href="#2-1-腾讯云服务器配置" class="headerlink" title="2.1 腾讯云服务器配置"></a>2.1 腾讯云服务器配置</h3><p>购买了1核2G的配置，实例配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1核 2GB 1Mbps</span><br><span class="line"></span><br><span class="line">系统盘：高性能云硬盘</span><br><span class="line"></span><br><span class="line">网络：Default-VPC</span><br></pre></td></tr></table></figure>

<p>云盘：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">系统盘	</span><br><span class="line">高性能云硬盘</span><br><span class="line">50GB</span><br></pre></td></tr></table></figure>

<p>1M带宽，由于是新用户花了99年买了1年。</p>
<h3 id="2-2-腾讯云服务器使用"><a href="#2-2-腾讯云服务器使用" class="headerlink" title="2.2 腾讯云服务器使用"></a>2.2 腾讯云服务器使用</h3><p>开通之后没找到初始密码在哪，直接重置密码，登录实例：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/windows.2020-03-15_211529.png" alt="pwd"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/windows.2020-03-15_211116.png" alt="登录"></p>
<p>下载RDP文件【ins-azmj7z35-111.229.69.34.rdp】，点击即可弹出登录框：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/windows.2020-03-15_211044.png" alt="rdp登录"></p>
<h3 id="2-3-记录性能表现"><a href="#2-3-记录性能表现" class="headerlink" title="2.3 记录性能表现"></a>2.3 记录性能表现</h3><p>第一次进入，查看任务管理器资源占用情况：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/windows.2020-03-15_213729.png" alt="资源管理器"></p>
<h4 id="2-3-1-安装-IIS"><a href="#2-3-1-安装-IIS" class="headerlink" title="2.3.1 安装 IIS"></a>2.3.1 安装 IIS</h4><p><img src="http://img2.kungge.com/md-content/2020/202003/windows.2020-03-15_214032.png" alt="安装 iis"></p>
<p>安装完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/windows.2020-03-15_215240.png" alt="资源管理器"></p>
<p>打开 iis 查看性能：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/windows.2020-03-15_215445.png" alt="iis"></p>
]]></content>
      <categories>
        <category>云服务器</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>腾讯云</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云已备案域名转移到华为云实践</title>
    <url>/p/cloud-domain-transfer/</url>
    <content><![CDATA[<p>本来想转到腾讯云，新用户购买云服务器奈何只买了1核2G的，再买2核4G的则不用新用户价格了，最后转战到华为云。</p>
<p>问了华为云客服，其表示不必将已在阿里云备案的域名转出来，直接解析就可以了。</p>
<p>那就开始操作。</p>
<h2 id="一、创建公网域名"><a href="#一、创建公网域名" class="headerlink" title="一、创建公网域名"></a>一、创建公网域名</h2><p>在华为云控制台【网络-&gt;云解析服务 DNS】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_151311.png" alt="1528"></p>
<p>进入右侧的【域名解析-&gt;公网解析】，点击由上角【创建公网域名】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_151434.png" alt="1531"></p>
<p>输入域名：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_151541.png" alt="1532"></p>
<p>确定即可完成。</p>
<h2 id="二、添加A记录集"><a href="#二、添加A记录集" class="headerlink" title="二、添加A记录集"></a>二、添加A记录集</h2><p>在列表记录中点击【解析】进入解析管理页面，系统默认添加了SOA类型和NS类型的记录集：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_151722.png" alt="1533"></p>
<h3 id="2-1-为域名添加A记录集"><a href="#2-1-为域名添加A记录集" class="headerlink" title="2.1 为域名添加A记录集"></a>2.1 为域名添加A记录集</h3><p>点击由上角【添加记录集】，值输入服务器公网IP：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_152045.png" alt="1534"></p>
<h3 id="2-2-为子域名添加A记录集"><a href="#2-2-为子域名添加A记录集" class="headerlink" title="2.2 为子域名添加A记录集"></a>2.2 为子域名添加A记录集</h3><p>点击由上角【添加记录集】，主记录填写【www】，值输入服务器公网IP即可。</p>
<p>添加完成，在列表中查看状态一栏显示正常，说明添加成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_154242.png" alt="1534"></p>
<h2 id="三、更改域名的DNS服务器"><a href="#三、更改域名的DNS服务器" class="headerlink" title="三、更改域名的DNS服务器"></a>三、更改域名的DNS服务器</h2><p>域名的DNS服务器设置应和NS记录集的值相符，若不符，则域名解析失败。</p>
<p>所以要到域名注册商（此次为阿里云）将域名的DNS服务器修改为华为云云解析服务的DNS服务器地址。</p>
<p>在阿里云里域名DNS修改管理页面中修改DNS解析。</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234000.png" alt="2353"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234117.png" alt="2354"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234157.png" alt="2355"></p>
<p>确认修改完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234237.png" alt="2355"></p>
<p>查询购买的DNS服务是否生效<br>国际域名使用：<a href="http://www.internic.net/whois.html" target="_blank" rel="noopener">http://www.internic.net/whois.html</a><br>国内域名使用：<a href="https://ewhois.cnnic.cn/WelcomeServlet" target="_blank" rel="noopener">https://ewhois.cnnic.cn/WelcomeServlet</a></p>
<p>kungge.com 是国际域名使用第一个地址：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-27_000947.png" alt="0009"></p>
<p>现在时间时北京时间【2020-03-27 00:10】。</p>
<h2 id="四、验证域名解析记录是否生效"><a href="#四、验证域名解析记录是否生效" class="headerlink" title="四、验证域名解析记录是否生效"></a>四、验证域名解析记录是否生效</h2><h3 id="4-1-ping-命令"><a href="#4-1-ping-命令" class="headerlink" title="4.1 ping 命令"></a>4.1 ping 命令</h3><p>格式：【ping [目标域名]】，如 ping <a href="http://www.kungge.com" target="_blank" rel="noopener">www.kungge.com</a> 和 ping kungge.com</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_154718.png" alt="1547"></p>
<h3 id="4-2-nslookup-命令"><a href="#4-2-nslookup-命令" class="headerlink" title="4.2 nslookup 命令"></a>4.2 nslookup 命令</h3><p>格式：【nslookup [目标域名]】 ,如 nslookup <a href="http://www.kungge.com" target="_blank" rel="noopener">www.kungge.com</a> 和 nslookup kungge.com</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_155927.png" alt="1559"></p>
<p>竟然失败。</p>
<p>指定解析记录类型，格式：nslookup [-qt=类型] 目标域名 权威DNS地址</p>
<p>如 nslookup -qt=A <a href="http://www.kungge.com" target="_blank" rel="noopener">www.kungge.com</a> ns1.huaweicloud-dns.org 和 nslookup -qt=A kungge.com ns1.huaweicloud-dns.org：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_160537.png" alt="1604"></p>
<h3 id="4-3-dig-命令"><a href="#4-3-dig-命令" class="headerlink" title="4.3 dig 命令"></a>4.3 dig 命令</h3><p>这个命令在 linux 执行，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># dig @159.138.17.59 kungge.com IN A</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-37.el7 &lt;&lt;&gt;&gt; @159.138.17.59 kungge.com IN A</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 20634</span><br><span class="line">;; flags: qr aa rd ad; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;kungge.com.                    IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">kungge.com.             300     IN      A       119.3.74.185</span><br><span class="line"></span><br><span class="line">;; Query time: 38 msec</span><br><span class="line">;; SERVER: 159.138.17.59<span class="comment">#53(159.138.17.59)</span></span><br><span class="line">;; WHEN: Sat Mar 28 01:09:08 PDT 2020</span><br><span class="line">;; MSG SIZE  rcvd: 55</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># dig @159.138.17.59 www.kungge.com IN A</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-37.el7 &lt;&lt;&gt;&gt; @159.138.17.59 www.kungge.com IN A</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 43370</span><br><span class="line">;; flags: qr aa rd ad; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;www.kungge.com.                        IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">www.kungge.com.         300     IN      A       119.3.74.185</span><br><span class="line"></span><br><span class="line">;; Query time: 41 msec</span><br><span class="line">;; SERVER: 159.138.17.59<span class="comment">#53(159.138.17.59)</span></span><br><span class="line">;; WHEN: Sat Mar 28 01:11:01 PDT 2020</span><br><span class="line">;; MSG SIZE  rcvd: 59</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>网站访问正常。</p>
]]></content>
      <categories>
        <category>云服务器</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>华为云</tag>
        <tag>域名备案</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云已备案域名变更为华为云备案操作方法记录</title>
    <url>/p/domain-transfer/</url>
    <content><![CDATA[<p>这篇文章主要介绍在阿里云备案了的域名转移到华为云进行备案的整个过程记录。</p>
<h2 id="一、什么是变更备案"><a href="#一、什么是变更备案" class="headerlink" title="一、什么是变更备案"></a>一、什么是变更备案</h2><p>根据华为云针对网站能够被正确访问需要备案，而备案的域名相关信息必须正确：</p>
<ol>
<li>主体信息：公司通信地址、变更主体负责人信息等</li>
<li>网站信息：域名、网站负责人、IP信息</li>
</ol>
<br>

<p>针对已经备案了的域名如果符合上面两种情况（分别对应变更备案类型的变更主体和变更网站）的任一种属于变更备案的情况，都需要重新提交备案审核。</p>
<p>此次备案主体信息未发生变更，网站信息中的IP变更了（网站从阿里云服务器转移到华为云服务器）。</p>
<h2 id="二、备案前准备"><a href="#二、备案前准备" class="headerlink" title="二、备案前准备"></a>二、备案前准备</h2><p>后面备案需要输入ICP备案密码，如果不记得的话应先找回备案密码。</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_223740.png" alt="2238"></p>
<p>进入工信部网站：<a href="http://www.beian.miit.gov.cn/" target="_blank" rel="noopener">http://www.beian.miit.gov.cn/</a></p>
<p>找到右下角【找回备案密码】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_214629.png" alt="2230"></p>
<p>选择备案所在地，如本次选择江西会跳转到【江西省通信管理局ICP/IP地址/域名信息备案管理系统】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_215143.png" alt="2232"></p>
<p>提交后密码会发送到手机：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_215153.png" alt="2234"></p>
<p>手机短信里会有备案密码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">工业和信息化部网站备案系统-短信通知:</span><br><span class="line">尊敬的用户XX，您于2020-03-28 21:55:16使用了备案密码找回功能，</span><br><span class="line">您找回的密码是：XXXXX，请慎重保管注册密码！ </span><br><span class="line">--工业和信息化部网站备案系统</span><br></pre></td></tr></table></figure>

<h2 id="三、开始备案"><a href="#三、开始备案" class="headerlink" title="三、开始备案"></a>三、开始备案</h2><p>进入华为云控制台的备案管理，导入备案：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_233521.png" alt="2205"></p>
<p>由于是在阿里云备案的，因此点击【开始备案】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_233612.png" alt="2206"></p>
<p>备案信息可通过网站也可通过华为云APP提交，华为云官方推荐APP，本次选择后者。</p>
<p>如果本地没有下载华为云官方APP，可以手机扫描二维码下载。</p>
<p>打开华为云官方APP，进入控制台，选择网站备案：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_220945.png" alt="2210"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_221054.png" alt="2211"></p>
<p>开始备案。</p>
<h3 id="3-1-主体信息填写"><a href="#3-1-主体信息填写" class="headerlink" title="3.1 主体信息填写"></a>3.1 主体信息填写</h3><p>进入上传资料页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_221416.png" alt="2214"></p>
<p>上传完成，验证备案类型：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_221538.png" alt="2216"></p>
<p>进入主体信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_221659.png" alt="2217"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_221908.png" alt="2219"></p>
<h3 id="3-2-网站信息填写"><a href="#3-2-网站信息填写" class="headerlink" title="3.2 网站信息填写"></a>3.2 网站信息填写</h3><p>下一步进入网站信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_222014.png" alt="2220"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_222118.png" alt="2221"></p>
<h3 id="3-3-上传资料"><a href="#3-3-上传资料" class="headerlink" title="3.3 上传资料"></a>3.3 上传资料</h3><p>下一步进入上传资料：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_222215.png" alt="2222"></p>
<p>如果属于其描述的情况，还需要上传相关证件，本次不属于。</p>
<h3 id="3-4-真实性核验"><a href="#3-4-真实性核验" class="headerlink" title="3.4 真实性核验"></a>3.4 真实性核验</h3><p>进入真实性核验：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_222440.png" alt="2225"></p>
<p>下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_222625.png" alt="2226"></p>
<p>输入备案密码，确认：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_223851.png" alt="2239"></p>
<p>后面等待备案审核结果。</p>
<h2 id="P、常见问题"><a href="#P、常见问题" class="headerlink" title="P、常见问题"></a>P、常见问题</h2><h3 id="P-1-接入商审核驳回"><a href="#P-1-接入商审核驳回" class="headerlink" title="P.1 接入商审核驳回"></a>P.1 接入商审核驳回</h3><p>范例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">订单历史记录</span><br><span class="line">2020-04-02 10:15:47</span><br><span class="line">接入商审核驳回</span><br><span class="line">尊敬的华为云客户您好：</span><br><span class="line">如电话13041XXXX60沟通，现对您的备案做驳回修改意见如下：</span><br><span class="line">1.因管局规定，您备案成功的网站www.kungge.com&#x2F;www.vrgamehome.com必须开放并且下方放置备案号放置工信部链接http:&#x2F;&#x2F;beian.miit.gov.cn&#x2F;。</span><br><span class="line">2.身份证不清晰，需您提供原件的拍照件或者扫描件，对焦拍摄，避免反光，要求清晰看到字体，背景一致，证件四角拍摄上即可。（您可以平行放置，寻找光线比较好的地方拍照，避免反光）</span><br><span class="line">3.真实性核验视频不符合要求（有其他物体出现），需重新拍摄，要求：背景必须为纯白色（没有任何杂物），坐姿或站姿端正，两肩露出上方留白进行清晰拍摄，请知悉。</span><br><span class="line">4.管局规定，个人备案网站具体内容需备注</span><br><span class="line">请保持备案订单中所有电话畅通，以便我司与管局联系。请耐心等待，谢谢！</span><br><span class="line">如有备案咨询请拨打4000-955-988按1转5联系我们，请知悉</span><br></pre></td></tr></table></figure>

<p>里面有4个问题，我们来一个个解决。</p>
<h4 id="P-1-1-网站开放并且下方放置备案号放置工信部链接"><a href="#P-1-1-网站开放并且下方放置备案号放置工信部链接" class="headerlink" title="P.1.1 网站开放并且下方放置备案号放置工信部链接"></a>P.1.1 网站开放并且下方放置备案号放置工信部链接</h4><p>就是页面上要放一个链接，链接标题是你的备案号，范例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://beian.miit.gov.cn/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>赣ICP备16000944号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="P-1-2-身份证不清晰"><a href="#P-1-2-身份证不清晰" class="headerlink" title="P.1.2 身份证不清晰"></a>P.1.2 身份证不清晰</h4><p>重拍身份证上传。</p>
<h4 id="P-1-3-真实性核验视频不符合要求"><a href="#P-1-3-真实性核验视频不符合要求" class="headerlink" title="P.1.3 真实性核验视频不符合要求"></a>P.1.3 真实性核验视频不符合要求</h4><p>要求：背景必须为纯白色（没有任何杂物），坐姿或站姿端正，两肩露出上方留白进行清晰拍摄。</p>
<h4 id="P-1-4-个人备案网站具体内容需备注"><a href="#P-1-4-个人备案网站具体内容需备注" class="headerlink" title="P.1.4 个人备案网站具体内容需备注"></a>P.1.4 个人备案网站具体内容需备注</h4><p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-10_205719.png" alt="2058"></p>
<p>这应该是默认的备注。</p>
]]></content>
      <categories>
        <category>云服务器</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>华为云</tag>
        <tag>备案域名</tag>
      </tags>
  </entry>
  <entry>
    <title>内存流得到得字节数组保存文件打开失败问题解决记录</title>
    <url>/p/dotnet-memorystream-file/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>文件接入了 ECM 系统，使用工具类根据 ecmId 获取文件，主要代码如下：</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> (MemoryStream stream = DownLoadFile(ecmId, <span class="keyword">out</span> fileName))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">byte</span>[] bytes3 = <span class="keyword">new</span> <span class="keyword">byte</span>[stream.Length];</span><br><span class="line">    stream.Read(bytes, <span class="number">0</span>, bytes.Length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>DownLoadFile 方法返回 MemoryStream，然后得到一个字节数组用来保存文件，发现得到字节数组保存文件打开失败：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/csharp.2020-03-19_134007.png" alt="打开失败"></p>
<h2 id="问题原因分析"><a href="#问题原因分析" class="headerlink" title="问题原因分析"></a>问题原因分析</h2><p>使用了3个方法，都是通过内存流来获取字节数组：</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">DownloadFileByEcmIdV1</span>(<span class="params"><span class="keyword">string</span> ecmId, <span class="keyword">out</span> <span class="keyword">string</span> fileName</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fileName = <span class="keyword">string</span>.Empty;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> stream = _operation.DownLoadFile(ecmId, <span class="keyword">out</span> fileName))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[stream.Length];</span><br><span class="line">        <span class="keyword">string</span> str1_1= Encoding.UTF8.GetString(buffer);</span><br><span class="line">        stream.Read(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">        <span class="keyword">string</span> str1_2 = Encoding.UTF8.GetString(buffer);</span><br><span class="line">        <span class="keyword">return</span> buffer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">DownloadFileByEcmIdV2</span>(<span class="params"><span class="keyword">string</span> ecmId, <span class="keyword">out</span> <span class="keyword">string</span> fileName</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fileName = <span class="keyword">string</span>.Empty;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> stream = _operation.DownLoadFile(ecmId, <span class="keyword">out</span> fileName))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = stream.GetBuffer();</span><br><span class="line">        <span class="keyword">string</span> str2 = Encoding.UTF8.GetString(buffer);</span><br><span class="line">        <span class="keyword">return</span> buffer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">DownloadFileByEcmIdV3</span>(<span class="params"><span class="keyword">string</span> ecmId, <span class="keyword">out</span> <span class="keyword">string</span> fileName</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fileName = <span class="keyword">string</span>.Empty;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> stream = _operation.DownLoadFile(ecmId, <span class="keyword">out</span> fileName))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = stream.ToArray();</span><br><span class="line">        <span class="keyword">string</span> str3 = Encoding.UTF8.GetString(buffer);</span><br><span class="line">        <span class="keyword">return</span> buffer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>DownloadFileByEcmIdV1</li>
</ol>
<p>stream.Length=102971<br>str1_1 是空的（默认是数量为流长度个0），内容全是 【\0\0\0…】，str1_2 内容和 str1_1 一样，说明没有读进去</p>
<ol start="2">
<li>DownloadFileByEcmIdV2</li>
</ol>
<p>buffer大小为 131072<br>sty2（Encoding.UTF8.GetString(buffer)） 内容出现乱码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%PDF-1.5</span><br><span class="line">%����</span><br><span class="line">9 0 obj</span><br><span class="line">&lt;&lt;&#x2F;Filter&#x2F;FlateDecode&#x2F;Length 1999&gt;&gt;stream</span><br><span class="line">x��Z͎�6~7���P,����]��A���&#x2F;�.)Q�e�3��h��E�)J$��Ŀ&#123;��&#96;U���Z%~�,�*</span><br><span class="line">*e&#39;#���!�4��Le��u�L���ћ���&#x2F;�x���x���՝�D�-��G�,�t����٧�C��Ok�ͩ&#123;~?�?p)�</span><br><span class="line">ف����u4.�Eǥ��D���$~�K</span><br><span class="line">I��I&lt;�&#123;���P^&lt;����2�8��N	���g�x�,�x��~Ci�eu�(���&#x3D;�[j-��[�-p�����������X�(��t��Z�aJv�����&#39;S�!�%�����9�U2��3��g!�I���*J�J|x����:�9��&amp;#nн�������ν�_pj\�em��J�s.YA%�:�А</span><br><span class="line">exn�P�*���R���N�Y�VR&#123;�l�pi������&#125;��&lt;��w�q8�l5�dG~&#125;t&#x2F;]�����A.��@w�����W�����ܗ^n��W��h���[</span><br></pre></td></tr></table></figure>

<p>试了 Encoding.Default.GetString(buffer) 等其它的编码得到的都是乱码。</p>
<ol start="3">
<li>DownloadFileByEcmIdV3</li>
</ol>
<p>buffer 大小为 102971，和上面一样 str3 内容是乱码。</p>
<p>增加第4个方法：</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">DownloadFileByEcmIdV4</span>(<span class="params"><span class="keyword">string</span> ecmId, <span class="keyword">out</span> <span class="keyword">string</span> fileName</span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       fileName = <span class="keyword">string</span>.Empty;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">using</span> (<span class="keyword">var</span> stream = _operation.DownLoadFile(ecmId, <span class="keyword">out</span> fileName))</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[stream.Length];</span><br><span class="line">           <span class="keyword">int</span> count= stream.Read(buffer, <span class="number">0</span>,<span class="number">1024</span>);</span><br><span class="line">           <span class="keyword">while</span>(count&lt; stream.Length)</span><br><span class="line">           &#123;</span><br><span class="line">               buffer[count++] = Convert.ToByte(stream.ReadByte());</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">string</span> str4 = Encoding.UTF8.GetString(buffer);</span><br><span class="line">           <span class="keyword">return</span> buffer;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>stream.ReadByte() 从内存中读取一个字节报错：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cs.2020-03-23_152042.png" alt="报错"></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">stream.CanRead</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">stream.Capacity</span><br><span class="line"><span class="number">131072</span></span><br><span class="line">stream.Length</span><br><span class="line"><span class="number">102971</span></span><br></pre></td></tr></table></figure>

<p>GetBuffer() 是 Stream 中 buffer 地址的引用传递，速度很快，但是会把很多无用数据所占用地址空间传递出来。<br>ToArrary() 是将 Stream 中 数据复制到一个 byte[] 中，速度比 GetBuffer() 慢，但是不会将无用数据放进去，但是长度。</p>
<p>Encoding.Default.GetString 得到是乱码无法看出数据 ，将上面3个方法中的 buffer 转成 Base64 数据内容:</p>
<ol>
<li>DownloadFileByEcmIdV1</li>
</ol>
<p>初始化的buffer和经过 stream.Read 后的 buffer 的 Base64 内容一样都是【AAA…】，空白内容，总共135行：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-23_174312.png" alt="1743"></p>
<ol start="2">
<li>DownloadFileByEcmIdV2</li>
</ol>
<p>buffer 的 Base64 总共172行，是在135行基础上填了很多空白：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-23_174938.png" alt="1749"></p>
<p>说明 GetBuffer() 把很多无用数据所占用地址空间传递出来了。</p>
<ol start="3">
<li>DownloadFileByEcmIdV3</li>
</ol>
<p>buffer 的 Base64 总共135行，全是数据内容：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-23_175227.png" alt="1752"></p>
<p>注：其实是134行，因为第一行为了方便记录人为加了注释。</p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>使用 <code>stream.ToArray()</code> 得到字节数组保持的文件能正常打开。</p>
]]></content>
      <categories>
        <category>DotNet</category>
      </categories>
      <tags>
        <tag>流操作</tag>
        <tag>内存流</tag>
        <tag>文件操作</tag>
      </tags>
  </entry>
  <entry>
    <title>.net 运行报错：程序集“”中的类型“”的方法“”没有实现</title>
    <url>/p/dotnet-runerror-dll13/</url>
    <content><![CDATA[<p>A项目编译正常，运行报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;程序集“Cn.XX.BLL, Version&#x3D;1.0.0.0, Culture&#x3D;neutral, PublicKeyToken&#x3D;null”中的类型“Cn.XX.BLL.LendingBLL”的方法“QueryTask”没有实现。&quot;:&quot;Cn.XX.BLL.LendingBLL&quot;</span><br></pre></td></tr></table></figure>

<p>A项目中的 dll 经反编译【Cn.XX.BLL】发现类【LendingBLL】方法【QueryTask】是有的，其内部会调用【Cn.XX.DAL】的 QueryTask 方法，经查这个 DAL 组件的内部也有 QueryTask 方法。</p>
<p>原因：如果方法是有实现的，一般出现这种问题的原因是 dll 生成版本问题，如本次项目中引用的【Cn.XX.BLL】版本是【369KB】的文件，是老的 dll,但是发现【Cn.XX.BLL】所在项目重新生成的 dll 大小是373KB，而其引用的【Cn.XX.DAL】的大小和A项目中的大小是一样的，说明A项目使用【Cn.XX.DAL】使用是最新的，但是【Cn.XX.BLL】不是最新的。</p>
<p>解决办法：清理A项目，然后将引用的【Cn.XX.BLL】使用最新的，再重新生成项目，运行即可正常。</p>
]]></content>
      <categories>
        <category>DotNet</category>
      </categories>
      <tags>
        <tag>dotnet</tag>
        <tag>运行报错</tag>
      </tags>
  </entry>
  <entry>
    <title>git 分支常用常用操作</title>
    <url>/p/git-branch/</url>
    <content><![CDATA[<ul>
<li>查看所有分支：<code>git branch -a</code></li>
<li>查看当前使用的分支：<code>git branch</code></li>
<li>切换分支：<code>git checkout [branchName]</code></li>
</ul>
<h2 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h2><p>先将远程代码下载至本地，范例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wankun@SH-WYZCY-XYFD MINGW64 /d/svn/Loan/branches/KUN-Console_Git</span><br><span class="line">$ git <span class="built_in">clone</span> http://10.138.61.72/abc/loan/console/Cn.XXX.AssistTask.git</span><br><span class="line">Cloning into <span class="string">'Cn.XXX.AssistTask'</span>...</span><br><span class="line">remote: Counting objects: 136, <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (82/82), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 136 (delta 70), reused 97 (delta 47)</span><br><span class="line">Receiving objects: 100% (136/136), 3.97 MiB | 22.96 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (70/70), <span class="keyword">done</span>.</span><br></pre></td></tr></table></figure>

<p>查看分支：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wankun@SH-WYZCY-XYFD MINGW64 /d/svn/Loan/branches/KUN-Console_Git/Cn.XXX.AssistTask (master)</span><br><span class="line">$ git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/develop</span><br><span class="line">  remotes/origin/develop_abc-IR-0028</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure>

<h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><p>前面查看分支可知本地只有【master】分支，而远程分支有:</p>
<ul>
<li>remotes/origin/HEAD -&gt; origin/master</li>
<li>remotes/origin/develop</li>
<li>remotes/origin/develop_abc-IR-0028</li>
<li>remotes/origin/master</li>
</ul>
<p>现将本地分支切换到【develop_abc-IR-0028】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wankun@SH-WYZCY-XYFD MINGW64 /d/svn/Loan/branches/KUN-Console_Git/Cn.XXX.AssistTask (master)</span><br><span class="line">$ git checkout develop_abc-IR-0028</span><br><span class="line">Switched to a new branch <span class="string">'develop_abc-IR-0028'</span></span><br><span class="line">Branch <span class="string">'develop_abc-IR-0028'</span> <span class="built_in">set</span> up to track remote branch <span class="string">'develop_abc-IR-0028'</span> from <span class="string">'origin'</span>.</span><br></pre></td></tr></table></figure>

<p>再次查看分支：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wankun@SH-WYZCY-XYFD MINGW64 /d/svn/Loan/branches/KUN-Console_Git/Cn.XXX.AssistTask (develop_abc-IR-0028)</span><br><span class="line">$ git branch -a</span><br><span class="line">* develop_abc-IR-0028</span><br><span class="line">  master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/develop</span><br><span class="line">  remotes/origin/develop_abc-IR-0028</span><br><span class="line">  remotes/origin/master</span><br><span class="line"></span><br><span class="line">wankun@SH-WYZCY-XYFD MINGW64 /d/svn/Loan/branches/KUN-Console_Git/Cn.XXX.AssistTask (develop_abc-IR-0028)</span><br><span class="line">$ git branch</span><br><span class="line">* develop_abc-IR-0028</span><br><span class="line">  master</span><br></pre></td></tr></table></figure>

<p>如果远程新增或删除了分支，需要先使用命令 <code>git pull</code> 先垃取，在查看，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wankun@SH-WYZCY-XYFD MINGW64 /d/svn/Loan/branches/PreLoan_Develop_VBS-IR-0035 (develop_VBS-IR-0)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 586, <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (202/202), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 586 (delta 399), reused 541 (delta 384)</span><br><span class="line">Receiving objects: 100% (586/586), 669.83 KiB | 1.76 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (399/399), <span class="keyword">done</span>.</span><br><span class="line">From http://10.138.61.72/vbs/service-group/web-site/PreLoan</span><br><span class="line">   a79e2e9..fcf21c0  develop        -&gt; origin/develop</span><br><span class="line"> * [new branch]      develop_CR1188 -&gt; origin/develop_CR1188</span><br><span class="line"> * [new branch]      develop_CR1245 -&gt; origin/develop_CR1245</span><br><span class="line"> * [new branch]      develop_CR1247 -&gt; origin/develop_CR1247</span><br><span class="line">   3b08624..25ea3cb  develop_REQ467 -&gt; origin/develop_REQ467</span><br><span class="line">   b422b49..eeb5dce  master         -&gt; origin/master</span><br><span class="line">Already up to date.</span><br></pre></td></tr></table></figure>

<h2 id="将一个分支同步到另一个分支"><a href="#将一个分支同步到另一个分支" class="headerlink" title="将一个分支同步到另一个分支"></a>将一个分支同步到另一个分支</h2><p>如将分支【develop-abc-IR-0035】的修改同步到分支【develop_abc-IR-0035】，先将分支切换到目标分支【develop_abc-IR-0035】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout develop_abc-IR-0035</span><br><span class="line">Switched to branch <span class="string">'develop_abc-IR-0035'</span></span><br><span class="line">Your branch is up to date with <span class="string">'origin/develop_abc-IR-0035'</span>.</span><br></pre></td></tr></table></figure>

<p>然后使用命令 <code>git merge develop-abc-IR-0035</code>，执行后会提示【hint：Waiting for your editor to close the file…】，然后会打开一个文件等待你关闭，被关闭后会继续执行。</p>
<p>范例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wankun@SH-WYZCY-XYFD MINGW64 /d/svn/Loan/branches/PreLoan_Develop_abc-IR-0035 (develop_abc-IR-0035)</span><br><span class="line">$ git merge develop-abc-IR-0035</span><br><span class="line">Merge made by the <span class="string">'recursive'</span> strategy.</span><br><span class="line"> Cn.XXX.abc.Sys.API/Permission/PermisionAPI.cs  |  78 ++++</span><br><span class="line"> Cn.XXX.abc.Sys.BLL/Permission/PermissionBLL.cs |  65 +++</span><br><span class="line"> Cn.XXX.abc.Sys.DAL/Permission/PermissionDal.cs | 320 ++++++++++++++</span><br><span class="line"> .../Cn.XXX.abc.Sys.Entities.csproj             |   1 +</span><br><span class="line"> .../Permission/PermissionEntity.cs                 |  27 ++</span><br><span class="line"> ShareLib/Cn.XXX.AMS.WebService.dll             | Bin 0 -&gt; 12288 bytes</span><br><span class="line"> ShareLib/Cn.XXX.Common.Utility.dll             | Bin 10240 -&gt; 10240 bytes</span><br><span class="line"> ShareLib/Cn.XXX.Common.dll                     | Bin 777728 -&gt; 828928 bytes</span><br><span class="line"> Sys/Cn.XXX.abc.Sys.csproj                      |  16 +</span><br><span class="line"> .../CustomerServiceNumber.aspx                     |   2 +-</span><br><span class="line"> Sys/EmployeeManage/EmployeeAdd.aspx                |   3 +-</span><br><span class="line"> Sys/Product/ProductFeeRules.aspx                   |   4 +-</span><br><span class="line"> Sys/Product/ProductRules.aspx                      |   4 +-</span><br><span class="line"> Sys/UserManage/PermissionAdd.aspx                  | 184 ++++++++</span><br><span class="line"> Sys/UserManage/PermissionAdd.aspx.cs               | 466 +++++++++++++++++++++</span><br><span class="line"> Sys/UserManage/PermissionAdd.aspx.designer.cs      | 267 ++++++++++++</span><br><span class="line"> Sys/UserManage/PermissionManage.aspx               | 129 ++++++</span><br><span class="line"> Sys/UserManage/PermissionManage.aspx.cs            | 312 ++++++++++++++</span><br><span class="line"> Sys/UserManage/PermissionManage.aspx.designer.cs   | 123 ++++++</span><br><span class="line"> Sys/Web.config                                     |   6 +-</span><br><span class="line"> Sys/WorkLocIpMainten/WorkLocationList.aspx         |   2 +-</span><br><span class="line"> 21 files changed, 2000 insertions(+), 9 deletions(-)</span><br><span class="line"> create mode 100644 Cn.XXX.abc.Sys.Entities/Permission/PermissionEntity.cs</span><br><span class="line"> create mode 100644 ShareLib/Cn.XXX.AMS.WebService.dll</span><br><span class="line"> create mode 100644 Sys/UserManage/PermissionAdd.aspx</span><br><span class="line"> create mode 100644 Sys/UserManage/PermissionAdd.aspx.cs</span><br><span class="line"> create mode 100644 Sys/UserManage/PermissionAdd.aspx.designer.cs</span><br><span class="line"> create mode 100644 Sys/UserManage/PermissionManage.aspx</span><br><span class="line"> create mode 100644 Sys/UserManage/PermissionManage.aspx.cs</span><br><span class="line"> create mode 100644 Sys/UserManage/PermissionManage.aspx.designer.cs</span><br></pre></td></tr></table></figure>

<p>提交信息为【Merge branch ‘develop-abc-IR-0035’ into develop_abc-IR-0035】。</p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git分支</tag>
        <tag>git常用操作</tag>
        <tag>git命令</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 10 中安装并使用 docker 记录</title>
    <url>/p/docker-windows/</url>
    <content><![CDATA[<p>个人不推荐在 windows 中安装 docker，本文仅仅是为了尝试，日常使用 docker 还是安装在 linux 上的。</p>
<h2 id="一、开启-Hyper-V"><a href="#一、开启-Hyper-V" class="headerlink" title="一、开启 Hyper-V"></a>一、开启 Hyper-V</h2><p>打开【启用或关闭 Windows 功能】窗口，勾选：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/docker.2020010201.png" alt="docker.2020010201"></p>
<p>安装完成需要重启才会生效，先不重启，稍后再重启。</p>
<h2 id="二、安装-docker"><a href="#二、安装-docker" class="headerlink" title="二、安装 docker"></a>二、安装 docker</h2><p>下载地址：<a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows" target="_blank" rel="noopener">https://hub.docker.com/editions/community/docker-ce-desktop-windows</a></p>
<p>下载完成后是一个exe文件【Docker for Windows Installer.exe】，双击安装，安装完成后会出现下面的窗口：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/docker.2020010202.png" alt="docker.2020010202"></p>
<p>这时候点击【close and log out】会重启电脑。</p>
<h2 id="三、使用-docker"><a href="#三、使用-docker" class="headerlink" title="三、使用 docker"></a>三、使用 docker</h2><p>启动【Docker for Windows】，启动命令窗口，输入命令【docker version】可查看 docker 版本，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/docker.2020010203.png" alt="docker.2020010202"></p>
<h3 id="3-1-使用-docker-安装-sql-server-数据库"><a href="#3-1-使用-docker-安装-sql-server-数据库" class="headerlink" title="3.1 使用 docker 安装 sql server 数据库"></a>3.1 使用 docker 安装 sql server 数据库</h3><p>1.以管理员身份启动命令窗口，输入命令【docker search mssql】:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;docker search mssql</span><br><span class="line">NAME                                                  DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">microsoft/mssql-server-linux                          Deprecated SQL Server on Linux Container R...   1160              </span><br><span class="line">microsoft/mssql-server-windows-developer              Official Microsoft SQL Server Developer Ed...   373               </span><br><span class="line">microsoft/mssql-server-windows-express                Official Microsoft SQL Server Express Edit...   337               </span><br><span class="line">microsoft/mssql-tools                                 Official images <span class="keyword">for</span> Microsoft SQL Server C...   51                </span><br><span class="line">rsmoorthy/mssql                                       MSSQL Database (version SQL2000)                12                                      [OK]</span><br><span class="line">datagrip/mssql-server-linux                           SQL Server and SQL Server tools on Linux(2...   9                                       [OK]</span><br><span class="line">gantrior/mssql-server-2014-express-windows-with-iis   mssql 2014 + IIS                                4                 </span><br><span class="line">microsoft/mssql-monitoring-influxdb                   Sample Image <span class="keyword">for</span> Influxdb, This image is d...   3                 </span><br><span class="line">mcmoe/mssqldocker                                     Builds on microsoft/mssql-server-linux and...   3                                       [OK]</span><br><span class="line">tsgkadot/mssql-tools                                  SQL Server tools on Linux (sqlcmd)              3                                       [OK]</span><br><span class="line">bitwarden/mssql                                       The Bitwarden database.                         2                 </span><br><span class="line">jboesl/mssql-server-linux                             mssql-server-linux with mssql-tools instal...   2                                       [OK]</span><br><span class="line">ansibleplaybookbundle/mssql-apb                       MS SQL Server on Linux (APB)                    2                                       [OK]</span><br><span class="line">ansibleplaybookbundle/mssql-remote-apb                An APB that deploys Microsoft SQL Server        1                                       [OK]</span><br><span class="line">microsoft/mssql-monitoring-collectd                   This Sample image is designed to work with...   1                 </span><br><span class="line">dhwanilraval/mssql-docker-rhel-official               SQL Server <span class="keyword">in</span> Docker                            1                                       [OK]</span><br><span class="line">metaskills/mssql-server-linux-rails                   Microsoft SQL Server <span class="keyword">for</span> Linux - Rails Ada...   1                 </span><br><span class="line">liaisonintl/mssql-server-linux                        mssql-server-linux                              0                                       [OK]</span><br><span class="line">uwthalesians/mssql                                    Mssql Database Server <span class="keyword">for</span> Perceptia             0                 </span><br><span class="line">softwareplant/mssql                                   SQL Server <span class="built_in">test</span> database                        0                                       [OK]</span><br><span class="line">christianacca/mssql-server-windows-express            Fork of official microsoft/mssql-server-wi...   0                 </span><br><span class="line">plever/mssql-server-linux-plus                        Adding additional tooling to the base sql ...   0                 </span><br><span class="line">tchughesiv/mssql-server-linux                         CentOS build                                    0                                       [OK]</span><br><span class="line">iconviet/mssql                                                                                        0                 </span><br><span class="line">astronomerio/mssql-source                             MSSQL <span class="built_in">source</span>.                                   0                                       [OK]</span><br></pre></td></tr></table></figure>

<p>2.输入命令【docker pull microsoft/mssql-server-linux】下载镜像：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;docker pull microsoft/mssql-server-linux</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from microsoft/mssql-server-linux</span><br><span class="line">59ab41dd721a: Pull complete</span><br><span class="line">57da90bec92c: Pull complete</span><br><span class="line">06fe57530625: Pull complete</span><br><span class="line">5a6315cba1ff: Pull complete</span><br><span class="line">739f58768b3f: Pull complete</span><br><span class="line">0b751601bca3: Pull complete</span><br><span class="line">bcf04a22644a: Pull complete</span><br><span class="line">6b5009e4f470: Pull complete</span><br><span class="line">a9dca2f6722a: Pull complete</span><br><span class="line">Digest: sha256:9b700672670bb3db4b212e8aef841ca79eb2fce7d5975a5ce35b7129a9b90ec0</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> microsoft/mssql-server-linux:latest</span><br></pre></td></tr></table></figure>

<p>3.创建并运行容器</p>
<p>输入命令【docker run -e “ACCEPT_EULA=Y” -e “SA_PASSWORD=Password01!” -p 1445:1433 –name MSSQL_loan -d microsoft/mssql-server-linux】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;docker run -e <span class="string">"ACCEPT_EULA=Y"</span> -e <span class="string">"SA_PASSWORD=Password01!"</span> -p 1445:1433 --name MSSQL_loan -d microsoft/mssql-server-linux</span><br><span class="line">f5d2ce8994e5161b7f0de1b4aea88a6ad6380805d24e2e7c7c1b59054f4ff3d6</span><br></pre></td></tr></table></figure>

<p>4.登录容器</p>
<p>输入命令【docker exec -it MSSQL_loan /bin/bash】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;docker <span class="built_in">exec</span> -it MSSQL_loan /bin/bash</span><br><span class="line">root@f5d2ce8994e5:/<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>5.连接到 sqlcmd</p>
<p>输入命令【/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ‘Password01!’】:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@f5d2ce8994e5:/<span class="comment"># /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'Password01!'</span></span><br><span class="line">1&gt;</span><br></pre></td></tr></table></figure>

<p>6.创建数据库并进行测试</p>
<p>输入命令【CREATE DATABASE TestDB】创建一个数据库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1&gt; CREATE DATABASE TestDB</span><br><span class="line">2&gt; go</span><br></pre></td></tr></table></figure>

<p>输入命令【select name,database_id,create_date from sys.Databases】查看已存在的数据库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1&gt; select name,database_id,create_date from sys.Databases</span><br><span class="line">2&gt; go</span><br><span class="line">name                                                                                                                             database_id create_date</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------- ----------- -----------------------</span><br><span class="line">master                                                                                                                                     1 2003-04-08 09:13:36.390</span><br><span class="line">tempdb                                                                                                                                     2 2020-01-03 01:46:17.400</span><br><span class="line">model                                                                                                                                      3 2003-04-08 09:13:36.390</span><br><span class="line">msdb                                                                                                                                       4 2018-11-30 15:04:03.013</span><br><span class="line">TestDB                                                                                                                                     5 2020-01-03 01:57:55.683</span><br><span class="line"></span><br><span class="line">(5 rows affected)</span><br><span class="line">1&gt;</span><br></pre></td></tr></table></figure>
<p>7.使用客户端 mssms 连接创建的 sqlserver</p>
<p>服务器名称就是你的本地【IP,端口】，如本次前面设置的是1445，</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/docker.2020010204.png" alt="docker.2020010204"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/docker.2020010205.png" alt="docker.2020010205"></p>
<h3 id="3-2-使用-docker-还原-sql-server-数据库"><a href="#3-2-使用-docker-还原-sql-server-数据库" class="headerlink" title="3.2 使用 docker 还原 sql server 数据库"></a>3.2 使用 docker 还原 sql server 数据库</h3><p>1.在容器内创建一个目录</p>
<p>如果是继续上面的步骤，则先退出【quit】到容器管理中:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1&gt; quit</span><br><span class="line">root@f5d2ce8994e5:/<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>如果没有登录容器，则先登录容器【docker exec -it MSSQL_loan /bin/bash】。</p>
<p>使用命令【mkdir /var/opt/mssql/backup】创建一个目录，然后再退出容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@f5d2ce8994e5:/<span class="comment"># mkdir /var/opt/mssql/backup</span></span><br><span class="line">root@f5d2ce8994e5:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure>

<p>3.将数据库备份文件(.bak文件)复制到容器中</p>
<p>使用命令【docker cp E:/job/techTest/docker/sqlserver/Loan.bak MSSQL_loan:/var/opt/mssql/backup】进行复制：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;docker cp E:/job/techTest/docker/sqlserver/Loan.bak MSSQL_loan:/var/opt/mssql/backup</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure>

<p>4.还原数据库</p>
<p>先登录容器【docker exec -it MSSQL_loan /bin/bash】，列出备份数据文件的逻辑名，使用命令【/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ‘Password01!’ -Q ‘RESTORE FILELISTONLY FROM DISK = “/var/opt/mssql/backup/Loan.bak”‘ | tr -s ‘ ‘ | cut -d ‘ ‘ -f 1-2】：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;docker <span class="built_in">exec</span> -it MSSQL_loan /bin/bash</span><br><span class="line">root@f5d2ce8994e5:/<span class="comment"># /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'Password01!' -Q 'RESTORE FILELISTONLY FROM DISK = "/var/opt/mssql/backup/Loan.bak"' | tr -s ' ' | cut -d ' ' -f 1-2</span></span><br><span class="line">LogicalName PhysicalName</span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Loan E:\PreLoan\Data\Loan.mdf</span><br><span class="line">Loan_log E:\PreLoan\Data\Loan_0.ldf</span><br><span class="line"></span><br><span class="line">(2 rows</span><br><span class="line">root@f5d2ce8994e5:/<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>还原数据库，使用命令【/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ‘Password01!’ -Q ‘RESTORE DATABASE Loan FROM DISK = “/var/opt/mssql/backup/Loan.bak” WITH MOVE “Loan” TO “/var/opt/mssql/data/Loan.mdf” , MOVE “Loan_log” TO “/var/opt/mssql/data/Loan.ldf”‘】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/docker.2020010206.png" alt="docker.2020010206"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/docker.2020010207.png" alt="docker.2020010207"></p>
<h3 id="3-3-使用-docker-备份-sql-server-数据库"><a href="#3-3-使用-docker-备份-sql-server-数据库" class="headerlink" title="3.3 使用 docker 备份 sql server 数据库"></a>3.3 使用 docker 备份 sql server 数据库</h3><p>TODO</p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>容器</tag>
      </tags>
  </entry>
  <entry>
    <title>本地分支推送到远程分支报错：fatal:refusing to merge unrelated histories 一次解决记录</title>
    <url>/p/git-push-error/</url>
    <content><![CDATA[<h2 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h2><p>A 在本地已经建好了项目，B 在 gitlab 上建立了一个空的 maste。<br>A 在本地使用 git clone 后，将本地项目文件提交到了本地仓库，在将本地 master 推送到远程 master 报无权限的错误。<br>这时候 A 叫 C 在远程 gitlab 先建立一个分支 develop1，里面包含一个 readme.md 文件。<br>A 在本地也建立了一个同名的开发分支（本地的 master 的1个副本），由于之前已经提交了本地代码到本地仓库，分支 develop1 没有了 【.gitignore】 文件，导致一些不相干的文件（如 xx.dll等）也在【未暂存文件】列表中，解决这个问题之后再次推送到远程 develop1 报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git -c diff.mnemonicprefix=<span class="literal">false</span> -c core.quotepath=<span class="literal">false</span> --no-optional-locks push -v --tags --<span class="built_in">set</span>-upstream origin develop_REQ514:develop_REQ514</span><br><span class="line">Pushing to http://192.168.2.165/VPS/service-group/console/Cn.Vt.VPS.FoticLending.git</span><br><span class="line">To http://192.168.2.165/VPS/service-group/console/Cn.Vt.VPS.FoticLending.git</span><br><span class="line"> ! [rejected]        develop_REQ514 -&gt; develop_REQ514 (non-fast-forward)</span><br><span class="line">error: failed to push some refs to <span class="string">'http://192.168.2.165/VPS/service-group/console/Cn.Vt.VPS.FoticLending.git'</span></span><br><span class="line">hint: Updates were rejected because the tip of your current branch is behind</span><br><span class="line">hint: its remote counterpart. Integrate the remote changes (e.g.</span><br><span class="line">hint: <span class="string">'git pull ...'</span>) before pushing again.</span><br><span class="line">hint: See the <span class="string">'Note about fast-forwards'</span> <span class="keyword">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure>

<p>很明显当前分支落后于远程分支，先拉取，然后再推送，还报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git -c diff.mnemonicprefix=<span class="literal">false</span> -c core.quotepath=<span class="literal">false</span> --no-optional-locks fetch origin</span><br><span class="line"></span><br><span class="line">git -c diff.mnemonicprefix=<span class="literal">false</span> -c core.quotepath=<span class="literal">false</span> --no-optional-locks pull origin develop_REQ514</span><br><span class="line">From http://192.168.2.165/VPS/service-group/console/Cn.Vt.VPS.FoticLending</span><br><span class="line"> * branch            develop_REQ514 -&gt; FETCH_HEAD</span><br><span class="line"></span><br><span class="line">fatal: refusing to merge unrelated histories</span><br><span class="line">完成时带有错误，见上文。</span><br></pre></td></tr></table></figure>

<h2 id="二、问题原因分析"><a href="#二、问题原因分析" class="headerlink" title="二、问题原因分析"></a>二、问题原因分析</h2><p>本地的仓库和远程的仓库是相互独立的，之前 clone 下来的时候远程只有 master，然后提交本地的更改到本地仓库是通过 master 提交的，如果是直接在远程建立分支 develop1 后再 clone 到本地，然后再直接推送应该不会出现这个问题。</p>
<h2 id="三、问题解决"><a href="#三、问题解决" class="headerlink" title="三、问题解决"></a>三、问题解决</h2><p>先用命令【 git pull origin [分支] —-allow-unrelated-histories】拉取：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wankun@SH-HTYF-WANGK MINGW64 /d/svn/Loan/trunk/VPS_Console/Cn.Vt.VPS.FoticLending (develop_REQ514)</span><br><span class="line">$ git pull origin develop_REQ514 --allow-unrelated-histories</span><br><span class="line">From http://192.168.2.165/VPS/service-group/console/Cn.Vt.VPS.FoticLending</span><br><span class="line"> * branch            develop_REQ514 -&gt; FETCH_HEAD</span><br><span class="line">Merge made by the <span class="string">'recursive'</span> strategy.</span><br><span class="line"> readme.md | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 readme.md</span><br></pre></td></tr></table></figure>

<p>然后在推送到远程即可。</p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git分支</tag>
        <tag>git常用操作</tag>
        <tag>git命令</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云 windows 服务器一些进程占用资源过高分析与解决</title>
    <url>/p/cloud-windows-process/</url>
    <content><![CDATA[<h2 id="一、IIS"><a href="#一、IIS" class="headerlink" title="一、IIS"></a>一、IIS</h2><h3 id="1-1-IIS-内存占用情况"><a href="#1-1-IIS-内存占用情况" class="headerlink" title="1.1 IIS 内存占用情况"></a>1.1 IIS 内存占用情况</h3><p>服务器是 Windows Server 2016 Datacenter，iis 占用情况：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_225933.png" alt="iis"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_232028.png" alt="iis内存占用"></p>
<p>在写这篇文章记录的时候又到了七百多点。</p>
<p>我去占用这么多内存，转到详细看下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_230303.png" alt="iis"></p>
<p>其实这个 IIS Worker Process 这个进程就是w3wp.exe进程，但是为啥这里只有三百多？？？</p>
<p>iis 部署情况：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_225957.png" alt="iis"></p>
<p>公司的1台测试服务器是 Windows Server 2008 R2 Enterprise，IIS Worker Process 占用资源情况：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_230019.png" alt="测试服务器"></p>
<p>内存占用差不多300M，但是上面部署的网站非常多，大概120个（大部分都是开启的），而且一个里面又包含很多应用程序，才占用300M。</p>
<p>而在阿里云只部署了16个网站就占用了五百多M，只有一个是开启的，为啥会相差这么大？</p>
<h3 id="1-2-降低-iis-占用内存探索"><a href="#1-2-降低-iis-占用内存探索" class="headerlink" title="1.2 降低 iis 占用内存探索"></a>1.2 降低 iis 占用内存探索</h3><p>将网站删除内存并没有减少，应该是应用程序池没有停的原因：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_232517.png" alt="应用程序池"></p>
<p>右边点击【设置应用程序池默认设置…】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_232843.png" alt="设置"></p>
<p>公司的测试服务器：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_233033.png" alt="设置"></p>
<p>再把没用的应用程序池删除（应用程序=0），内存占用也没减少。</p>
<p>把使用的应用程序池回收后内存降到了两百多，差不多降了五百的内存，后面也在涨：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-20_234537.png" alt="在涨"></p>
<p>但后面不到保持三百。</p>
<p>持续观察中。。。</p>
<p>第二天上午9.50再次查看，内存回到了四百多：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-21_095144.png" alt="四百多"></p>
<h2 id="二、SQL-Server"><a href="#二、SQL-Server" class="headerlink" title="二、SQL Server"></a>二、SQL Server</h2><h2 id="2-1-SQL-Server-内存占用情况"><a href="#2-1-SQL-Server-内存占用情况" class="headerlink" title="2.1 SQL Server 内存占用情况"></a>2.1 SQL Server 内存占用情况</h2><p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-21_000425.png" alt="sql"></p>
<p>转到详细：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-21_000532.png" alt="sql详细"></p>
<p>对内存设置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-21_001000.png" alt="设置"></p>
<p>公司的测试服务器：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-21_000645.png" alt="占用"></p>
<p>sql server 内存设置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/cloud.2020-03-21_000809.png" alt="设置"></p>
<h2 id="2-2-降低-SQL-Server-占用内存探索"><a href="#2-2-降低-SQL-Server-占用内存探索" class="headerlink" title="2.2 降低 SQL Server 占用内存探索"></a>2.2 降低 SQL Server 占用内存探索</h2><p>由上面可知，设置 sql server 内存的上限很重要，不然会一直增长。</p>
]]></content>
      <categories>
        <category>云服务器</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>阿里云</tag>
      </tags>
  </entry>
  <entry>
    <title>网站从阿里云服务器转移到华为云服务器操作全记录：坤哥网</title>
    <url>/p/site-cloud-transfer/</url>
    <content><![CDATA[<h2 id="一、数据转移"><a href="#一、数据转移" class="headerlink" title="一、数据转移"></a>一、数据转移</h2><h3 id="1-1-网站程序转移"><a href="#1-1-网站程序转移" class="headerlink" title="1.1 网站程序转移"></a>1.1 网站程序转移</h3><p>包括图片二级网站、健身工具二级网站、后台管理二级网站、微信聊天记录二级网站。</p>
<h3 id="1-2-数据库转移"><a href="#1-2-数据库转移" class="headerlink" title="1.2 数据库转移"></a>1.2 数据库转移</h3><p>目前就一个 sql server。</p>
<h3 id="1-3-证书迁移"><a href="#1-3-证书迁移" class="headerlink" title="1.3 证书迁移"></a>1.3 证书迁移</h3><p>SSL 证书。</p>
<h2 id="二、域名解析修改"><a href="#二、域名解析修改" class="headerlink" title="二、域名解析修改"></a>二、域名解析修改</h2><p>目前坤哥网所有的解析：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-23_000426.png" alt="0005"></p>
<p>将记录类型为 A 的记录值修改为华为云服务器的 IP。</p>
<p>目前【<a href="http://www.kungge.com】可以正常访问，【http://kungge.com】还是无法正常访问。" target="_blank" rel="noopener">http://www.kungge.com】可以正常访问，【http://kungge.com】还是无法正常访问。</a></p>
<h2 id="三、域名访问不了排查过程"><a href="#三、域名访问不了排查过程" class="headerlink" title="三、域名访问不了排查过程"></a>三、域名访问不了排查过程</h2><p>过了几天，发现域名访问不了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234645.png" alt="2346"></p>
<p>百度坤哥网，已经没有坤哥网的搜索记录了。</p>
<p>site:<a href="http://www.kungge.com" target="_blank" rel="noopener">www.kungge.com</a> 还是有收录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234833.png" alt="2348"></p>
<p>ping <a href="http://www.kungge.com，这是CDN的地址：">www.kungge.com，这是CDN的地址：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-27_000155.png" alt="0002"></p>
<p>ping kungge.com，解析到了华为服务器：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-27_000233.png" alt="0003"></p>
<p>为啥会访问不了，到服务器上查看发现网站程序并无异常，哦，想起来了，应该是dns解析的问题。</p>
<h2 id="四、DNS解析修改"><a href="#四、DNS解析修改" class="headerlink" title="四、DNS解析修改"></a>四、DNS解析修改</h2><p>这一步为探索过程，请直接略过，直接查看【五、将域名从阿里云转入到华为云】。</p>
<p>本想将网站域名从阿里云转入华为云，但是还是有点麻烦，就直接在阿里云里修改DNS解析。</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234000.png" alt="2353"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234117.png" alt="2354"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234157.png" alt="2355"></p>
<p>确认修改完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-26_234237.png" alt="2355"></p>
<p>查询购买的DNS服务是否生效<br>国际域名使用：<a href="http://www.internic.net/whois.html" target="_blank" rel="noopener">http://www.internic.net/whois.html</a><br>国内域名使用：<a href="https://ewhois.cnnic.cn/WelcomeServlet" target="_blank" rel="noopener">https://ewhois.cnnic.cn/WelcomeServlet</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-27_000947.png" alt="0009"></p>
<p>现在时间时北京时间【2020-03-27 00:10】。</p>
<p>华为云社区文档解释：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">通常，修改的DNS地址可以很快同步到顶级域服务器在互联网中生效。但是，域名服务商的NS记录的TTL值通常设置为48小时，这样假如某些地区缓存了域名的NS记录，则最长需要48小时才能刷新成新的NS记录。</span><br><span class="line"></span><br><span class="line">具体域名的DNS生效时间请以域名服务商处的说明为准。在等待修改生效的期间内，请勿删除域名在原域名服务商处的解析记录，这样即使域名的新DNS没有生效，仍然可以通过访问原DNS进行解析。</span><br></pre></td></tr></table></figure>

<p>修改了dns地址之后，域名已无法 ping 通：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-27_001437.png" alt="0014"></p>
<p>先点击下同步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-27_001742.png" alt="0018"></p>
<p>一直显示【正在载入…】好几分钟了，去洗个澡回来看看结果。。。</p>
<p>洗完了，还没完成。。。</p>
<p>难道要等上一段时间，好吧，后面继续，先睡个觉，明天看看。</p>
<p>第二天还是【正在载入…】，刷新网页已经退出登录了，应该是已经好了的。</p>
<p>看来要在华为云中添加公网域名。</p>
<p>最后发现原因是 <a href="http://www.kungge.com" target="_blank" rel="noopener">www.kungge.com</a> 启用了阿里云的CDN，而 kungge.com 仍然访问的是华为云服务器的 IP，但是80端口安全组中没有开通，开通就可以正常访问了。</p>
<h2 id="五、将域名从阿里云转入到华为云"><a href="#五、将域名从阿里云转入到华为云" class="headerlink" title="五、将域名从阿里云转入到华为云"></a>五、将域名从阿里云转入到华为云</h2><p>详细参考：<a href="/p/cloud-domain-transfer/">阿里云已备案域名转移到华为云实践</a></p>
<h2 id="六、验证网站功能是否正常"><a href="#六、验证网站功能是否正常" class="headerlink" title="六、验证网站功能是否正常"></a>六、验证网站功能是否正常</h2><p>浏览器访问网站还是失败。。。</p>
<p>根据华为云官方文档介绍，网站访问失败的情况：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-28_210653.png" alt="2107"></p>
<h2 id="七、华为云备案"><a href="#七、华为云备案" class="headerlink" title="七、华为云备案"></a>七、华为云备案</h2><p>（其实可以不用转移备案也能正常访问）坤哥网由于在阿里云备案过，因此属于变更备案，华为云针对变更备案的类型的解释：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">变更主体：变更主体中的信息，如修改公司通信地址、变更主体负责人信息等。</span><br><span class="line">变更网站：变更网站中的信息，如新增域名、修改网站负责人、变更IP等。</span><br><span class="line"></span><br><span class="line">须知：变更备案期间，已备案的域名可正常使用，需确保网站内容与备案信息相符，新添加的域名应备案成功后才能访问</span><br></pre></td></tr></table></figure>
<p>s<br>很显然，坤哥网此次属于变更网站中的变更IP。</p>
<p>详细见【<a href="/p/domain-transfer/">阿里云已备案域名变更为华为云备案操作方法记录</a>】</p>
<h2 id="八、百度收录问题"><a href="#八、百度收录问题" class="headerlink" title="八、百度收录问题"></a>八、百度收录问题</h2><p>如果网站停止访问几天，百度收录会有问题，会出现百度搜索不到网站的情况，但是仍然显示有收录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-12_215356.png" alt="21514"></p>
<p>百度的解释：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-12_215508.png" alt="2155"></p>
<p>谷歌保持了两个搜索记录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-12_220045.png" alt="2201"></p>
]]></content>
      <categories>
        <category>云服务器</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>华为云</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 实战（一）：CentOS 7 上安装 Docker</title>
    <url>/p/centos-docker/</url>
    <content><![CDATA[<p>docker 官方文档：<a href="https://docs.docker.com/get-started/" target="_blank" rel="noopener">https://docs.docker.com/get-started/</a></p>
<p>centOS 上安装 docker 官方文档：<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">Install Docker Engine on CentOS</a></p>
<p>阿里云安装 docker 介绍：<a href="https://yq.aliyun.com/articles/110806" target="_blank" rel="noopener">Docker CE 镜像源站</a></p>
<h2 id="一、安装-docker-前准备"><a href="#一、安装-docker-前准备" class="headerlink" title="一、安装 docker 前准备"></a>一、安装 docker 前准备</h2><p>docker 支持 Linux、Windows、MacOS平台，支持的平台可以参考官网：<a href="https://docs.docker.com/engine/install/。" target="_blank" rel="noopener">https://docs.docker.com/engine/install/。</a></p>
<p>支持的 Linux 大部分版本，但是要求 Linux 版本内核在 3.10 以上，使用命令 <code>uname -r</code> 查看系统内核版本验证你的 CentOS 是否支持 Docker：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-514.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>使用命令 <code>yum install -y yum-utils device-mapper-persistent-data lvm2</code> 安装需要的包。</p>
<p>配置阿里云 docker yum 源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br><span class="line">...</span><br><span class="line">[root@localhost ~]<span class="comment"># yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">adding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">grabbing file http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">repo saved to /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure>

<h2 id="二、安装-docker"><a href="#二、安装-docker" class="headerlink" title="二、安装 docker"></a>二、安装 docker</h2><h3 id="2-1-docker-版本介绍"><a href="#2-1-docker-版本介绍" class="headerlink" title="2.1 docker 版本介绍"></a>2.1 docker 版本介绍</h3><p>目前主要有两个版本：docker-ce和docker-ee，前者是社区版（开源免费），后者是企业版（闭源收费，docker的商业版本）。</p>
<p>docker-io 和 docker-engin 是之前的版本，版本号是1.X。</p>
<h3 id="2-2-安装指定版本的-docker"><a href="#2-2-安装指定版本的-docker" class="headerlink" title="2.2 安装指定版本的 docker"></a>2.2 安装指定版本的 docker</h3><p>本次安装社区版本 docker-ce。</p>
<p>查看仓库中的所有 docker-ce 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum list docker-ce --showduplicates | sort -r</span></span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line">docker-ce.x86_64            3:19.03.8-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.7-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.6-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.5-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.4-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.3-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.2-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.1-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.0-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.9-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.6-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.5-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.4-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.3-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.2-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.1-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.0-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.06.3.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.06.2.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.06.1.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.06.0.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.03.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.03.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.12.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.12.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.09.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.09.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.06.2.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.06.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.06.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.03.3.ce-1.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.03.2.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.03.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.03.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line">Available Packages</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>安装指定的版本需要加上版本信息，如 <code>yum install docker-ce-18.06.3.ce</code>，不指定版本信息则默认安装最新稳定版：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install docker-ce</span></span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  docker-ce.x86_64 3:19.03.8-3.el7                                                                                                          </span><br><span class="line">  </span><br><span class="line">Dependency Installed:</span><br><span class="line">  container-selinux.noarch 2:2.107-3.el7         containerd.io.x86_64 0:1.2.13-3.1.el7         docker-ce-cli.x86_64 1:19.03.8-3.el7        </span><br><span class="line">  </span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>

<p>如上表示安装完成。</p>
<h3 id="2-3-启动-docker"><a href="#2-3-启动-docker" class="headerlink" title="2.3 启动 docker"></a>2.3 启动 docker</h3><p>安装完成后，使用命令 <code>systemctl start docker</code> 启动 docker，然后可使用命令 <code>systemctl status docker</code> 查看 docker 的状态。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl start docker</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl status docker</span></span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Fri 2020-04-24 06:43:27 PDT; 16s ago</span><br><span class="line">     Docs: https://docs.docker.com</span><br><span class="line"> Main PID: 120921 (dockerd)</span><br><span class="line">    Tasks: 13</span><br><span class="line">   Memory: 45.8M</span><br><span class="line">   CGroup: /system.slice/docker.service</span><br><span class="line">           └─120921 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line">  </span><br><span class="line">Apr 24 06:43:26 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:26.824128116-07:00"</span> level=info msg=<span class="string">"ccResolverWrapper...e=grpc</span></span><br><span class="line"><span class="string">Apr 24 06:43:26 localhost.localdomain dockerd[120921]: time="</span>2020-04-24T06:43:26.824138795-07:00<span class="string">" level=info msg="</span>ClientConn switch...e=grpc</span><br><span class="line">Apr 24 06:43:26 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:26.857763277-07:00"</span> level=info msg=<span class="string">"Loading container...tart."</span></span><br><span class="line">Apr 24 06:43:26 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:26.972274142-07:00"</span> level=info msg=<span class="string">"Default bridge (d...dress"</span></span><br><span class="line">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:27.088685674-07:00"</span> level=info msg=<span class="string">"Loading containers: done."</span></span><br><span class="line">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:27.132097640-07:00"</span> level=warning msg=<span class="string">"Not using nati...erlay2</span></span><br><span class="line"><span class="string">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time="</span>2020-04-24T06:43:27.132364215-07:00<span class="string">" level=info msg="</span>Docker daemon<span class="string">" co...9.03.8</span></span><br><span class="line"><span class="string">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time="</span>2020-04-24T06:43:27.132510032-07:00<span class="string">" level=info msg="</span>Daemon has comple...ation<span class="string">"</span></span><br><span class="line"><span class="string">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time="</span>2020-04-24T06:43:27.194040570-07:00<span class="string">" level=info msg="</span>API listen on /va....sock<span class="string">"</span></span><br><span class="line"><span class="string">Apr 24 06:43:27 localhost.localdomain systemd[1]: Started Docker Application Container Engine.</span></span><br><span class="line"><span class="string">Hint: Some lines were ellipsized, use -l to show in full.</span></span><br></pre></td></tr></table></figure>

<p>若要开机启动，可使用命令 <code>systemctl enable docker</code>。</p>
<p>使用命令 <code>docker version</code> 查看 docker 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.8</span><br><span class="line"> API version:       1.40</span><br><span class="line"> Go version:        go1.12.17</span><br><span class="line"> Git commit:        afacb8b</span><br><span class="line"> Built:             Wed Mar 11 01:27:04 2020</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          19.03.8</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.12.17</span><br><span class="line">  Git commit:       afacb8b</span><br><span class="line">  Built:            Wed Mar 11 01:25:42 2020</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.2.13</span><br><span class="line">  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0-rc10</span><br><span class="line">  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>如上显示出了包含 Client 和 Server 的版本信息。</p>
<h2 id="三、docker-镜像"><a href="#三、docker-镜像" class="headerlink" title="三、docker 镜像"></a>三、docker 镜像</h2><h3 id="3-1-拉取镜像"><a href="#3-1-拉取镜像" class="headerlink" title="3.1 拉取镜像"></a>3.1 拉取镜像</h3><p>hello-world 是 docker 官方提供的最小镜像，通过它可以用来验证 Docker 是否安装成功，先使用 pull 命令把它拉下来，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull hello-world</span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">0e03bdcc26d7: Pull complete </span><br><span class="line">Digest: sha256:8e3114318a995a1ee497790535e7b88365222a21771ae7e53687ad76563e8e76</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> hello-world:latest</span><br><span class="line">docker.io/library/hello-world:latest</span><br></pre></td></tr></table></figure>

<h3 id="3-2-查看镜像信息"><a href="#3-2-查看镜像信息" class="headerlink" title="3.2 查看镜像信息"></a>3.2 查看镜像信息</h3><p>使用命令 <code>docker images</code> 查看系统已有镜像。</p>
<p>使用命令 <code>docker images [镜像名称]</code> 查看指定镜像：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker.io/library/hello-world:latest</span><br><span class="line">[root@localhost ~]<span class="comment"># docker images hello-world</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">hello-world         latest              bf756fb1ae65        3 months ago        13.3kB</span><br></pre></td></tr></table></figure>

<p>列表字段含义：</p>
<ul>
<li>REPOSITORY：来自的仓库</li>
<li>TAG：镜像的标签信息</li>
<li>IMAGE ID: 镜像 ID，若 ID 相同说明指向同一个镜像</li>
<li>CREATED：镜像最后更新时间</li>
<li>SIZE：镜像大小</li>
</ul>
<p>使用命令 <code>docker inspect [镜像名称]</code> 查看镜像详细信息，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker inspect hello-world</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Id"</span>: <span class="string">"sha256:bf756fb1ae65adf866bd8c456593cd24beb6a0a061dedf42b26a993176745f6b"</span>,</span><br><span class="line">        <span class="string">"RepoTags"</span>: [</span><br><span class="line">            <span class="string">"hello-world:latest"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"RepoDigests"</span>: [</span><br><span class="line">            <span class="string">"hello-world@sha256:8e3114318a995a1ee497790535e7b88365222a21771ae7e53687ad76563e8e76"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"Parent"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Comment"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Created"</span>: <span class="string">"2020-01-03T01:21:37.263809283Z"</span>,</span><br><span class="line">        <span class="string">"Container"</span>: <span class="string">"71237a2659e6419aee44fc0b51ffbd12859d1a50ba202e02c2586ed999def583"</span>,</span><br><span class="line">        <span class="string">"ContainerConfig"</span>: &#123;</span><br><span class="line">            <span class="string">"Hostname"</span>: <span class="string">"71237a2659e6"</span>,</span><br><span class="line">            <span class="string">"Domainname"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"User"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"AttachStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStdout"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStderr"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Tty"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"OpenStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"StdinOnce"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Env"</span>: [</span><br><span class="line">                <span class="string">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"Cmd"</span>: [</span><br><span class="line">                <span class="string">"/bin/sh"</span>,</span><br><span class="line">                <span class="string">"-c"</span>,</span><br><span class="line">                <span class="string">"#(nop) "</span>,</span><br><span class="line">                <span class="string">"CMD [\"/hello\"]"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"ArgsEscaped"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"Image"</span>: <span class="string">"sha256:eb850c6a1aedb3d5c62c3a484ff01b6b4aade130b950e3bf3e9c016f17f70c34"</span>,</span><br><span class="line">            <span class="string">"Volumes"</span>: null,</span><br><span class="line">            <span class="string">"WorkingDir"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"Entrypoint"</span>: null,</span><br><span class="line">            <span class="string">"OnBuild"</span>: null,</span><br><span class="line">            <span class="string">"Labels"</span>: &#123;&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"DockerVersion"</span>: <span class="string">"18.06.1-ce"</span>,</span><br><span class="line">        <span class="string">"Author"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Config"</span>: &#123;</span><br><span class="line">            <span class="string">"Hostname"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"Domainname"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"User"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"AttachStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStdout"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStderr"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Tty"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"OpenStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"StdinOnce"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Env"</span>: [</span><br><span class="line">                <span class="string">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"Cmd"</span>: [</span><br><span class="line">                <span class="string">"/hello"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"ArgsEscaped"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"Image"</span>: <span class="string">"sha256:eb850c6a1aedb3d5c62c3a484ff01b6b4aade130b950e3bf3e9c016f17f70c34"</span>,</span><br><span class="line">            <span class="string">"Volumes"</span>: null,</span><br><span class="line">            <span class="string">"WorkingDir"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"Entrypoint"</span>: null,</span><br><span class="line">            <span class="string">"OnBuild"</span>: null,</span><br><span class="line">            <span class="string">"Labels"</span>: null</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"Architecture"</span>: <span class="string">"amd64"</span>,</span><br><span class="line">        <span class="string">"Os"</span>: <span class="string">"linux"</span>,</span><br><span class="line">        <span class="string">"Size"</span>: 13336,</span><br><span class="line">        <span class="string">"VirtualSize"</span>: 13336,</span><br><span class="line">        <span class="string">"GraphDriver"</span>: &#123;</span><br><span class="line">            <span class="string">"Data"</span>: &#123;</span><br><span class="line">                <span class="string">"MergedDir"</span>: <span class="string">"/var/lib/docker/overlay2/dffcec0071ed9fa1ea69b4ded806c8a45e4ff64514fda7708d492500c2d4cd1b/merged"</span>,</span><br><span class="line">                <span class="string">"UpperDir"</span>: <span class="string">"/var/lib/docker/overlay2/dffcec0071ed9fa1ea69b4ded806c8a45e4ff64514fda7708d492500c2d4cd1b/diff"</span>,</span><br><span class="line">                <span class="string">"WorkDir"</span>: <span class="string">"/var/lib/docker/overlay2/dffcec0071ed9fa1ea69b4ded806c8a45e4ff64514fda7708d492500c2d4cd1b/work"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"Name"</span>: <span class="string">"overlay2"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"RootFS"</span>: &#123;</span><br><span class="line">            <span class="string">"Type"</span>: <span class="string">"layers"</span>,</span><br><span class="line">            <span class="string">"Layers"</span>: [</span><br><span class="line">                <span class="string">"sha256:9c27e219663c25e0f28493790cc0b88bc973ba3b1686355f221c38a36978ac63"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"Metadata"</span>: &#123;</span><br><span class="line">            <span class="string">"LastTagTime"</span>: <span class="string">"0001-01-01T00:00:00Z"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>使用命令 <code>docker history [镜像名称]</code> 查看镜像历史，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker history hello-world</span></span><br><span class="line">IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT</span><br><span class="line">bf756fb1ae65        3 months ago        /bin/sh -c <span class="comment">#(nop)  CMD ["/hello"]               0B                  </span></span><br><span class="line">&lt;missing&gt;           3 months ago        /bin/sh -c <span class="comment">#(nop) COPY file:7bf12aab75c3867a…   13.3kB</span></span><br></pre></td></tr></table></figure>

<p>镜像是由多个层组成，上面列出的就是各个层的创建信息。</p>
<h3 id="3-3-运行镜像"><a href="#3-3-运行镜像" class="headerlink" title="3.3 运行镜像"></a>3.3 运行镜像</h3><p>使用命令 <code>docker run [镜像名称]</code> 运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker run hello-world</span></span><br><span class="line">  </span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line">  </span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">"hello-world"</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line">  </span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line">  </span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line">  </span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>

<h2 id="四、配置-docker-镜像加速器"><a href="#四、配置-docker-镜像加速器" class="headerlink" title="四、配置 docker 镜像加速器"></a>四、配置 docker 镜像加速器</h2><h3 id="4-1-镜像地址介绍"><a href="#4-1-镜像地址介绍" class="headerlink" title="4.1 镜像地址介绍"></a>4.1 镜像地址介绍</h3><p>docker 官方镜像地址：<a href="https://hub.docker.com/search?q=&amp;type=image" target="_blank" rel="noopener">https://hub.docker.com/search?q=&amp;type=image</a></p>
<p>你打开看下网站加载是不是有点慢，因为网站是国外的。</p>
<p>我们可以配置国内的镜像地址来提升获取 docker 官方镜像的速度。</p>
<p>目前国内比较出名的镜像站有：</p>
<ul>
<li>阿里云镜像：https://{your_id}.mirror.aliyuncs.com</li>
<li>Docker中国区官方镜像：<a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a></li>
<li>网易163镜像：<a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a></li>
<li>daocloud镜像：http://{your_id}.m.daocloud.io</li>
<li>中科大镜像：<a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a></li>
</ul>
<h3 id="4-2-配置国内镜像地址"><a href="#4-2-配置国内镜像地址" class="headerlink" title="4.2 配置国内镜像地址"></a>4.2 配置国内镜像地址</h3><p>docker 版本不低于 1.10 时可以直接通过 daemon config 进行配置。</p>
<p>如果目录【/etc/docker】不存在，先创建 <code>mkdir -p /etc/docker</code>，使用命令 <code>vi /etc/docker/daemon.json</code> 编辑文件（没有会新增），添加内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"registry-mirrors"</span>: [<span class="string">"配置的加速地址"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如配置Docker中国区官方镜像为：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://registry.docker-cn.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>配置阿里云 docker 镜像加速器比较麻烦，需要要注册账号后登录到容器镜像服务控制台中获取镜像加速地址。</p>
<p>登录阿里云的容器镜像服务控制台：<a href="https://cr.console.aliyun.com/" target="_blank" rel="noopener">https://cr.console.aliyun.com/</a></p>
<p>选择镜像加速器，可以看到你的专属镜像加速地址：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-24_224712.png" alt="2317"></p>
<p>修改完成后重启 docker 服务即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart docker</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-测试拉取较大点的镜像"><a href="#4-3-测试拉取较大点的镜像" class="headerlink" title="4.3 测试拉取较大点的镜像"></a>4.3 测试拉取较大点的镜像</h3><p>拉取一个较大一点的镜像 MySql：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull mysql</span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/mysql</span><br><span class="line">54fec2fa59d0: Pull complete </span><br><span class="line">bcc6c6145912: Pull complete </span><br><span class="line">951c3d959c9d: Pull complete </span><br><span class="line">05de4d0e206e: Pull complete </span><br><span class="line">319f0394ef42: Pull complete </span><br><span class="line">d9185034607b: Pull complete </span><br><span class="line">013a9c64dadc: Pull complete </span><br><span class="line">96d4c3d31f9f: Pull complete </span><br><span class="line">785bc90808da: Pull complete </span><br><span class="line">1339cf094729: Pull complete </span><br><span class="line">beb8f531cc37: Pull complete </span><br><span class="line">2b40c9f6a918: Pull complete </span><br><span class="line">Digest: sha256:9643e9fbd6330d10686f8922292dcb20995e7b792c17d4e94ddf95255f1d5449</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> mysql:latest</span><br><span class="line">docker.io/library/mysql:latest</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>下载很快，一两分钟就完成了。</p>
<p>使用命令 <code>docker images</code> 查看镜像列表，如下已经有两个镜像了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">hello-world         latest              bf756fb1ae65        3 months ago        13.3kB</span><br><span class="line">mysql               latest              0c27e8e5fcfa        46 hours ago        546MB</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>容器</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 学习总结(三)：centOS 7 中防火墙配置</title>
    <url>/p/linux-centos-firewall/</url>
    <content><![CDATA[<h2 id="查看防火墙信息"><a href="#查看防火墙信息" class="headerlink" title="查看防火墙信息"></a>查看防火墙信息</h2><p>查看防火墙状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --state</span></span><br><span class="line">running</span><br></pre></td></tr></table></figure>

<p>查看防火墙策略：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --list-all</span></span><br><span class="line">public (active)</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: ens33</span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules:</span><br></pre></td></tr></table></figure>

<p>上面只显示配置文件【/etc/firewalld/zones/public.xml】中的防火墙策略，此配置文件内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># cat /etc/firewalld/zones/public.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;zone&gt;</span><br><span class="line">  &lt;short&gt;Public&lt;/short&gt;</span><br><span class="line">  &lt;description&gt;For use <span class="keyword">in</span> public areas. You <span class="keyword">do</span> not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.&lt;/description&gt;</span><br><span class="line">  &lt;service name=<span class="string">"dhcpv6-client"</span>/&gt;</span><br><span class="line">  &lt;service name=<span class="string">"ssh"</span>/&gt;</span><br><span class="line">&lt;/zone&gt;</span><br></pre></td></tr></table></figure>

<p>查看所有的防火墙策略：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --list-all-zones</span></span><br><span class="line">work</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">drop</span><br><span class="line">  target: DROP</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: </span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">internal</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client mdns samba-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">external</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: yes</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">trusted</span><br><span class="line">  target: ACCEPT</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: </span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">home</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client mdns samba-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dmz</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public (active)</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: ens33</span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">block</span><br><span class="line">  target: %%REJECT%%</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: </span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules:</span><br></pre></td></tr></table></figure>

<p>上面显示的是目录【/etc/firewalld/zones/】下所有的策略。</p>
<p>重新加载配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<h2 id="systemctl-命令"><a href="#systemctl-命令" class="headerlink" title="systemctl 命令"></a>systemctl 命令</h2><p>systemctl 是 centOS 7 的服务管理工具中主要的工具，它融合之前 service 和 chkconfig 的功能于一体。</p>
<p>启动服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl start firewalld</span></span><br></pre></td></tr></table></figure>

<p>关闭服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl stop firewalld.service</span></span><br></pre></td></tr></table></figure>

<p>重启服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl restart firewalld.service</span></span><br></pre></td></tr></table></figure>

<p>显示服务状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl status firewalld.service</span></span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line"></span><br><span class="line">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: <span class="string">'/usr/sbin/iptables -w2 -w --table filter --delete FO...ailed:</span></span><br><span class="line"><span class="string">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: '</span>/usr/sbin/iptables -w2 -w --table filter --delete FO...ailed:</span><br><span class="line">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: <span class="string">'/usr/sbin/iptables -w2 -w --table filter --delete FO...ailed:</span></span><br><span class="line"><span class="string">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: '</span>/usr/sbin/iptables -w2 -w --table filter --delete IN...ailed:</span><br><span class="line">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: <span class="string">'/usr/sbin/iptables -w2 -w --table filter --delete IN...ailed:</span></span><br><span class="line"><span class="string">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: '</span>/usr/sbin/iptables -w2 -w --table filter --delete OU...ailed:</span><br><span class="line">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: <span class="string">'/usr/sbin/iptables -w2 -w --table filter --delete IN...ailed:</span></span><br><span class="line"><span class="string">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: '</span>/usr/sbin/iptables -w2 -w --table filter --delete IN...ailed:</span><br><span class="line">Dec 08 04:46:40 localhost.localdomain systemd[1]: Stopping firewalld - dynamic firewall daemon...</span><br><span class="line">Dec 08 04:46:41 localhost.localdomain systemd[1]: Stopped firewalld - dynamic firewall daemon.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br></pre></td></tr></table></figure>

<p>开机时启用服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl enable firewalld.service</span></span><br><span class="line">Created symlink from /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service to /usr/lib/systemd/system/firewalld.service.</span><br><span class="line">Created symlink from /etc/systemd/system/basic.target.wants/firewalld.service to /usr/lib/systemd/system/firewalld.service.</span><br></pre></td></tr></table></figure>

<p>开机时禁用服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl disable firewalld.service</span></span><br><span class="line">Removed symlink /etc/systemd/system/basic.target.wants/firewalld.service.</span><br><span class="line">Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service</span><br></pre></td></tr></table></figure>

<p>查看服务是否开机启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl is-enabled firewalld.service</span></span><br><span class="line">disabled</span><br></pre></td></tr></table></figure>

<p>查看已启动的服务列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl list-unit-files | grep enabled</span></span><br><span class="line">cups.path                                   enabled </span><br><span class="line">abrt-ccpp.service                           enabled </span><br><span class="line">abrt-oops.service                           enabled </span><br><span class="line">abrt-vmcore.service                         enabled </span><br><span class="line">abrt-xorg.service                           enabled </span><br><span class="line">abrtd.service                               enabled </span><br><span class="line">accounts-daemon.service                     enabled </span><br><span class="line">atd.service                                 enabled </span><br><span class="line">auditd.service                              enabled </span><br><span class="line">autovt@.service                             enabled </span><br><span class="line">avahi-daemon.service                        enabled </span><br><span class="line">bluetooth.service                           enabled </span><br><span class="line">chronyd.service                             enabled </span><br><span class="line">crond.service                               enabled </span><br><span class="line">cups.service                                enabled </span><br><span class="line">dbus-org.bluez.service                      enabled </span><br><span class="line">dbus-org.freedesktop.Avahi.service          enabled </span><br><span class="line">dbus-org.freedesktop.ModemManager1.service  enabled </span><br><span class="line">dbus-org.freedesktop.NetworkManager.service enabled </span><br><span class="line">dbus-org.freedesktop.nm-dispatcher.service  enabled </span><br><span class="line">display-manager.service                     enabled </span><br><span class="line">dmraid-activation.service                   enabled </span><br><span class="line">gdm.service                                 enabled </span><br><span class="line">getty@.service                              enabled </span><br><span class="line">irqbalance.service                          enabled </span><br><span class="line">iscsi.service                               enabled </span><br><span class="line">kdump.service                               enabled </span><br><span class="line">ksm.service                                 enabled </span><br><span class="line">ksmtuned.service                            enabled </span><br><span class="line">libstoragemgmt.service                      enabled </span><br><span class="line">libvirtd.service                            enabled </span><br><span class="line">lvm2-monitor.service                        enabled </span><br><span class="line">mdmonitor.service                           enabled </span><br><span class="line">microcode.service                           enabled </span><br><span class="line">ModemManager.service                        enabled </span><br><span class="line">multipathd.service                          enabled </span><br><span class="line">NetworkManager-dispatcher.service           enabled </span><br><span class="line">NetworkManager.service                      enabled </span><br><span class="line">postfix.service                             enabled </span><br><span class="line">qemu-guest-agent.service                    enabled </span><br><span class="line">rngd.service                                enabled </span><br><span class="line">rsyslog.service                             enabled </span><br><span class="line">rtkit-daemon.service                        enabled </span><br><span class="line">smartd.service                              enabled </span><br><span class="line">spice-vdagentd.service                      enabled </span><br><span class="line">sshd.service                                enabled </span><br><span class="line">sysstat.service                             enabled </span><br><span class="line">systemd-readahead-collect.service           enabled </span><br><span class="line">systemd-readahead-drop.service              enabled </span><br><span class="line">systemd-readahead-replay.service            enabled </span><br><span class="line">tuned.service                               enabled </span><br><span class="line">vmtoolsd.service                            enabled </span><br><span class="line">avahi-daemon.socket                         enabled </span><br><span class="line">cups.socket                                 enabled </span><br><span class="line">dm-event.socket                             enabled </span><br><span class="line">iscsid.socket                               enabled </span><br><span class="line">iscsiuio.socket                             enabled </span><br><span class="line">lvm2-lvmetad.socket                         enabled </span><br><span class="line">lvm2-lvmpolld.socket                        enabled </span><br><span class="line">rpcbind.socket                              enabled </span><br><span class="line">virtlockd.socket                            enabled </span><br><span class="line">virtlogd.socket                             enabled </span><br><span class="line">default.target                              enabled </span><br><span class="line">graphical.target                            enabled </span><br><span class="line">nfs-client.target                           enabled </span><br><span class="line">remote-fs.target                            enabled </span><br><span class="line">runlevel5.target                            enabled</span><br></pre></td></tr></table></figure>

<p>查看启动失败的服务列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl --failed</span></span><br><span class="line">  UNIT          LOAD   ACTIVE SUB    DESCRIPTION</span><br><span class="line">● kdump.service loaded failed failed Crash recovery kernel arming</span><br><span class="line"></span><br><span class="line">LOAD   = Reflects whether the unit definition was properly loaded.</span><br><span class="line">ACTIVE = The high-level unit activation state, i.e. generalization of SUB.</span><br><span class="line">SUB    = The low-level unit activation state, values depend on unit <span class="built_in">type</span>.</span><br><span class="line"></span><br><span class="line">1 loaded units listed. Pass --all to see loaded but inactive units, too.</span><br><span class="line">To show all installed unit files use <span class="string">'systemctl list-unit-files'</span>.</span><br></pre></td></tr></table></figure>

<h2 id="firewall-cmd-命令"><a href="#firewall-cmd-命令" class="headerlink" title="firewall-cmd 命令"></a>firewall-cmd 命令</h2><p>查看帮助：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --help</span></span><br></pre></td></tr></table></figure>

<p>查看版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --version</span></span><br><span class="line">FirewallD is not running</span><br></pre></td></tr></table></figure>

<p>打开一下，再查看版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl start firewalld</span></span><br><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --version</span></span><br><span class="line">0.4.3.2</span><br></pre></td></tr></table></figure>

<p>显示状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --state</span></span><br><span class="line">running</span><br></pre></td></tr></table></figure>

<p>查看所有打开的端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line"></span><br><span class="line">[root@localhost bin]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>是空，一个端口都没打开。</p>
<p>查看区域信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --get-active-zones</span></span><br><span class="line">public</span><br><span class="line">  interfaces: ens33</span><br></pre></td></tr></table></figure>

<p>查看指定的接口所属区域：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --get-zone-of-interface=eht0</span></span><br><span class="line">no zone</span><br></pre></td></tr></table></figure>

<p>拒绝所有包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --panic-on</span></span><br><span class="line"></span><br><span class="line">信号灯超时时间已到</span><br></pre></td></tr></table></figure>

<p>应该是这个命令让连接的虚拟机中的 centOS 断开了。</p>
<p>查看是否拒绝：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --query-panic</span></span><br><span class="line">FirewallD is not running</span><br></pre></td></tr></table></figure>

<p>取消拒绝状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --panic-off</span></span><br><span class="line">FirewallD is not running</span><br></pre></td></tr></table></figure>

<p>提示【FirewallD is not running】，打开再执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl start firewalld</span></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --panic-off</span></span><br><span class="line">Warning: NOT_ENABLED: panic mode is not enabled</span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p>更新防火墙规则(重新加载配置文件)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<h2 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h2><p>以端口80为例，添加一个端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --add-port=80/tcp --permanent</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p>permanent 参数表示永久生效，如果不加则重启就失效。</p>
<p>重新加载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p>查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --query-port=80/tcp</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>

<p>删除：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --remove-port=80/tcp --permanent</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --query-port=80/tcp</span></span><br><span class="line">no</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>linux防火墙</tag>
        <tag>centos</tag>
        <tag>linux 学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title>hostwinds如何取消已开通的vps服务</title>
    <url>/p/hostwinds-cancel/</url>
    <content><![CDATA[<h2 id="hostwinds-的账单"><a href="#hostwinds-的账单" class="headerlink" title="hostwinds 的账单"></a>hostwinds 的账单</h2><p>很早用的是 vultr 国外主机商来自己搭建shadowsocks实现kx上网（想要实现的话可参考本站文章《<a href="http://www.kungge.com/kungge/2556.html" target="_blank" rel="noopener">使用国外服务器vps搭建shadowsocks实现kx上network</a>》 ），后来涨价了，而且ip也被封，前段就一直寻找国外主机商，但是大都被封，开通了vps但一直没用，忘了，取消，前几天收到账单邮件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">发件人：Hostwinds Billing &lt;billing@hostwinds.com&gt;    </span><br><span class="line">(由 pm_bounces@return.hostwinds.com 代发) </span><br><span class="line"></span><br><span class="line">时   间：2020年5月13日(星期三) 中午1:07 (UTC-04:00 阿根廷、巴西时间)	纯文本 |  </span><br><span class="line">收件人：</span><br><span class="line">坤重 &lt;775782909@qq.com&gt;</span><br><span class="line">附   件：</span><br><span class="line">1 个 (Invoice-2002114.pdf)</span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_110005.png" alt="20200517110012"></p>
<p>网上有人说会自动扣费，但如果用的是支付宝的话应该不会自动扣费，需要手动续费才行。</p>
<h2 id="寻求帮助"><a href="#寻求帮助" class="headerlink" title="寻求帮助"></a>寻求帮助</h2><p>想着赶紧取消。</p>
<p>进入其官网，联系了下客服，蹩脚的英语询问了下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_110313.png" alt="20200517110321"></p>
<p>客服回复：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sean G. 10:38</span><br><span class="line">Hey, I see that you&#39;re interested in our services, are there any questions that I can help answer?</span><br><span class="line">kungge wan 10:41</span><br><span class="line">I don&#39;t want to use this server,what should i do to cancel it</span><br><span class="line">Read</span><br><span class="line">Sean G. 10:42</span><br><span class="line">All refund decisions are made by our Billing team. If you would like to start that process, there are essentially 3 steps:</span><br><span class="line"></span><br><span class="line">1. Request cancellation by following the steps in this guide: https:&#x2F;&#x2F;www.hostwinds.com&#x2F;guide&#x2F;cancel-my-services&#x2F;</span><br><span class="line"></span><br><span class="line">2. Confirm the cancellation by copy-pasting the first reply to that ticket. There are two ways to reply to the cancellation request and confirm this.</span><br><span class="line">a. From the Hostwinds client area (https:&#x2F;&#x2F;clients.hostwinds.com&#x2F;supporttickets.php) by going to Support &gt; Tickets</span><br><span class="line">b. Reply from your email to the cancellation request</span><br><span class="line"></span><br><span class="line">Be sure to include the predefined response beginning with &quot;I confirm the cancellation of&quot; and ending with &quot;may be removed immediately and permanently.&quot;</span><br><span class="line"></span><br><span class="line">3. Review our refund policy and if you like, open a Refund Request ticket https:&#x2F;&#x2F;clients.hostwinds.com&#x2F;newticket.php (Refund Policy may be seen from: https:&#x2F;&#x2F;www.hostwinds.com&#x2F;guide&#x2F;refunds&#x2F;)</span><br></pre></td></tr></table></figure>

<p>进入他发的链接，可以看到取消的方法：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_110445.png" alt="20200517110450"></p>
<p>很清楚的操作手册。</p>
<h2 id="我的取消记录"><a href="#我的取消记录" class="headerlink" title="我的取消记录"></a>我的取消记录</h2><p>点击最上面的【Client Area】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_110525.png" alt="20200517110549"></p>
<p>然后点击【Manage】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_104614.png" alt="20200517110817"></p>
<p>然后点击【Request Cancellation】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_104631.png" alt="20200517110902"></p>
<p>选择原因并输入理由：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_105004.png" alt="20200517110942"></p>
<p>蹩脚的英语客套了下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">i hear that hotwinds is  good serverice provider,i just have a test,because i am a code man,</span><br><span class="line">i want to connect the outside network in **,</span><br><span class="line">but the ip is Forbiden,i can&#39;t connect to the server,so i must colose the server,</span><br><span class="line">thank you very much.</span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_105118.png" alt="20200517111118"></p>
<p>然后会受到一封邮件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Ticket ID: 05162020395-4418871] Cancellation Request for Unmanaged SSD Cloud 1 - Service ID: 704786</span><br><span class="line"></span><br><span class="line">发件人：Hostwinds Billing &lt;billing@hostwinds.com&gt;    </span><br><span class="line">(由 pm_bounces@return.hostwinds.com 代发) </span><br><span class="line"></span><br><span class="line">时   间：2020年5月16日(星期六) 晚上10:51 (UTC-04:00 阿根廷、巴西时间)	纯文本 |  </span><br><span class="line">收件人：</span><br><span class="line">坤重 &lt;775782909@qq.com&gt;</span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_111222.png" alt="20200517111238"></p>
<p>正在处理过程中，连官网都访问不了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_111625.png" alt="20200517111649"></p>
<p>尴尬了。。。</p>
<p>在另外一台机器上通过其他方式进入了官网。</p>
<p>邮件里说得很清楚，将指定区域的内容复制，然后再回复邮件即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I confirm the cancellation of:</span><br><span class="line">Product: Unmanaged SSD Cloud 1</span><br><span class="line">Hostname: hwsrv-704786.hostwindsdns.com</span><br><span class="line">I understand that by confirming this cancellation, all data, files, emails, </span><br><span class="line">and accounts associated with Service ID: 704786 may be removed immediately and permanently.</span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-17_112356.png" alt="20200517112406"></p>
<p>然后再等待邮件回复。。。</p>
]]></content>
      <categories>
        <category>云服务器</category>
      </categories>
      <tags>
        <tag>hostwinds</tag>
        <tag>主机商</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 学习总结(一)：网络配置相关</title>
    <url>/p/linux-centos-network/</url>
    <content><![CDATA[<p><code>ifconfig</code> 显示网络设备信息，如虚拟机中的一台 CentOS：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig</span></span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.2.57  netmask 255.255.255.0  broadcast 192.168.2.255</span><br><span class="line">        inet6 fe80::80d2:ed19:d2d6:8db8  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:fb:71:25  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 556385  bytes 794263726 (757.4 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 451226  bytes 46338353 (44.1 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 2304043  bytes 8814826709 (8.2 GiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2304043  bytes 8814826709 (8.2 GiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:6d:7c:70  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>腾讯云一台CentOS：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.17.0.7  netmask 255.255.240.0  broadcast 172.17.15.255</span><br><span class="line">        inet6 fe80::5054:ff:fed2:bdd2  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 52:54:00:d2:bd:d2  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 3083792  bytes 645073156 (615.1 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2866630  bytes 746200829 (711.6 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 1837  bytes 90013 (87.9 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 1837  bytes 90013 (87.9 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>ens33 表示第一块网卡，inet 192.168.2.57 为网卡的ip地址，netmask 255.255.255.0 为子网掩码，broadcast 192.168.2.255 为广播地址</li>
<li>lo 为主机的回环地址</li>
</ul>
<h2 id="一、查看网络配置"><a href="#一、查看网络配置" class="headerlink" title="一、查看网络配置"></a>一、查看网络配置</h2><p>查看网络配置文件(xx是对应的数字)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-ensxx</span><br></pre></td></tr></table></figure>

<p>虚拟机中的初始如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]<span class="comment"># cat ifcfg-ens33 </span></span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line">BOOTPROTO=<span class="string">"dhcp"</span></span><br><span class="line">DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">PEERDNS=<span class="string">"yes"</span></span><br><span class="line">PEERROUTES=<span class="string">"yes"</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">"no"</span></span><br><span class="line">IPV6INIT=<span class="string">"yes"</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">"yes"</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">IPV6_PEERDNS=<span class="string">"yes"</span></span><br><span class="line">IPV6_PEERROUTES=<span class="string">"yes"</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">"no"</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">"stable-privacy"</span></span><br><span class="line">NAME=<span class="string">"ens33"</span></span><br><span class="line">UUID=<span class="string">"208128e4-ad02-4f81-aef1-601f533b485f"</span></span><br><span class="line">DEVICE=<span class="string">"ens33"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>腾讯云中的如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line"><span class="comment"># Created by cloud-init on instance boot automatically, do not edit.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=52:54:00:d2:bd:d2</span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line">ONBOOT=yes</span><br><span class="line">PERSISTENT_DHCLIENT=yes</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">USERCTL=no</span><br><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="二、修改网络配置"><a href="#二、修改网络配置" class="headerlink" title="二、修改网络配置"></a>二、修改网络配置</h2><p>腾讯云的不能修改，虚拟机中的修改项(有修改没有则新增)如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">IPADDR=<span class="string">"192.168.2.57"</span></span><br><span class="line">GATEWAY=<span class="string">"192.168.2.1"</span></span><br><span class="line">NETMASK=<span class="string">"255.255.255.0"</span></span><br><span class="line">DNS=<span class="string">"8.8.8.8"</span></span><br><span class="line">DNS1=<span class="string">"114.114.114.114"</span></span><br></pre></td></tr></table></figure>

<p>保存后，重启网卡：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>

<p>查看网卡状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status network</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl status network</span></span><br><span class="line">● network.service - LSB: Bring up/down networking</span><br><span class="line">   Loaded: loaded (/etc/rc.d/init.d/network; bad; vendor preset: disabled)</span><br><span class="line">   Active: active (exited) since Mon 2019-12-02 01:13:40 PST; 6min ago</span><br><span class="line">     Docs: man:systemd-sysv-generator(8)</span><br><span class="line">  Process: 15058 ExecStop=/etc/rc.d/init.d/network stop (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 15225 ExecStart=/etc/rc.d/init.d/network start (code=exited, status=0/SUCCESS)</span><br><span class="line"></span><br><span class="line">Dec 02 01:13:39 localhost.localdomain systemd[1]: Starting LSB: Bring up/down...</span><br><span class="line">Dec 02 01:13:40 localhost.localdomain network[15225]: Bringing up loopback <span class="keyword">in</span>...</span><br><span class="line">Dec 02 01:13:40 localhost.localdomain network[15225]: Bringing up interface e...</span><br><span class="line">Dec 02 01:13:40 localhost.localdomain network[15225]: [  OK  ]</span><br><span class="line">Dec 02 01:13:40 localhost.localdomain systemd[1]: Started LSB: Bring up/down ...</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="三、测试网络"><a href="#三、测试网络" class="headerlink" title="三、测试网络"></a>三、测试网络</h2><p>测试网络是否配置成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping www.baidu.com</span><br><span class="line">ping [宿主IP]</span><br></pre></td></tr></table></figure>

<p>能够收到数据包说明配置成功。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
        <tag>linux 学习总结</tag>
        <tag>linux网络</tag>
        <tag>linux网络配置</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ 实战笔记（一）：CentOS 7 安装 RabbitMQ</title>
    <url>/p/rabbitmq-centos/</url>
    <content><![CDATA[<h2 id="一、环境安装"><a href="#一、环境安装" class="headerlink" title="一、环境安装"></a>一、环境安装</h2><p>RabbitMQ 是 Erlang 语言开发的，所以需要先安装该语言环境，而该语言又需要很多依赖。</p>
<h3 id="1-1-安装依赖"><a href="#1-1-安装依赖" class="headerlink" title="1.1 安装依赖"></a>1.1 安装依赖</h3><p>使用命令 <code>yum install gcc gcc-c++ glibc-devel make ncurses-devel openssl-devel autoconf java-1.8.0-openjdk-devel git wget wxBase.x86_64</code> 安装需要的依赖：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install gcc gcc-c++ glibc-devel make ncurses-devel openssl-devel autoconf java-1.8.0-openjdk-devel git wget wxBase.x86_64</span></span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  autoconf.noarch 0:2.69-11.el7                                       git.x86_64 0:1.8.3.1-21.el7_7                           </span><br><span class="line">  java-1.8.0-openjdk-devel.x86_64 1:1.8.0.242.b08-0.el7_7             ncurses-devel.x86_64 0:5.9-14.20130511.el7_4            </span><br><span class="line">  openssl-devel.x86_64 1:1.0.2k-19.el7                               </span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  keyutils-libs-devel.x86_64 0:1.5.8-3.el7   krb5-devel.x86_64 0:1.15.1-37.el7_7.2   libcom_err-devel.x86_64 0:1.42.9-16.el7  </span><br><span class="line">  libverto-devel.x86_64 0:0.2.5-4.el7        m4.x86_64 0:1.4.16-10.el7               perl-Data-Dumper.x86_64 0:2.145-3.el7    </span><br><span class="line">  perl-Error.noarch 1:0.17020-2.el7          perl-Git.noarch 0:1.8.3.1-21.el7_7      perl-TermReadKey.x86_64 0:2.30-20.el7    </span><br><span class="line">  zlib-devel.x86_64 0:1.2.7-18.el7          </span><br><span class="line"></span><br><span class="line">Updated:</span><br><span class="line">  glibc-devel.x86_64 0:2.17-292.el7             make.x86_64 1:3.82-24.el7             wget.x86_64 0:1.14-18.el7_6.1            </span><br><span class="line"></span><br><span class="line">Dependency Updated:</span><br><span class="line">  copy-jdk-configs.noarch 0:3.3-10.el7_5                    e2fsprogs.x86_64 0:1.42.9-16.el7                                  </span><br><span class="line">  e2fsprogs-libs.x86_64 0:1.42.9-16.el7                     glibc.x86_64 0:2.17-292.el7                                       </span><br><span class="line">  glibc-common.x86_64 0:2.17-292.el7                        glibc-headers.x86_64 0:2.17-292.el7                               </span><br><span class="line">  java-1.8.0-openjdk.x86_64 1:1.8.0.242.b08-0.el7_7         java-1.8.0-openjdk-headless.x86_64 1:1.8.0.242.b08-0.el7_7        </span><br><span class="line">  krb5-libs.x86_64 0:1.15.1-37.el7_7.2                      krb5-workstation.x86_64 0:1.15.1-37.el7_7.2                       </span><br><span class="line">  libcom_err.x86_64 0:1.42.9-16.el7                         libkadm5.x86_64 0:1.15.1-37.el7_7.2                               </span><br><span class="line">  libss.x86_64 0:1.42.9-16.el7                              ncurses.x86_64 0:5.9-14.20130511.el7_4                            </span><br><span class="line">  ncurses-base.noarch 0:5.9-14.20130511.el7_4               ncurses-libs.x86_64 0:5.9-14.20130511.el7_4                       </span><br><span class="line">  zlib.x86_64 0:1.2.7-18.el7                               </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>

<h3 id="1-2-安装-Erlang"><a href="#1-2-安装-Erlang" class="headerlink" title="1.2 安装 Erlang"></a>1.2 安装 Erlang</h3><p>Erlang 官网下载地址：<a href="http://erlang.org/download" target="_blank" rel="noopener">http://erlang.org/download</a></p>
<p>本次选择 22.0 版本下载：<code>wget http://erlang.org/download/otp_src_22.0.tar.gz</code></p>
<p>直接从这个地址下载速度比较慢，建议从其他地方下载。</p>
<p>将下载好的文件移动到 /usr/local 目录下，解压后再进入目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cp otp_src_22.0.tar.gz /usr/local</span></span><br><span class="line">[root@localhost ~]<span class="comment"># tar -zxvf otp_src_22.0.tar.gz</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd /usr/local/otp_src_22.0/</span></span><br><span class="line">[root@localhost otp_src_22.0]<span class="comment"># ls</span></span><br><span class="line">AUTHORS        CONTRIBUTING.md         Jenkinsfile.benchmark      make             otp_versions.table     scripts</span><br><span class="line">bin            erl-build-tool-vars.sh  Jenkinsfile.run-otp-tests  Makefile.in      plt                    system</span><br><span class="line">bootstrap      erts                    Jenkinsfile.windows        otp_build        prebuilt.files         TAR.include</span><br><span class="line">configure      HOWTO                   lib                        otp_patch_apply  proposed_updates.json  xcomp</span><br><span class="line">configure.src  Jenkinsfile</span><br></pre></td></tr></table></figure>

<p>返回上一级目录，创建安装的目录 erlang，当然也可以不切换目录直接使用命 <code>mkdir ../erlang</code> 创建 erlang：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost otp_src_22.0]# cd ..</span><br><span class="line">[root@localhost local]# mkdir erlang</span><br></pre></td></tr></table></figure>

<p>进入目录 <code>otp_src_22.0</code>，配置安装路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd otp_src_22.0/</span></span><br><span class="line">[root@localhost otp_src_22.0]<span class="comment"># ./configure --prefix=/usr/local/erlang</span></span><br><span class="line">...</span><br><span class="line">configure: WARNING:</span><br><span class="line">                wxWidgets must be installed on your system.</span><br><span class="line"></span><br><span class="line">                Please check that wx-config is <span class="keyword">in</span> path, the directory</span><br><span class="line">                <span class="built_in">where</span> wxWidgets libraries are installed (returned by</span><br><span class="line">                <span class="string">'wx-config --libs'</span> or <span class="string">'wx-config --static --libs'</span> <span class="built_in">command</span>)</span><br><span class="line">                is <span class="keyword">in</span> LD_LIBRARY_PATH or equivalent variable and</span><br><span class="line">                wxWidgets version is 2.8.4 or above.</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  APPLICATIONS DISABLED  **********************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">odbc           : ODBC library - link check failed</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  APPLICATIONS INFORMATION  *******************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">wx             : wxWidgets not found, wx will NOT be usable</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  DOCUMENTATION INFORMATION  ******************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">documentation  : </span><br><span class="line">                 fop is missing.</span><br><span class="line">                 Using fakefop to generate placeholder PDF files.</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">[root@localhost otp_src_22.0]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>先使用命令 <code>make</code> 编译下，然后使用命令 <code>make install</code> 进行安装，安装完成后会在目录【/usr.local/erlang/】中产生两个文件夹，其中 bin 就是安装的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost otp_src_22.0]<span class="comment"># make</span></span><br><span class="line">...</span><br><span class="line">[root@localhost otp_src_22.0]<span class="comment"># make install</span></span><br><span class="line">...</span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># ls erlang/</span></span><br><span class="line">bin  lib</span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># ls erlang/bin/</span></span><br><span class="line">ct_run  dialyzer  epmd  erl  erlc  escript  run_erl  to_erl  typer</span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>进入 bin 目录就可以使用 erl 命令了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd erlang/bin</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ./erl</span></span><br><span class="line">Erlang/OTP 22 [erts-10.4] [<span class="built_in">source</span>] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1] [hipe]</span><br><span class="line"></span><br><span class="line">Eshell V10.4  (abort with ^G)</span><br><span class="line">1&gt;</span><br></pre></td></tr></table></figure>

<p>为了方便使用可以添加环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># echo 'export PATH=$PATH:/usr/local/erlang/bin' &gt;&gt; /etc/profile</span></span><br><span class="line">[root@localhost bin]<span class="comment"># source /etc/profile</span></span><br><span class="line">[root@localhost bin]<span class="comment"># erl</span></span><br><span class="line">Erlang/OTP 22 [erts-10.4] [<span class="built_in">source</span>] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1] [hipe]</span><br><span class="line"></span><br><span class="line">Eshell V10.4  (abort with ^G)</span><br><span class="line">1&gt;</span><br></pre></td></tr></table></figure>

<h2 id="二、安装-RabbitMQ"><a href="#二、安装-RabbitMQ" class="headerlink" title="二、安装 RabbitMQ"></a>二、安装 RabbitMQ</h2><p>github 地址：<a href="https://github.com/rabbitmq/rabbitmq-server/" target="_blank" rel="noopener">https://github.com/rabbitmq/rabbitmq-server/</a></p>
<p>本次下载：<a href="https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.24/rabbitmq-server-generic-unix-3.7.24.tar.xz" target="_blank" rel="noopener">https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.24/rabbitmq-server-generic-unix-3.7.24.tar.xz</a></p>
<p>下载的是 .tar.xz 文件，是一个压缩类型的文件：</p>
<p><img src="content/2020-04-06_194847.png" alt="1949"></p>
<p>由于文件下载太慢，这边直接将下载好的文件传到 CentOS 上。</p>
<p>需要用 xz 解压，没有则需要使用命令 <code>yum install -y xz</code> 安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># yum install -y xz</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">gitlab_gitlab-ce/x86_64/signature                                                                       |  862 B  00:00:00     </span><br><span class="line">gitlab_gitlab-ce/x86_64/signature                                                                       | 1.0 kB  00:00:00 !!! </span><br><span class="line">gitlab_gitlab-ce-source/signature                                                                       |  836 B  00:00:00     </span><br><span class="line">gitlab_gitlab-ce-source/signature                                                                       |  951 B  00:00:00 !!! </span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.nju.edu.cn</span><br><span class="line"> * extras: mirrors.nju.edu.cn</span><br><span class="line"> * updates: mirrors.nju.edu.cn</span><br><span class="line">Package xz-5.2.2-1.el7.x86_64 already installed and latest version</span><br><span class="line">Nothing to <span class="keyword">do</span></span><br><span class="line">[root@localhost bin]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>如上我这边已经安装过了。</p>
<p>将压缩包移动到目录【/usr/local】，然后解压：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># mv ~/rabbitmq-server-generic-unix-3.7.24.tar.xz /usr/local/</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># xz -d rabbitmq-server-generic-unix-3.7.24.tar.xz</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># tar -xvf rabbitmq-server-generic-unix-3.7.24.tar</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd rabbitmq_server-3.7.24/</span></span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># ll</span></span><br><span class="line">total 232</span><br><span class="line">drwxr-xr-x. 2 root root  8192 Feb 12 14:18 ebin</span><br><span class="line">drwxr-xr-x. 2 root root    77 Feb 12 14:18 escript</span><br><span class="line">drwxr-xr-x. 3 root root    22 Feb 12 14:18 etc</span><br><span class="line">drwxr-xr-x. 2 root root   242 Feb 12 14:18 include</span><br><span class="line">-rw-r--r--. 1 root root    75 Feb 12 14:18 INSTALL</span><br><span class="line">-rw-r--r--. 1 root root 28095 Feb 12 14:18 LICENSE</span><br><span class="line">-rw-r--r--. 1 root root 11352 Feb 12 14:18 LICENSE-APACHE2</span><br><span class="line">-rw-r--r--. 1 root root 11360 Feb 12 14:18 LICENSE-APACHE2-excanvas</span><br><span class="line">-rw-r--r--. 1 root root 11358 Feb 12 14:18 LICENSE-APACHE2-ExplorerCanvas</span><br><span class="line">-rw-r--r--. 1 root root 10851 Feb 12 14:18 LICENSE-APL2-Stomp-Websocket</span><br><span class="line">-rw-r--r--. 1 root root  1207 Feb 12 14:18 LICENSE-BSD-base64js</span><br><span class="line">-rw-r--r--. 1 root root  1469 Feb 12 14:18 LICENSE-BSD-recon</span><br><span class="line">-rw-r--r--. 1 root root  1274 Feb 12 14:18 LICENSE-erlcloud</span><br><span class="line">-rw-r--r--. 1 root root  1471 Feb 12 14:18 LICENSE-httpc_aws</span><br><span class="line">-rw-r--r--. 1 root root   757 Feb 12 14:18 LICENSE-ISC-cowboy</span><br><span class="line">-rw-r--r--. 1 root root  1084 Feb 12 14:18 LICENSE-MIT-EJS</span><br><span class="line">-rw-r--r--. 1 root root  1087 Feb 12 14:18 LICENSE-MIT-EJS10</span><br><span class="line">-rw-r--r--. 1 root root  1057 Feb 12 14:18 LICENSE-MIT-Erlware-Commons</span><br><span class="line">-rw-r--r--. 1 root root  1069 Feb 12 14:18 LICENSE-MIT-Flot</span><br><span class="line">-rw-r--r--. 1 root root  1075 Feb 12 14:18 LICENSE-MIT-jQuery</span><br><span class="line">-rw-r--r--. 1 root root  1075 Feb 12 14:18 LICENSE-MIT-jQuery164</span><br><span class="line">-rw-r--r--. 1 root root  1087 Feb 12 14:18 LICENSE-MIT-Mochi</span><br><span class="line">-rw-r--r--. 1 root root  1073 Feb 12 14:18 LICENSE-MIT-Sammy</span><br><span class="line">-rw-r--r--. 1 root root  1076 Feb 12 14:18 LICENSE-MIT-Sammy060</span><br><span class="line">-rw-r--r--. 1 root root 24900 Feb 12 14:18 LICENSE-MPL</span><br><span class="line">-rw-r--r--. 1 root root 16726 Feb 12 14:18 LICENSE-MPL2</span><br><span class="line">-rw-r--r--. 1 root root 24899 Feb 12 14:18 LICENSE-MPL-RabbitMQ</span><br><span class="line">-rw-r--r--. 1 root root  1471 Feb 12 14:18 LICENSE-rabbitmq_aws</span><br><span class="line">drwxr-xr-x. 2 root root  4096 Feb 12 14:18 plugins</span><br><span class="line">drwxr-xr-x. 3 root root    20 Feb 12 14:18 priv</span><br><span class="line">drwxr-xr-x. 2 root root   163 Feb 12 14:18 sbin</span><br><span class="line">drwxr-xr-x. 3 root root    17 Feb 12 14:18 share</span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>使用命令 <code>rabbitmq-server</code> 启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># ./sbin/rabbitmq-server</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##  ##</span></span><br><span class="line">  <span class="comment">##  ##      RabbitMQ 3.7.24. Copyright (c) 2007-2020 Pivotal Software, Inc.</span></span><br><span class="line">  <span class="comment">##########  Licensed under the MPL.  See https://www.rabbitmq.com/</span></span><br><span class="line">  <span class="comment">######  ##</span></span><br><span class="line">  <span class="comment">##########  Logs: /usr/local/rabbitmq_server-3.7.24/var/log/rabbitmq/rabbit@localhost.log</span></span><br><span class="line">                    /usr/<span class="built_in">local</span>/rabbitmq_server-3.7.24/var/<span class="built_in">log</span>/rabbitmq/rabbit@localhost_upgrade.log</span><br><span class="line"></span><br><span class="line">              Starting broker...</span><br><span class="line"> completed with 0 plugins.</span><br></pre></td></tr></table></figure>

<p>为了方便可在命令后加上参数 <code>-detached</code> 让其在后台运行。</p>
<p>使用命令 <code>rabbitmqctl status</code> 查看状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost sbin]<span class="comment"># ./rabbitmqctl status</span></span><br><span class="line">Status of node rabbit@localhost ...</span><br><span class="line">[&#123;pid,65261&#125;,</span><br><span class="line"> &#123;running_applications,</span><br><span class="line">     [&#123;rabbit,<span class="string">"RabbitMQ"</span>,<span class="string">"3.7.24"</span>&#125;,</span><br><span class="line">      &#123;mnesia,<span class="string">"MNESIA  CXC 138 12"</span>,<span class="string">"4.16"</span>&#125;,</span><br><span class="line">      &#123;rabbit_common,</span><br><span class="line">          <span class="string">"Modules shared by rabbitmq-server and rabbitmq-erlang-client"</span>,</span><br><span class="line">          <span class="string">"3.7.24"</span>&#125;,</span><br><span class="line">      &#123;ranch,<span class="string">"Socket acceptor pool for TCP protocols."</span>,<span class="string">"1.7.1"</span>&#125;,</span><br><span class="line">      &#123;ssl,<span class="string">"Erlang/OTP SSL application"</span>,<span class="string">"9.3"</span>&#125;,</span><br><span class="line">      &#123;public_key,<span class="string">"Public key infrastructure"</span>,<span class="string">"1.6.7"</span>&#125;,</span><br><span class="line">      &#123;asn1,<span class="string">"The Erlang ASN1 compiler version 5.0.9"</span>,<span class="string">"5.0.9"</span>&#125;,</span><br><span class="line">      &#123;credentials_obfuscation,</span><br><span class="line">          <span class="string">"Helper library that obfuscates sensitive values in process state"</span>,</span><br><span class="line">          <span class="string">"1.1.0"</span>&#125;,</span><br><span class="line">      &#123;crypto,<span class="string">"CRYPTO"</span>,<span class="string">"4.5"</span>&#125;,</span><br><span class="line">      &#123;inets,<span class="string">"INETS  CXC 138 49"</span>,<span class="string">"7.0.8"</span>&#125;,</span><br><span class="line">      &#123;os_mon,<span class="string">"CPO  CXC 138 46"</span>,<span class="string">"2.5"</span>&#125;,</span><br><span class="line">      &#123;sysmon_handler,<span class="string">"Rate-limiting system_monitor event handler"</span>,<span class="string">"1.1.0"</span>&#125;,</span><br><span class="line">      &#123;tools,<span class="string">"DEVTOOLS  CXC 138 16"</span>,<span class="string">"3.2"</span>&#125;,</span><br><span class="line">      &#123;xmerl,<span class="string">"XML parser"</span>,<span class="string">"1.3.21"</span>&#125;,</span><br><span class="line">      &#123;stdout_formatter,</span><br><span class="line">          <span class="string">"Tools to format paragraphs, lists and tables as plain text"</span>,</span><br><span class="line">          <span class="string">"0.2.2"</span>&#125;,</span><br><span class="line">      &#123;jsx,<span class="string">"a streaming, evented json parsing toolkit"</span>,<span class="string">"2.9.0"</span>&#125;,</span><br><span class="line">      &#123;observer_cli,<span class="string">"Visualize Erlang Nodes On The Command Line"</span>,<span class="string">"1.5.2"</span>&#125;,</span><br><span class="line">      &#123;recon,<span class="string">"Diagnostic tools for production use"</span>,<span class="string">"2.5.0"</span>&#125;,</span><br><span class="line">      &#123;lager,<span class="string">"Erlang logging framework"</span>,<span class="string">"3.8.0"</span>&#125;,</span><br><span class="line">      &#123;goldrush,<span class="string">"Erlang event stream processor"</span>,<span class="string">"0.1.9"</span>&#125;,</span><br><span class="line">      &#123;compiler,<span class="string">"ERTS  CXC 138 10"</span>,<span class="string">"7.4"</span>&#125;,</span><br><span class="line">      &#123;syntax_tools,<span class="string">"Syntax tools"</span>,<span class="string">"2.2"</span>&#125;,</span><br><span class="line">      &#123;sasl,<span class="string">"SASL  CXC 138 11"</span>,<span class="string">"3.4"</span>&#125;,</span><br><span class="line">      &#123;stdlib,<span class="string">"ERTS  CXC 138 10"</span>,<span class="string">"3.9"</span>&#125;,</span><br><span class="line">      &#123;kernel,<span class="string">"ERTS  CXC 138 10"</span>,<span class="string">"6.4"</span>&#125;]&#125;,</span><br><span class="line"> &#123;os,&#123;unix,linux&#125;&#125;,</span><br><span class="line"> &#123;erlang_version,</span><br><span class="line">     <span class="string">"Erlang/OTP 22 [erts-10.4] [source] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:64] [hipe]\n"</span>&#125;,</span><br><span class="line"> &#123;memory,</span><br><span class="line">     [&#123;connection_readers,0&#125;,</span><br><span class="line">      &#123;connection_writers,0&#125;,</span><br><span class="line">      &#123;connection_channels,0&#125;,</span><br><span class="line">      &#123;connection_other,0&#125;,</span><br><span class="line">      &#123;queue_procs,0&#125;,</span><br><span class="line">      &#123;queue_slave_procs,0&#125;,</span><br><span class="line">      &#123;plugins,11916&#125;,</span><br><span class="line">      &#123;other_proc,25933696&#125;,</span><br><span class="line">      &#123;metrics,196012&#125;,</span><br><span class="line">      &#123;mgmt_db,0&#125;,</span><br><span class="line">      &#123;mnesia,76168&#125;,</span><br><span class="line">      &#123;other_ets,2571704&#125;,</span><br><span class="line">      &#123;binary,142584&#125;,</span><br><span class="line">      &#123;msg_index,32064&#125;,</span><br><span class="line">      &#123;code,21526815&#125;,</span><br><span class="line">      &#123;atom,1180881&#125;,</span><br><span class="line">      &#123;other_system,12259352&#125;,</span><br><span class="line">      &#123;allocated_unused,5405896&#125;,</span><br><span class="line">      &#123;reserved_unallocated,3940352&#125;,</span><br><span class="line">      &#123;strategy,rss&#125;,</span><br><span class="line">      &#123;total,[&#123;erlang,63931192&#125;,&#123;rss,73277440&#125;,&#123;allocated,69337088&#125;]&#125;]&#125;,</span><br><span class="line"> &#123;alarms,[]&#125;,</span><br><span class="line"> &#123;listeners,[&#123;clustering,25672,<span class="string">"::"</span>&#125;,&#123;amqp,5672,<span class="string">"::"</span>&#125;]&#125;,</span><br><span class="line"> &#123;vm_memory_calculation_strategy,rss&#125;,</span><br><span class="line"> &#123;vm_memory_high_watermark,0.4&#125;,</span><br><span class="line"> &#123;vm_memory_limit,1268578713&#125;,</span><br><span class="line"> &#123;disk_free_limit,50000000&#125;,</span><br><span class="line"> &#123;disk_free,6577901568&#125;,</span><br><span class="line"> &#123;file_descriptors,</span><br><span class="line">     [&#123;total_limit,924&#125;,&#123;total_used,2&#125;,&#123;sockets_limit,829&#125;,&#123;sockets_used,0&#125;]&#125;,</span><br><span class="line"> &#123;processes,[&#123;<span class="built_in">limit</span>,1048576&#125;,&#123;used,231&#125;]&#125;,</span><br><span class="line"> &#123;run_queue,1&#125;,</span><br><span class="line"> &#123;uptime,354&#125;,</span><br><span class="line"> &#123;kernel,&#123;net_ticktime,60&#125;&#125;]</span><br><span class="line">[root@localhost sbin]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>服务关闭使用命令 <code>rabbitmqctl stop</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost sbin]<span class="comment"># ./rabbitmqctl stop</span></span><br><span class="line">Stopping and halting node rabbit@localhost ...</span><br></pre></td></tr></table></figure>

<p>至此，RabbitMQ 安装完成，为了方便管理，添加 RabbitMQ 环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># echo 'export PATH=$PATH:/usr/local/rabbitmq_server-3.7.24/sbin' &gt;&gt; /etc/profile</span></span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>

<p>让 RabbitMQ 后台运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># rabbitmq-server -detached</span></span><br><span class="line">Warning: PID file not written; -detached was passed.</span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># rabbitmqctl status</span></span><br><span class="line">Status of node rabbit@localhost ...</span><br><span class="line">[&#123;pid,68675&#125;,</span><br><span class="line"> &#123;running_applications,</span><br><span class="line">     [&#123;rabbit,<span class="string">"RabbitMQ"</span>,<span class="string">"3.7.24"</span>&#125;,</span><br><span class="line">     ...</span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>查看进程：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># netstat -lnpt</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      87882/./redis-serve </span><br><span class="line">tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      1/systemd           </span><br><span class="line">tcp        0      0 0.0.0.0:4369            0.0.0.0:*               LISTEN      65206/epmd          </span><br><span class="line">tcp        0      0 192.168.122.1:53        0.0.0.0:*               LISTEN      1609/dnsmasq        </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      3653/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      888/cupsd           </span><br><span class="line">tcp        0      0 0.0.0.0:15672           0.0.0.0:*               LISTEN      68675/beam.smp      </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      4385/master         </span><br><span class="line">tcp        0      0 0.0.0.0:25672           0.0.0.0:*               LISTEN      68675/beam.smp      </span><br><span class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      87882/./redis-serve </span><br><span class="line">tcp6       0      0 :::111                  :::*                    LISTEN      1/systemd           </span><br><span class="line">tcp6       0      0 :::4369                 :::*                    LISTEN      65206/epmd          </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      3653/sshd           </span><br><span class="line">tcp6       0      0 ::1:631                 :::*                    LISTEN      888/cupsd           </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      4385/master         </span><br><span class="line">tcp6       0      0 :::5672                 :::*                    LISTEN      68675/beam.smp      </span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>68675 就是 RabbitMQ 的进程。</p>
<h2 id="三、启用-RabbitMQ-的管理插件"><a href="#三、启用-RabbitMQ-的管理插件" class="headerlink" title="三、启用 RabbitMQ 的管理插件"></a>三、启用 RabbitMQ 的管理插件</h2><p>RabbitMQ自带一个 web 管理系统，只需通过启动插件 rabbitmq_management 就可以：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># rabbitmq-plugins enable rabbitmq_management</span></span><br><span class="line">Enabling plugins on node rabbit@localhost:</span><br><span class="line">rabbitmq_management</span><br><span class="line">The following plugins have been configured:</span><br><span class="line">  rabbitmq_management</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_web_dispatch</span><br><span class="line">Applying plugin configuration to rabbit@localhost...</span><br><span class="line">The following plugins have been enabled:</span><br><span class="line">  rabbitmq_management</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_web_dispatch</span><br><span class="line"></span><br><span class="line">started 3 plugins.</span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>在浏览器中输入地址【<a href="http://ip:15672】就可以访问了，使用">http://ip:15672】就可以访问了，使用</a> guest/guest 登录：</p>
<p><img src="content/2020-04-06_203123.png" alt="2031"></p>
<p><img src="content/2020-04-06_204819.png" alt="2048"></p>
<h2 id="P、常见问题"><a href="#P、常见问题" class="headerlink" title="P、常见问题"></a>P、常见问题</h2><h3 id="P-1-User-can-only-log-in-via-localhost"><a href="#P-1-User-can-only-log-in-via-localhost" class="headerlink" title="P.1 User can only log in via localhost"></a>P.1 User can only log in via localhost</h3><p><img src="content/2020-04-06_203310.png" alt="2033"></p>
<p>出现这个问题的原因是 RabbitMQ 从 3.3.0 版本开始禁止使用 guest/guest 权限通过除 localhost 以外的地址访问。</p>
<p>将 ebin/rabbit.app 中的内容 <code>{loopback_users, [&lt;&lt;&quot;guest&quot;&gt;&gt;]},</code> 改为 <code>{loopback_users, []},</code>，然后重启服务即可。</p>
]]></content>
      <categories>
        <category>消息队列</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title>坤哥网使用的相关云产品记录</title>
    <url>/p/site-kungge-cloud/</url>
    <content><![CDATA[<p>坤哥网2017年到2020年3月部署在阿里云，服务器到期后转战到华为云，3月底到4月11号9点多网站无法访问。</p>
<h2 id="一、坤哥网域名"><a href="#一、坤哥网域名" class="headerlink" title="一、坤哥网域名"></a>一、坤哥网域名</h2><p>坤哥网域名于2015年3月29日注册，早期使用的是虚拟主机部署，后改为正式服务器。</p>
<p><img src="content/cloud.2020-03-18_222136.png" alt="阿里云坤哥网域名解析"></p>
<p>将这些解析导出：</p>
<p><img src="content/cloud.2020-03-18_222326.png" alt="域名解析导出"></p>
<p>还可支持导入：</p>
<p><img src="content/cloud.2020-03-18_222712.png" alt="域名解析导入"></p>
<p>操作还是很方便的。</p>
<p>上面的解析会在下面说明。</p>
<h2 id="二、使用阿里云的产品"><a href="#二、使用阿里云的产品" class="headerlink" title="二、使用阿里云的产品"></a>二、使用阿里云的产品</h2><h3 id="2-1-阿里云CDN"><a href="#2-1-阿里云CDN" class="headerlink" title="2.1 阿里云CDN"></a>2.1 阿里云CDN</h3><p>CDN 管理菜单：</p>
<p><img src="content/cloud.2020-03-18_223408.png" alt="cdn 菜单"></p>
<p>CDN 概览：</p>
<p><img src="content/cloud.2020-03-18_223121.png" alt="CDN 概览"></p>
<p>CDN 域名管理：</p>
<p><img src="content/cloud.2020-03-18_223243.png" alt="CDN 域名管理"></p>
<h3 id="2-2-阿里云对象存储"><a href="#2-2-阿里云对象存储" class="headerlink" title="2.2 阿里云对象存储"></a>2.2 阿里云对象存储</h3><p>对象存储管理菜单：</p>
<p><img src="content/cloud.2020-03-18_225545.png" alt="管理菜单"></p>
<p>对象存储概览：</p>
<p><img src="content/cloud.2020-03-18_225757.png" alt="概览"></p>
<p>Bucket 列表：</p>
<p><img src="content/cloud.2020-03-18_225920.png" alt="Bucket 列表"></p>
<p>点进去可看到【访问域名】和【基础设置】：</p>
<p><img src="content/cloud.2020-03-18_230146.png" alt="点进去"></p>
<p>基础设置中开启防盗链，refer 设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.kungge.com</span><br><span class="line">http:&#x2F;&#x2F;kungge.com</span><br><span class="line">http:&#x2F;&#x2F;img2.kungge.com</span><br><span class="line">http:&#x2F;&#x2F;img.kungge.com</span><br></pre></td></tr></table></figure>

<h3 id="2-3-阿里云云服务器"><a href="#2-3-阿里云云服务器" class="headerlink" title="2.3 阿里云云服务器"></a>2.3 阿里云云服务器</h3><p>云服务器管理菜单：</p>
<p><img src="content/cloud.2020-03-18_230948.png" alt="管理菜单"></p>
<p>概览：</p>
<p><img src="content/cloud.2020-03-18_231038.png" alt="概览"></p>
<h4 id="2-3-1-云服务器配置"><a href="#2-3-1-云服务器配置" class="headerlink" title="2.3.1 云服务器配置"></a>2.3.1 云服务器配置</h4><p>服务器配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当前配置</span><br><span class="line">实例名称：iZsq2g1yt4yml6Z</span><br><span class="line">实例ID：i-uf679rtwsq2g1yt4yml6	地域：华东 2(华东 2 可用区 A)	付费类型：包年包月</span><br><span class="line">实例系列：系列 II	实例规格：2 vCPU 4 GiB ( 共享计算型 n1, ecs.n1.medium )	I&#x2F;O 优化：I&#x2F;O 优化实例</span><br><span class="line">网络类型：经典网络	安全组：sg-uf69v9qbmmk0wh3hkwtg</span><br><span class="line">内网 IP：10.27.161.71	公网 IP：106.X.76.36</span><br><span class="line">公网带宽：按固定带宽	基础带宽：1Mbps	当前使用带宽 ：1Mbps</span><br><span class="line">系统盘：60GB 高效云盘	操作系统：Windows Server 2016 数据中心版 64位中文版	镜像 ID：win2016_64_datactr_1607_zh-cn_40G_alibase_20161230.vhd</span><br><span class="line">数据盘： 40GB 高效云盘(磁盘ID:d-uf67lpp0wul3irsygsws)  </span><br><span class="line">当前云服务器到期时间：2020年3月21日 23:59:59</span><br></pre></td></tr></table></figure>

<h4 id="2-3-2-云服务器网速"><a href="#2-3-2-云服务器网速" class="headerlink" title="2.3.2 云服务器网速"></a>2.3.2 云服务器网速</h4><p>1M带宽测试从从FTP下载测试：</p>
<p><img src="content/cloud.2020-03-19_231202.png" alt="下载"></p>
<p><img src="content/cloud.2020-03-20_074211.png" alt="下载"></p>
<p>从本地上传文件到远程服务器：</p>
<p><img src="content/cloud.2020-03-21_202226.png" alt="ftp上传"></p>
<h4 id="2-3-2-云服务器安全组设置"><a href="#2-3-2-云服务器安全组设置" class="headerlink" title="2.3.2 云服务器安全组设置"></a>2.3.2 云服务器安全组设置</h4><p><img src="content/cloud.2020-03-22_000546.png" alt="安全组"></p>
<p>点击配置规则，内网入方向和内网出方向都没有设置，公网入方向设置：</p>
<p><img src="content/cloud.2020-03-22_000949.png" alt="公网入方向设置"></p>
<p>公网出方向设置：</p>
<p><img src="content/cloud.2020-03-22_001113.png" alt="公网出方向"></p>
<p>导出的json格式：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-24T16:04:31Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"80/80"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-04-19T01:56:19Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"1433/1433"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-04-24T06:56:28Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"23/23"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-20T15:58:30Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"21/21"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-14T16:40:36Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"52020/52020"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-12T15:42:32Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"3306/3306"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-12T10:49:09Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"52013/52013"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-10T05:54:46Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"22/22"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-10T05:54:46Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"3389/3389"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"TCP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">"-1/-1"</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-10T05:54:46Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"ingress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"-1/-1"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"ICMP"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"SourceGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Policy"</span>: <span class="string">"Accept"</span>,</span><br><span class="line">    <span class="attr">"Description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourcePortRange"</span>: <span class="string">"-1/-1"</span>,</span><br><span class="line">    <span class="attr">"Priority"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"CreateTime"</span>: <span class="string">"2017-03-10T05:54:46Z"</span>,</span><br><span class="line">    <span class="attr">"Ipv6SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"NicType"</span>: <span class="string">"internet"</span>,</span><br><span class="line">    <span class="attr">"DestGroupId"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Direction"</span>: <span class="string">"egress"</span>,</span><br><span class="line">    <span class="attr">"SourceGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"PortRange"</span>: <span class="string">"-1/-1"</span>,</span><br><span class="line">    <span class="attr">"DestGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceCidrIp"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"IpProtocol"</span>: <span class="string">"ALL"</span>,</span><br><span class="line">    <span class="attr">"DestCidrIp"</span>: <span class="string">"0.0.0.0/0"</span>,</span><br><span class="line">    <span class="attr">"DestGroupName"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"SourceGroupOwnerAccount"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"Ipv6DestCidrIp"</span>: <span class="string">""</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h4 id="2-3-3-云服务器安全中心"><a href="#2-3-3-云服务器安全中心" class="headerlink" title="2.3.3 云服务器安全中心"></a>2.3.3 云服务器安全中心</h4><p>2020年3月22日获得：</p>
<p><img src="content/cloud.2020-03-22_003302.png" alt="免费获得"></p>
<p><img src="content/cloud.2020-03-22_003511.png" alt="windows系统漏洞"></p>
<p><img src="content/cloud.2020-03-22_003738.png" alt="安全警告处理"></p>
<p>处理完：</p>
<p><img src="content/cloud.2020-03-22_003838.png" alt="处理后"></p>
<h3 id="2-4-SSL证书"><a href="#2-4-SSL证书" class="headerlink" title="2.4 SSL证书"></a>2.4 SSL证书</h3><p>SSL证书管理菜单：</p>
<p><img src="content/cloud.2020-03-18_232413.png" alt="管理菜单"></p>
<p>概览：</p>
<p><img src="content/cloud.2020-03-18_232505.png" alt="概览"></p>
<p>阿里云推广的证书：</p>
<p><img src="content/cloud.2020-03-18_232300.png" alt="推广证书"></p>
<p>可以购买免费的：</p>
<p><img src="content/cloud.2020-03-18_232638.png" alt="免费证书"></p>
<p>购买之后：</p>
<p><img src="content/cloud.2020-03-18_232845.png" alt="证书列表"></p>
<p>证书申请：</p>
<p><img src="content/cloud.2020-03-18_233036.png" alt="申请"></p>
<p><img src="content/cloud.2020-03-18_233228.png" alt="验证"></p>
<p>在域名解析中添加记录：</p>
<p>提交后：</p>
<p><img src="content/cloud.2020-03-18_233617.png" alt="提交后"></p>
<p>证书详情：</p>
<p><img src="content/cloud.2020-03-22_010554.png" alt="证书详情"></p>
<p>证书部署：</p>
<p><img src="content/cloud.2020-03-22_005417.png" alt="证书"></p>
<p>一键式HTTPS：</p>
<p><img src="content/cloud.2020-03-22_005732.png" alt="HTTPS"></p>
<p>证书下载：</p>
<p><img src="content/cloud.2020-03-22_010001.png" alt="下载证书"></p>
<p>下载 IIS 版本：</p>
<p>【3623015_<a href="http://www.kungge.com_iis.zip】里面包含两个文件：">www.kungge.com_iis.zip】里面包含两个文件：</a></p>
<ul>
<li>3623015_<a href="http://www.kungge.com.pfx" target="_blank" rel="noopener">www.kungge.com.pfx</a></li>
<li>pfx-password.txt</li>
</ul>
<p>在IIS服务器上安装SSL证书参考文档：<a href="https://help.aliyun.com/document_detail/98729.html?spm=5176.2020520163.0.0.6ca156a7Dvz4hY" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/98729.html?spm=5176.2020520163.0.0.6ca156a7Dvz4hY</a></p>
<h3 id="2-5-企业邮箱"><a href="#2-5-企业邮箱" class="headerlink" title="2.5 企业邮箱"></a>2.5 企业邮箱</h3><p><img src="content/cloud.2020-03-18_233931.png" alt="企业邮箱"></p>
<p>基本信息：</p>
<p><img src="content/cloud.2020-03-18_234045.png" alt="基本信息"></p>
<h2 id="三、使用第三方云产品"><a href="#三、使用第三方云产品" class="headerlink" title="三、使用第三方云产品"></a>三、使用第三方云产品</h2><h3 id="3-1-又拍云云存储"><a href="#3-1-又拍云云存储" class="headerlink" title="3.1 又拍云云存储"></a>3.1 又拍云云存储</h3><p><img src="content/cloud.2020-03-18_223837.png" alt="upyunOSS"></p>
]]></content>
      <categories>
        <category>云服务器</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>坤哥网</tag>
        <tag>云产品</tag>
      </tags>
  </entry>
  <entry>
    <title>frp 内网穿透实战（二）：linux 连接和 web 访问</title>
    <url>/p/frp-linux-web/</url>
    <content><![CDATA[<p>本次服务端是 CentOS 7，连接的客户端也是 CentOS 7。</p>
<p>服务端部署详情参考：使用 frp 实现内网穿透（一）：远程桌面连接</p>
<h2 id="一、客户端部署"><a href="#一、客户端部署" class="headerlink" title="一、客户端部署"></a>一、客户端部署</h2><p>客户端也是 linux，因此使用服务端的压缩包【frp_0.31.2_linux_amd64.tar.gz】即可，解压，修改 frpc.ini 文件内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 111.229.69.34</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh2]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6001</span><br><span class="line"></span><br><span class="line">[web1]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_port= 80</span><br><span class="line">remote_port = 6002</span><br><span class="line">custom_domains = localhost</span><br></pre></td></tr></table></figure>

<p>ssh2 配的是远程可以通过 ssh 连接工具连接到本地的 centOS。<br>web1 配的是远程访问本地的一个80端口的网站。</p>
<p>启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost frp_0.31.2_linux_amd64]<span class="comment"># nohup ./frpc -c ./frpc.ini &amp;</span></span><br><span class="line">[1] 125163</span><br><span class="line">[root@localhost frp_0.31.2_linux_amd64]<span class="comment"># nohup: ignoring input and appending output to ‘nohup.out’</span></span><br></pre></td></tr></table></figure>

<p>查看启动日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost frp_0.31.2_linux_amd64]<span class="comment"># cat nohup.out </span></span><br><span class="line">2020/03/25 09:28:46 [I] [service.go:250] [844cd7b62c9cb231] login to server success, get run id [844cd7b62c9cb231], server udp port [0]</span><br><span class="line">2020/03/25 09:28:46 [I] [proxy_manager.go:144] [844cd7b62c9cb231] proxy added: [ssh2 web1]</span><br><span class="line">2020/03/25 09:28:46 [W] [control.go:162] [844cd7b62c9cb231] [ssh2] start error: port already used</span><br><span class="line">2020/03/25 09:28:46 [I] [control.go:164] [844cd7b62c9cb231] [web1] start proxy success</span><br></pre></td></tr></table></figure>

<p>启动成功。</p>
<h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><h3 id="2-1-远程登录-linux"><a href="#2-1-远程登录-linux" class="headerlink" title="2.1 远程登录 linux"></a>2.1 远程登录 linux</h3><p>SSH 连接工具设置：</p>
<p><img src="content/2020-03-26_223608.png" alt="2237"></p>
<p>连接：</p>
<p><img src="content/2020-03-26_223713.png" alt="2238"></p>
<h3 id="2-2-远程访问-linux-内网站"><a href="#2-2-远程访问-linux-内网站" class="headerlink" title="2.2 远程访问 linux 内网站"></a>2.2 远程访问 linux 内网站</h3><p>本地 linux 中部署的80端口网站是 GitLab，使用地址【<a href="http://ip:6002】进行访问：">http://ip:6002】进行访问：</a></p>
<p><img src="content/2020-03-26_222245.png" alt="2223"></p>
<p>如有域名的话，可以将域名解析到这个公网服务器ip，然后通过【域名+端口】访问，如：</p>
<p><img src="content/2020-03-26_222436.png" alt="2225"></p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>frp</tag>
        <tag>内网穿透</tag>
        <tag>linux连接</tag>
      </tags>
  </entry>
  <entry>
    <title>多级路由器如何设置端口转发</title>
    <url>/p/router-port-transfer/</url>
    <content><![CDATA[<p>拨号的路由器是一台 TP-LINK，然后在该路由器上接了一台 PHICOMM K2 作为二级路由器（ip为），台式机电脑连接的是 K2。</p>
<p>本次以这种组合进行设置，其他组合设置大同小异。</p>
<h2 id="一、二级路由器设置"><a href="#一、二级路由器设置" class="headerlink" title="一、二级路由器设置"></a>一、二级路由器设置</h2><p>K2 路由器的IP为【192.168.1.107】。</p>
<h3 id="1-1-设置静态IP"><a href="#1-1-设置静态IP" class="headerlink" title="1.1 设置静态IP"></a>1.1 设置静态IP</h3><p>建议将该路由器IP设置为静态的：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_142042.png" alt="20200505142107"></p>
<h3 id="1-2-设置端口转发"><a href="#1-2-设置端口转发" class="headerlink" title="1.2 设置端口转发"></a>1.2 设置端口转发</h3><p>电脑IP为【192.168.2.165】，进入端口转发管理页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_130535.png" alt="20200505142552"></p>
<p>服务器IP就是电脑的IP，保存即可。</p>
<h2 id="二、一级路由器设置"><a href="#二、一级路由器设置" class="headerlink" title="二、一级路由器设置"></a>二、一级路由器设置</h2><p>进入 TP-LINK 管理后台，然后进入虚拟服务器：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_125647.png" alt="20200505141629"></p>
<p>添加并保存：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_130147.png" alt="20200505141836"></p>
<h2 id="三、测试是否生效"><a href="#三、测试是否生效" class="headerlink" title="三、测试是否生效"></a>三、测试是否生效</h2><p>可以通过在电脑上搭建一个网站，然后通过访问 <code>【http://公网IP:端口】</code>进行验证。</p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>路由器</tag>
        <tag>端口转发</tag>
      </tags>
  </entry>
  <entry>
    <title>redis 五种数据类型的基本使用</title>
    <url>/p/redis-datatype/</url>
    <content><![CDATA[<p>redis 中有5种基本的数据类型：</p>
<ul>
<li>string</li>
<li>hash</li>
<li>list</li>
<li>set</li>
<li>zset</li>
</ul>
<p>常用命令：</p>
<ul>
<li>type：查看当前结构类型</li>
<li>ttl：查看当前键的过期时间，-1代表永不过期</li>
<li>flushall：清空所有库的数据</li>
<li>save：强制保存</li>
<li>del：删除指定的 key</li>
<li>rename：重命名 key 的名称</li>
</ul>
<h3 id="一、string"><a href="#一、string" class="headerlink" title="一、string"></a>一、string</h3><p>string 数据类型是开发中使用最多的。</p>
<p>string 常用命令：</p>
<ul>
<li>set：设置值</li>
<li>setex：设置 key 的过期时间，单位为秒</li>
<li>psetex：设置 key 的过期时间，单位为毫秒</li>
<li>get：获取 key 对应的值</li>
<li>getrange：获取 key 中字符串(范围)的子字符</li>
<li>getset：设置 key 的值，并返回旧值</li>
<li>mset：一次设置多个 key-value，如 <code>mset key1638 val1638 key1639 val1639</code></li>
<li>mget：获取多个 key 对应的值 ru <code>mget key1638 key1639</code></li>
<li>setnx：只有在 key 不存在时才设置值 </li>
<li>strlen：获取 key 对应值的长度 如     <code>strlen key1638</code></li>
<li>msetnx：批量设置 key 的值，当且仅当所有给定 key 都不存在时才设置成功</li>
<li>incr：将 key 的值增1</li>
<li>incrby：将 key 的值增长设置的值，如 <code>incrby key1645 2</code></li>
<li>decr：将 key 的值减1</li>
<li>decrby：将 key 的值减少设置的值</li>
<li>append：将 key 的值追加内容，如 <code>append key1</code></li>
<li>del：指定删除 key</li>
</ul>
<h3 id="二、hash"><a href="#二、hash" class="headerlink" title="二、hash"></a>二、hash</h3><p>hash 是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象。</p>
<p>hash 常用命令：</p>
<ul>
<li>hset：设置 key 的值，如 <code>hset theUser name jack</code></li>
<li>hget：获取 kye 对应字段的值，如 <code>hget theUser name</code></li>
<li>hexists：判断 key 对应的字段是否存在，如 <code>hexists theUser name</code></li>
<li>hgetall：获取 key 所有字段和值，如 <code>hgetall theUser</code></li>
<li>hkeys：获取 key 所有字段，如 <code>hkeys theUser</code></li>
<li>hvals：获取 key 字段所有值，如 <code>hvals theUser</code></li>
<li>hlen：获取 key 字段的个数，如 <code>hlen theUser</code></li>
<li>hmget：获取 key 指定字段对应的值，如 <code>hmget theUser name age</code></li>
<li>hmset：设置 key 指定字段的值，如 <code>hmset theUser weight 50 height 165</code></li>
<li>expire：设置 key 的过期时间，如 <code>expire car 10</code></li>
<li>hdel：删除 key 指定字段，如 <code>hdel theUser weight</code></li>
</ul>
<h3 id="三、list"><a href="#三、list" class="headerlink" title="三、list"></a>三、list</h3><p>列表是简单的字符串列表，按照插入顺序排序</p>
<p>list 常用命令：</p>
<ul>
<li>lpush：将一个或多个值插入列表头部，如 <code>lpush lkey1 aa bb cc</code></li>
<li>llen：获取列表长度，如 <code>llen lkey1</code></li>
<li>lrange：获取列表指定范围内的数据，如 <code>lrange lkey1 1 2</code></li>
<li>lset：通过索引设置列表元素的值，如 <code>lset lkey1 2 bc</code></li>
<li>lindex：通过索引获取列表中的元素，如 <code>lindex lkey1 1</code></li>
<li>lpop：移出并获取列表中的第1个元素，当列表中数据不存在时，key 自动删除</li>
<li>rpop：移出并获取列表中的最后1个元素，当列表中数据不存在时，key 自动删除</li>
</ul>
<h3 id="四、set"><a href="#四、set" class="headerlink" title="四、set"></a>四、set</h3><p> set 是 string 类型的无序集合，集合成员是唯一的。</p>
<p> set 常用命令：</p>
<ul>
<li>sadd：向集合中添加一个或多个元素，如 <code>sadd skey1 m1 m2 m3</code></li>
<li>scard：获取集合元素个数，如 <code>scard skey1</code></li>
<li>smembers：获取集合中的所有元素，如 <code>smembers skey1</code></li>
<li>sdiff：获取指定所有集合的差集，如 <code>sdiff skey1 skey2</code></li>
<li>sinter：获取指定所有集合的交集，如 <code>sinter skey1 skey2</code></li>
<li>sunion：获取指定所有集合的并集，如 <code>sunion skey1 skey2</code></li>
<li>srandmember：获取指定集合中一个或多个随机数，如 <code>srandmember skey2</code></li>
<li>sismember：判断某个元素是否为集合成员，如 <code>sismember skey2 m1</code></li>
<li>spop：随机移出一个元素，并返回这个元素，如 <code>spop skey2</code></li>
</ul>
<h3 id="五、zset"><a href="#五、zset" class="headerlink" title="五、zset"></a>五、zset</h3><p>zset 是 string 类型的有序集合，集合成员是唯一的。每个元素都关联一个 double 类型的分数。</p>
<p>zset 常用命令：</p>
<ul>
<li>zadd：向集合中添加一个或多个元素，如 <code>zadd zkey1 50 m1 60 m2 40 m3 70 m4</code></li>
<li>zcard：获取集合元素个数，如 <code>zcard zkey1</code></li>
<li>zscore：获取集合中元素的分数值，如 <code>zscore zkey1 m1</code></li>
<li>zcount：获取集合中元素的分数值在指定范围内的个数，如 <code>zcount zkey1 60 70</code></li>
<li>zrank：获取集合某个元素在有序集合中排序的索引，如 <code>zrank zkey1 m2</code></li>
<li>zincrby：指定集合中某元素值增长的大小，如 <code>zincrby zkey1 100 m2</code></li>
<li>zrange：通过索引区间获取集合指定区间内的元素，如 <code>zrange zkey1 2 4</code></li>
</ul>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>redis数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>在 java 中使用 jedis 操作 redis</title>
    <url>/p/redis-jedis/</url>
    <content><![CDATA[<p>本次使用的 jedis jar 包是【jedis-2.9.0.jar】，将包添加到项目中。</p>
<p>java 连接代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> redisDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jedis 连接演示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        singleTest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">singleTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Jedis jedis=<span class="keyword">new</span> Jedis(<span class="string">"192.168.2.57"</span>,<span class="number">6379</span>);<span class="comment">// 创建jedis连接</span></span><br><span class="line">        jedis.auth(<span class="string">"1234567a"</span>);<span class="comment">// 设置密码</span></span><br><span class="line">        jedis.select(<span class="number">2</span>);<span class="comment">// 设置指定库</span></span><br><span class="line"></span><br><span class="line">        jedis.set(<span class="string">"strKey1"</span>,<span class="string">"strKey1Val"</span>);<span class="comment">//设置key对应的值</span></span><br><span class="line">        String key1Val = jedis.get(<span class="string">"strKey1"</span>);<span class="comment">//获取key对应的值</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"strKey1 的值是："</span>+key1Val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用 jedis 连接报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> redis.clients.jedis.exceptions.JedisConnectionException: java.net.SocketTimeoutException: connect timed out</span><br><span class="line">	at redis.clients.jedis.Connection.connect(Connection.java:207)</span><br><span class="line">	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)</span><br><span class="line">	at redis.clients.jedis.Connection.sendCommand(Connection.java:126)</span><br><span class="line">	at redis.clients.jedis.Connection.sendCommand(Connection.java:117)</span><br><span class="line">	at redis.clients.jedis.BinaryClient.auth(BinaryClient.java:564)</span><br><span class="line">	at redis.clients.jedis.BinaryJedis.auth(BinaryJedis.java:2138)</span><br><span class="line">	at redisDemo.JedisTest.main(JedisTest.java:12)</span><br><span class="line">Caused by: java.net.SocketTimeoutException: connect timed out</span><br><span class="line">	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)</span><br><span class="line">	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)</span><br><span class="line">	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)</span><br><span class="line">	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)</span><br><span class="line">	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)</span><br><span class="line">	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)</span><br><span class="line">	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)</span><br><span class="line">	at java.net.Socket.connect(Socket.java:589)</span><br><span class="line">	at redis.clients.jedis.Connection.connect(Connection.java:184)</span><br><span class="line">	... 6 more</span><br><span class="line">Disconnected from the target VM, address: <span class="string">'127.0.0.1:63851'</span>, transport: <span class="string">'socket'</span></span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 1</span><br></pre></td></tr></table></figure>

<p>redis 服务已经启动，在 Linux 上可以操作，但是为啥连接不上？</p>
<p>这可能是因为 redis 服务所在服务器端口不能被访问，应该设置下防火墙，将 redis 使用的端口添加到防火墙策略中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --state</span></span><br><span class="line">running</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --add-port=6379/tcp --permanent</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line">6379/tcp</span><br></pre></td></tr></table></figure>

<p>打开后就可以使用了，输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Connected to the target VM, address: <span class="string">'127.0.0.1:65165'</span>, transport: <span class="string">'socket'</span></span><br><span class="line">strKey1 的值是：strKey1Val</span><br></pre></td></tr></table></figure>

<p>使用连接池的方式来操作 redis，需要引入一个 jar 包【commons-pool2-2.4.2.jar】：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> redisDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jedis 连接演示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//singleTest();</span></span><br><span class="line">        poolTest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">poolTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        JedisPoolConfig config=<span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        config.setMaxTotal(<span class="number">10</span>);</span><br><span class="line">        config.setMaxIdle(<span class="number">5</span>);</span><br><span class="line">        config.setMaxWaitMillis(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        JedisPool pool=<span class="keyword">new</span> JedisPool(config,<span class="string">"192.168.2.57"</span>,<span class="number">6379</span>);</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line"></span><br><span class="line">        jedis.auth(<span class="string">"1234567a"</span>);</span><br><span class="line">        jedis.select(<span class="number">3</span>);</span><br><span class="line">        jedis.set(<span class="string">"strKey2151"</span>,<span class="string">"abcde"</span>);</span><br><span class="line"></span><br><span class="line">        String keyVal = jedis.get(<span class="string">"strKey2151"</span>);<span class="comment">//获取key对应的值</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"strKey2151 的值是："</span>+keyVal);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">strKey2151 的值是：abcde</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>java使用redis</tag>
        <tag>java</tag>
        <tag>jedis</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（九）： 群晖系统的使用之 Monments</title>
    <url>/p/nas-monments/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221026.png" alt="20200505221320"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221136.png" alt="20200505221331"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221455.png" alt="20200505221506"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221529.png" alt="20200505221542"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222217.png" alt="20200505222249"></p>
<p>安装完成，主页：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222524.png" alt="20200505222540"></p>
<h2 id="手机端登录"><a href="#手机端登录" class="headerlink" title="手机端登录"></a>手机端登录</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222627.png" alt="20200505222635"></p>
<p>开启照片备份：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222821.png" alt="20200505222844"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222831.png" alt="20200505222856"></p>
<h2 id="电脑端使用"><a href="#电脑端使用" class="headerlink" title="电脑端使用"></a>电脑端使用</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_224032.png" alt="20200505224042"></p>
<h2 id="异常问题"><a href="#异常问题" class="headerlink" title="异常问题"></a>异常问题</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221900.png" alt="20200505221907"><br><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221926.png" alt="20200505221931"><br><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221949.png" alt="20200505221958"></p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
        <tag>Monments</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（十一）：群晖系统的使用之 Frp 内网穿透</title>
    <url>/p/nas-network-frp/</url>
    <content><![CDATA[<p>服务端部署参考我的另一篇文章：<a href="/p/frp-remote-desk/">frp 内网穿透实战（一）：远程桌面连接 windows</a></p>
<p>使用命令 <code>wget http://kungge.com/assist/frp_0.31.2_linux_amd64.tar.gz</code> 下载 frp 包，然后将包移动至目录【/usr/local/】下，进入该目录解压，进入解压的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Synology:~<span class="comment"># mv -f frp_0.31.2_linux_amd64.tar.gz /usr/local/</span></span><br><span class="line">root@Synology:~<span class="comment"># cd /usr/local/</span></span><br><span class="line">root@Synology:/usr/<span class="built_in">local</span><span class="comment"># ls</span></span><br><span class="line">bin  etc  frp_0.31.2_linux_amd64.tar.gz  lib  libexec  node  packages  share  SynologyApplicationService  transmission  zerotier</span><br><span class="line">root@Synology:/usr/<span class="built_in">local</span><span class="comment"># tar -zxvf frp_0.31.2_linux_amd64.tar.gz </span></span><br><span class="line">frp_0.31.2_linux_amd64/</span><br><span class="line">frp_0.31.2_linux_amd64/frps_full.ini</span><br><span class="line">frp_0.31.2_linux_amd64/frps.ini</span><br><span class="line">frp_0.31.2_linux_amd64/frpc</span><br><span class="line">frp_0.31.2_linux_amd64/frpc_full.ini</span><br><span class="line">frp_0.31.2_linux_amd64/frps</span><br><span class="line">frp_0.31.2_linux_amd64/LICENSE</span><br><span class="line">frp_0.31.2_linux_amd64/frpc.ini</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/frpc@.service</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/frpc.service</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/frps.service</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/frps@.service</span><br><span class="line">root@Synology:/usr/<span class="built_in">local</span><span class="comment"># cd frp_0.31.2_linux_amd64</span></span><br></pre></td></tr></table></figure>

<p>使用命令 <code>vi frpc.ini</code> 修改客户端配置文件，修改内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server_addr = 111.X.69.34</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 5022</span><br><span class="line"></span><br><span class="line">[web1]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_port = 5000</span><br><span class="line">remote_port = 5000</span><br><span class="line">custom_domains = localhost</span><br></pre></td></tr></table></figure>

<ul>
<li>111.X.69.34 是服务器的公网IP</li>
<li>ssh 配的是远程可以通过 ssh 连接工具连接到群晖SSh。</li>
<li>web1 配的是远程访问群晖DSM系统。</li>
</ul>
<p>保存，然后后台启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Synology:/usr/<span class="built_in">local</span>/frp_0.31.2_linux_amd64<span class="comment"># nohup ./frpc -c ./frpc.ini &amp;</span></span><br><span class="line">[1] 20768</span><br><span class="line">root@Synology:/usr/<span class="built_in">local</span>/frp_0.31.2_linux_amd64<span class="comment"># nohup: ignoring input and appending output to ‘nohup.out’</span></span><br></pre></td></tr></table></figure>

<p>查看启动日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Synology:/usr/<span class="built_in">local</span>/frp_0.31.2_linux_amd64<span class="comment"># cat nohup.out</span></span><br><span class="line">2020/05/06 00:19:23 [I] [service.go:250] [b0c859e1dc5b7a1f] login to server success, get run id [b0c859e1dc5b7a1f], server udp port [0]</span><br><span class="line">2020/05/06 00:19:23 [I] [proxy_manager.go:144] [b0c859e1dc5b7a1f] proxy added: [ssh web1]</span><br><span class="line">2020/05/06 00:19:23 [I] [control.go:164] [b0c859e1dc5b7a1f] [ssh] start proxy success</span><br><span class="line">2020/05/06 00:19:23 [I] [control.go:164] [b0c859e1dc5b7a1f] [web1] start proxy success</span><br></pre></td></tr></table></figure>

<p>启动成功了。</p>
<p>服务器防火墙开放5000和5022端口。</p>
<p>直接在远程访问：http://公网IP:5000，如本次将域名【vrgamehome.com】解析到公网IP，因此使用【<a href="http://vrgamehome:5000】访问：">http://vrgamehome:5000】访问：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-06_002512.png" alt="20200506005501"></p>
<p>使用 frp 内网传透完成。</p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>frp</tag>
        <tag>内网穿透</tag>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（七）： 群晖系统的使用之 Zerotier 实现内网穿透</title>
    <url>/p/nas-network/</url>
    <content><![CDATA[<p>前面讲到路由器端口转发，但是需要公网IP，如果没有公网IP的话可以考虑内网穿透。</p>
<h2 id="内网穿透原理"><a href="#内网穿透原理" class="headerlink" title="内网穿透原理"></a>内网穿透原理</h2><p>百度百科的解释：内网穿透，也即 NAT 穿透，进行 NAT 穿透是为了使具有某一个特定源 IP 地址和源端口号的数据包不被 NAT 设备屏蔽而正确路由到内网主机。</p>
<p>简单点说就是让外部能访问某局域网内没有公网IP的计算机。</p>
<p>ngrok和frp 反向代理型。<br>zerotier 点对点的型。</p>
<h2 id="注册登录-zerotier"><a href="#注册登录-zerotier" class="headerlink" title="注册登录 zerotier"></a>注册登录 zerotier</h2><p>点击登录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163302.png" alt="20200505163620"></p>
<p>点击注册：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163345.png" alt="20200505163716"></p>
<p>输入基本信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163420.png" alt="20200505163753"></p>
<p>登录邮箱验证：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163446.png" alt="20200505163817"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163530.png" alt="20200505163840"></p>
<p>注册成功后账户信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163927.png" alt="20200505163955"></p>
<p>API Access Tokens 是开发者使用的，这里暂不使用，其它信息也不用改。</p>
<h2 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h2><p>点击 Networks 菜单，然后 Create a Network 则会创建一个网络：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_164241.png" alt="20200505164400"></p>
<p>点击 ID 进入详情，可以看到IP网段：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_164606.png" alt="20200505164622"></p>
<p>可以看到当前没有设备连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_164650.png" alt="20200505164737"></p>
<h2 id="安装群晖版客户端"><a href="#安装群晖版客户端" class="headerlink" title="安装群晖版客户端"></a>安装群晖版客户端</h2><p>点击 the download page 进入下载页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_164858.png" alt="20200505164937"></p>
<p>下载页面展示了下载连接，支持很多设备。下载群晖版：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_165730.png" alt="20200505170946"></p>
<p>点击进入可下载的列表：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_165757.png" alt="20200505171010"></p>
<p>选择需要下载的版本，如果是白群晖可根据 cpu 型号来选，进入群晖官方网站查看配置列表，网页地址【<a href="https://www.synology.com/zh-cn/knowledgebase/DSM/tutorial/Compatibility_Peripherals/What_kind_of_CPU_does_my_NAS_have】：" target="_blank" rel="noopener">https://www.synology.com/zh-cn/knowledgebase/DSM/tutorial/Compatibility_Peripherals/What_kind_of_CPU_does_my_NAS_have】：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_170218.png" alt="20200505170224"></p>
<p>比如使用的设备是【DS918+】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_170411.png" alt="20200505170429"></p>
<p>进入 intel 官网【<a href="https://ark.intel.com/content/www/cn/zh/ark.html#@Processors】查看这个型号cpu信息获取" target="_blank" rel="noopener">https://ark.intel.com/content/www/cn/zh/ark.html#@Processors】查看这个型号cpu信息获取</a> cpu 代号，搜索【j3455】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_180744.png" alt="20200505180831"></p>
<p>搜索到的结果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_170627.png" alt="20200505170659"></p>
<p>得到的是 Apoll Lake，对应找到 zerotier 版软件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_170854.png" alt="20200505170910"></p>
<p>如果是黑群晖则需要根据引导模拟的cpu来对应版本，进入信息中心可查找到：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171344.png" alt="20200505171423"></p>
<p>进入套件中心，选择手动安装：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171709.png" alt="20200505171940"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171818.png" alt="20200505171957"></p>
<p>选择安装的位置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171830.png" alt="20200505172020"></p>
<p>下一步，应用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171837.png" alt="20200505172041"></p>
<h2 id="群晖版客户端连接-zerotier-网络"><a href="#群晖版客户端连接-zerotier-网络" class="headerlink" title="群晖版客户端连接 zerotier 网络"></a>群晖版客户端连接 zerotier 网络</h2><p>打开 zerotier 将网络ID输入连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172352.png" alt="20200505173020"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172416.png" alt="20200505173030"></p>
<p>等待连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172426.png" alt="20200505173054"></p>
<p>连接失败了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172504.png" alt="20200505173115"></p>
<p>为什么连接失败了，因为 zerotier 后台需要允许连接，勾选：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172651.png" alt="20200505173204"></p>
<p>连接成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172937.png" alt="20200505173220"></p>
<p>进入网络可以看到新增了一个局域网连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_173347.png" alt="20200505173514"></p>
<h2 id="安装-windows-版客户端并连接-zerotier-网络"><a href="#安装-windows-版客户端并连接-zerotier-网络" class="headerlink" title="安装 windows 版客户端并连接 zerotier 网络"></a>安装 windows 版客户端并连接 zerotier 网络</h2><p>windows 版在另外一个云服务器上安装。</p>
<p>下载 windows 版：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_165036.png" alt="20200505165233"></p>
<p>安装：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_165331.png" alt="20200505165444"></p>
<p>运行，先点击 NodID 登录，然后 Join Network：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_173910.png" alt="20200505174831"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_174025.png" alt="20200505174847"></p>
<p>加入网络，然后会弹出一个网络发现，确定：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_174036.png" alt="20200505174918"></p>
<p>查看网络连接，多了一个虚拟网络：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_180348.png" alt="20200505180430"></p>
<p>查看连接信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_174734.png" alt="20200505174950"></p>
<p>未连接成功，还需要勾选下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_175044.png" alt="20200505175109"></p>
<p>再次查看，已经连接成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_175134.png" alt="20200505175150"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_175319.png" alt="20200505175328"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_181107.png" alt="20200505181118"></p>
<h2 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h2><p>在 windows 上 ping nas 虚拟网络地址测试连通性，发现很不稳定：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ping 172.30.235.184</span><br><span class="line"></span><br><span class="line">正在 Ping 172.30.235.184 具有 32 字节的数据:</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line">来自 172.30.235.184 的回复: 字节&#x3D;32 时间&#x3D;554ms TTL&#x3D;64</span><br><span class="line"></span><br><span class="line">172.30.235.184 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 &#x3D; 4，已接收 &#x3D; 1，丢失 &#x3D; 3 (75% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 &#x3D; 554ms，最长 &#x3D; 554ms，平均 &#x3D; 554ms</span><br></pre></td></tr></table></figure>

<p>在 windows 上访问群晖系统失败。</p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>端口转发</tag>
        <tag>群晖</tag>
        <tag>dsm</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 学习总结(二)：常用命令</title>
    <url>/p/linux-centos-commond/</url>
    <content><![CDATA[<h2 id="帮助相关"><a href="#帮助相关" class="headerlink" title="帮助相关"></a>帮助相关</h2><ul>
<li>查看帮助：man [命令]</li>
<li>退出帮助：q</li>
</ul>
<h2 id="文件目录相关"><a href="#文件目录相关" class="headerlink" title="文件目录相关"></a>文件目录相关</h2><p>切换目录，使用 cd 命令：</p>
<ul>
<li>cd [目录]：切换到某目录</li>
<li>cd ..：返回上一级目录</li>
<li>cd /：切换到根目录</li>
<li>cd ~：切换到加目录</li>
</ul>
<p>查看当前所在位置：pwd</p>
<p>创建目录：mkdir [目录名]。</p>
<p>删除目录：rmdir [目录名]。</p>
<p>显示目录下的文件列表使用 ls 命令：</p>
<ul>
<li>ls</li>
<li>ls -a</li>
<li>ls -l：简写的方式(ll)</li>
<li>ll -h：友好的显示</li>
</ul>
<p>查看文件内容：</p>
<ul>
<li>cat：显示文件的所有内容</li>
<li>more：分页显示，空格进入下一页，回车进入下一行</li>
<li>less：分页显示，使用 PgUp 和 PgDn 翻页</li>
<li>tail</li>
</ul>
<p>创建文件使用 touch 命令。</p>
<h2 id="软件安装包管理"><a href="#软件安装包管理" class="headerlink" title="软件安装包管理"></a>软件安装包管理</h2><p>yum 命令：</p>
<ol>
<li>列出软件清单<blockquote>
<ol>
<li>列出所有可更新的软件清单：yum check-update</li>
<li>列出所有可安裝的软件清单：yum list</li>
<li>查找软件包：yum search [keyword]</li>
<li>列出以XX开头的软件清单：yum list XX*</li>
</ol>
</blockquote>
</li>
<li>更新软件<blockquote>
<ol>
<li>更新所有软件：yum update</li>
<li>更新指定的软件：yum update <package_name></li>
</ol>
</blockquote>
</li>
<li>安装软件<blockquote>
<ol>
<li>仅安装指定的软件：yum install <package_name></li>
</ol>
</blockquote>
</li>
<li>删除软件包：yum remove <package_name></li>
<li>清除缓存:<blockquote>
<ol>
<li>清除缓存目录下的软件包：yum clean packages</li>
<li>清除缓存目录下的header：syum clean headers</li>
<li>清除缓存目录下旧的headers：yum clean oldheaders: </li>
<li>清除缓存目录下的软件包及旧的headers：yum clean, yum clean all (= yum clean packages; yum clean oldheaders) </li>
</ol>
</blockquote>
</li>
</ol>
<p>yum 的配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/yum.conf </span></span><br><span class="line">[main]</span><br><span class="line">cachedir=/var/cache/yum/<span class="variable">$basearch</span>/<span class="variable">$releasever</span></span><br><span class="line">keepcache=0</span><br><span class="line">debuglevel=2</span><br><span class="line">logfile=/var/<span class="built_in">log</span>/yum.log</span><br><span class="line">exactarch=1</span><br><span class="line">obsoletes=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">plugins=1</span><br><span class="line">installonly_limit=5</span><br><span class="line">bugtracker_url=http://bugs.centos.org/set_project.php?project_id=23&amp;ref=http://bugs.centos.org/bug_report_page.php?category=yum</span><br><span class="line">distroverpkg=centos-release</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  This is the default, if you make this bigger yum won't see if the metadata</span></span><br><span class="line"><span class="comment"># is newer on the remote and so you'll "gain" the bandwidth of not having to</span></span><br><span class="line"><span class="comment"># download the new metadata and "pay" for it by yum not having correct</span></span><br><span class="line"><span class="comment"># information.</span></span><br><span class="line"><span class="comment">#  It is esp. important, to have correct metadata, for distributions like</span></span><br><span class="line"><span class="comment"># Fedora which don't keep old packages around. If you don't like this checking</span></span><br><span class="line"><span class="comment"># interupting your command line usage, it's much better to have something</span></span><br><span class="line"><span class="comment"># manually check the metadata once an hour (yum-updatesd will do this).</span></span><br><span class="line"><span class="comment"># metadata_expire=90m</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PUT YOUR REPOS HERE OR IN separate files named file.repo</span></span><br><span class="line"><span class="comment"># in /etc/yum.repos.d</span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>rpm 命令：</p>
<ol>
<li>列出安装包清单<blockquote>
<ol>
<li>列出已经安装的所有包：<code>rpm -qa</code>，分页列出：<code>rpm -qa|less</code>，排序列出：<code>rpm -qa | sort</code>，统计多少个：<code>rpm -qa | wc -l</code></li>
</ol>
</blockquote>
</li>
<li>列出某安装包<blockquote>
<ol>
<li>查询已安装包的版本，如 <code>rpm -q curl</code></li>
<li>列出某软件的安装集合，如 <code>rpm -qa|grep nginx</code></li>
<li>列出某软件的安装位置和文件，如 <code>rpm -qla|grep nginx</code></li>
</ol>
</blockquote>
</li>
</ol>
<h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><p>很重要，使用命令 grep。</p>
<p>将一个命令的输出用作另一个命令的输入。</p>
<p>如： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost testdir1202]<span class="comment"># ifconfig | grep 192.168.0</span></span><br><span class="line">[root@localhost testdir1202]<span class="comment"># ifconfig | grep 192.168.2</span></span><br><span class="line">        inet 192.168.2.57  netmask 255.255.255.0  broadcast 192.168.2.255</span><br><span class="line">[root@localhost testdir1202]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h2><p>date 命令显示或设置系统时间。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost testdir1202]<span class="comment"># date</span></span><br><span class="line">Mon Dec  2 01:52:02 PST 2019</span><br><span class="line">[root@localhost testdir1202]<span class="comment"># date -s "2019-12-02 17:53"</span></span><br><span class="line">Mon Dec  2 17:53:00 PST 2019</span><br><span class="line">[root@localhost testdir1202]<span class="comment"># date</span></span><br><span class="line">Mon Dec  2 17:53:05 PST 2019</span><br><span class="line">[root@localhost testdir1202]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>clear 命令清屏，或者使用快捷键【Ctrl+l】。</p>
<p>系统内核：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-514.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>系统版本:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/redhat-release </span></span><br><span class="line">CentOS Linux release 7.7.1908 (Core)</span><br></pre></td></tr></table></figure>

<h2 id="进程相关"><a href="#进程相关" class="headerlink" title="进程相关"></a>进程相关</h2><h3 id="ps-命令"><a href="#ps-命令" class="headerlink" title="ps 命令"></a>ps 命令</h3><p>ps 命令用于显示当前进程 (process) 的状态。</p>
<p>显示进程清单：</p>
<blockquote>
<ol>
<li>ps -ef：查看所有进程，ps -ef | grep bash：查找某一进程</li>
<li>ps -A：显示进程信息，ps -u [user]：显示某用户进程信息，如 ps -u root</li>
<li>ps aux 查看输出结果，输出结果格式：<code>USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND</code></li>
</ol>
</blockquote>
<p><code>ps aux</code> 进程输出结果说明：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USER: 行程拥有者</span><br><span class="line">PID: pid</span><br><span class="line">%CPU: 占用的 CPU 使用率</span><br><span class="line">%MEM: 占用的记忆体使用率</span><br><span class="line">VSZ: 占用的虚拟记忆体大小</span><br><span class="line">RSS: 占用的记忆体大小</span><br><span class="line">TTY: 终端的次要装置号码 (minor device number of tty)</span><br><span class="line">STAT: 该行程的状态，linux的进程有5种状态：</span><br><span class="line">    D 不可中断睡眠 uninterruptible sleep (usually IO)</span><br><span class="line">    R 运行 runnable (on run queue)</span><br><span class="line">    S 可中断睡眠 sleeping</span><br><span class="line">    T 停止 traced or stopped</span><br><span class="line">    Z 僵死 a defunct (”zombie”) process</span><br><span class="line">    s 进程是个领导者进程</span><br><span class="line">    + 该进程为前台进程</span><br><span class="line">    l 该进程是多线程进程</span><br><span class="line">    N 低优先级进程</span><br><span class="line">    &lt; 高优先级进程 </span><br><span class="line">    [] 一个内核线程</span><br><span class="line">    _注: 其它状态还包括W(无驻留页), &lt;(高优先级进程), N(低优先级进程), L(内存锁页)._</span><br><span class="line">START: 启动日期</span><br><span class="line">TIME: 执行的时间</span><br><span class="line">COMMAND:所执行的指令</span><br></pre></td></tr></table></figure>

<p>此外还有一些命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1) ps a 显示现行终端机下的所有程序，包括其他用户的程序。</span><br><span class="line">2）ps -A 显示所有程序。 </span><br><span class="line">3）ps c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。 </span><br><span class="line">4）ps -e 此参数的效果和指定&quot;A&quot;参数相同。 </span><br><span class="line">5）ps e 列出程序时，显示每个程序所使用的环境变量。 </span><br><span class="line">6）ps f 用ASCII字符显示树状结构，表达程序间的相互关系。 </span><br><span class="line">7）ps -H 显示树状结构，表示程序间的相互关系。 </span><br><span class="line">8）ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。 </span><br><span class="line">9）ps s 采用程序信号的格式显示程序状况。 </span><br><span class="line">10）ps S 列出程序时，包括已中断的子程序资料。 </span><br><span class="line">11）ps -t 　指定终端机编号，并列出属于该终端机的程序的状况。 </span><br><span class="line">12）ps u 　以用户为主的格式来显示程序状况。 </span><br><span class="line">13）ps x 　显示所有程序，不以终端机来区分。</span><br></pre></td></tr></table></figure>

<h3 id="top-命令"><a href="#top-命令" class="headerlink" title="top 命令"></a>top 命令</h3><p> top 命令用于实时显示进程（process）的动态。</p>
<p> top 命令语法 <code>top [-] [d delay] [q] [c] [S] [s] [i] [n] [b]</code>。</p>
<p>参数说明：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d : 改变显示的更新速度，或是在交谈式指令列( interactive command)按 s</span><br><span class="line">q : 没有任何延迟的显示速度，如果使用者是有 superuser 的权限，则 top 将会以最高的优先序执行</span><br><span class="line">c : 切换显示模式，共有两种模式，一是只显示执行档的名称，另一种是显示完整的路径与名称</span><br><span class="line">S : 累积模式，会将己完成或消失的子行程 ( dead child process ) 的 CPU time 累积起来</span><br><span class="line">s : 安全模式，将交谈式指令取消, 避免潜在的危机</span><br><span class="line">i : 不显示任何闲置 (idle) 或无用 (zombie) 的行程</span><br><span class="line">n : 更新的次数，完成后将会退出 top</span><br><span class="line">b : 批次档模式，搭配 &quot;n&quot; 参数一起使用，可以用来将 top 的结果输出到档案内</span><br></pre></td></tr></table></figure>

<p>常用命令：</p>
<ol>
<li>显示进程清单<blockquote>
<ol>
<li>top ：显示进程信息</li>
<li>top -c：显示完整命令</li>
<li>top -S：以累积模式显示程序信息</li>
<li>top -n [数字]：设置信息更新次数后退出，如 <code>top -n 3</code> 表示更新3次后停止更新显示</li>
<li>top -d [数字]：设置信息更新时间（单位秒），如 <code>top -d 5</code> 表示更新周期为5秒</li>
</ol>
</blockquote>
</li>
<li>top -p [PID] ：显示指定进程的信息</li>
</ol>
<h3 id="kill-命令"><a href="#kill-命令" class="headerlink" title="kill 命令"></a>kill 命令</h3><p>kill 命令杀掉某进程：</p>
<blockquote>
<ol>
<li>kill 5744：杀掉5744编号的进程</li>
<li>kill -9 5744：强制杀掉5744编号的进程</li>
</ol>
</blockquote>
<h2 id="端口占用情况"><a href="#端口占用情况" class="headerlink" title="端口占用情况"></a>端口占用情况</h2><p>查看端口占用情况可以使用 lsof 和 netstat 命令。</p>
<h3 id="lsof-命令"><a href="#lsof-命令" class="headerlink" title="lsof 命令"></a>lsof 命令</h3><p>lsof(list open files)是一个列出当前系统打开文件的工具。<br>lsof 查看端口占用语法格式：<code>lsof -i:[端口号]</code>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># lsof -i:7000</span></span><br><span class="line">COMMAND   PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME</span><br><span class="line">frps    14636 root    3u  IPv6 2848307      0t0  TCP *:afs3-fileserver (LISTEN)</span><br><span class="line">frps    14636 root    7u  IPv6 4385097      0t0  TCP VM_0_7_centos:afs3-fileserver-&gt;114.88.53.170:53422 (ESTABLISHED)</span><br><span class="line">frps    14636 root    8u  IPv6 4387361      0t0  TCP VM_0_7_centos:afs3-fileserver-&gt;114.88.53.170:53440 (ESTABLISHED)</span><br><span class="line">frps    14636 root   11u  IPv6 4407636      0t0  TCP VM_0_7_centos:afs3-fileserver-&gt;114.88.53.170:53580 (ESTABLISHED)</span><br></pre></td></tr></table></figure>

<p>输出信息含义：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COMMAND：进程名称</span><br><span class="line">PID：进程标识</span><br><span class="line">USER：进程所有者</span><br><span class="line">FD：文件描述符，应用程序通过文件描述符识别文件</span><br><span class="line">TYPE：文件类型</span><br><span class="line">DEVICE：指定磁盘的名称</span><br><span class="line">SIZE：文件的大小</span><br><span class="line">NODE：索引接点，即文件在磁盘上的标识</span><br><span class="line">NAME：打开文件的确切名称</span><br></pre></td></tr></table></figure>

<h3 id="netstat-命令"><a href="#netstat-命令" class="headerlink" title="netstat 命令"></a>netstat 命令</h3><p>netstat 是一个监控TCP/IP网络的非常有用的工具，它可以显示路由表、实际的网络连接以及每一个网络接口设备的状态信息，可显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况。</p>
<p>格式 <code>netstat [-a][-e][-n][-o][-p Protocol][-r][-s][Interval]</code>。</p>
<p>选项的含义：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-a（all） 显示所有socket，包括正在监听的。 </span><br><span class="line">-l 仅列出在Listen(监听)的服务状态。　　</span><br><span class="line">-c 每隔1秒就重新显示一遍，直到用户中断它。 　　</span><br><span class="line">-i 显示所有网络接口的信息，格式“netstat -i”。 　　</span><br><span class="line">-n 以网络IP地址代替名称，显示出网络连接情形。 　</span><br><span class="line">-r 显示核心路由表，格式同“route -e”。 　　</span><br><span class="line">-t（TCP） 显示TCP协议的连接情况 　　</span><br><span class="line">-u（UDP）显示UDP协议的连接情况。 　　</span><br><span class="line">-v 显示正在进行的工作。 　　</span><br><span class="line">-p 显示指定协议信息。 　　</span><br><span class="line">-b 显示在创建每个连接或侦听端口时涉及的可执行程序。 　　</span><br><span class="line">-e 显示以太网统计。此选项可以与 -s 选项结合使用。 　　</span><br><span class="line">-f 显示外部地址的完全限定域名(FQDN)。 　　</span><br><span class="line">-o 显示拥有的与每个连接关联的进程 ID。 　　</span><br><span class="line">-s 显示每个协议的统计。 　　</span><br><span class="line">-x 显示 NetworkDirect 连接、侦听器和共享端点。 　　</span><br><span class="line">-y 显示所有连接的 TCP 连接模板。无法与其他选项结合使用。 　　</span><br><span class="line">interval 重新显示选定的统计，各个显示间暂停的间隔秒数。按 CTRL+C 停止重新显示统计。如果省略，则 netstat 将打印当前的配置信息一次。</span><br></pre></td></tr></table></figure>

<p><code>netstat -lnptu</code> 比较常用 用于列出 tcp和udp 端口和进程等相关信息，使用管道可查看某端口 <code>netstat -lnptu | grep 7000</code>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># netstat -lnptu</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1392/sshd           </span><br><span class="line">tcp6       0      0 :::7000                 :::*                    LISTEN      14636/./frps        </span><br><span class="line">tcp6       0      0 :::6001                 :::*                    LISTEN      14636/./frps        </span><br><span class="line">tcp6       0      0 :::6002                 :::*                    LISTEN      14636/./frps        </span><br><span class="line">udp        0      0 0.0.0.0:68              0.0.0.0:*                           921/dhclient        </span><br><span class="line">udp        0      0 172.17.0.7:123          0.0.0.0:*                           2546/ntpd           </span><br><span class="line">udp        0      0 127.0.0.1:123           0.0.0.0:*                           2546/ntpd           </span><br><span class="line">udp6       0      0 fe80::5054:ff:fed2::123 :::*                                2546/ntpd           </span><br><span class="line">udp6       0      0 ::1:123                 :::*                                2546/ntpd           </span><br><span class="line">[root@VM_0_7_centos ~]<span class="comment"># netstat -lnptu | grep 7000</span></span><br><span class="line">tcp6       0      0 :::7000</span><br></pre></td></tr></table></figure>

<p>常见的组合有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">显示所有端口：netstat -a，显示所有 tcp或udp 端口：netstat -at或-au</span><br><span class="line">显示监听端口：netstat -l， 显示所有监听 tcp或upd 端口：netstat -lt或lu</span><br><span class="line">显示所有端口的统计信息：netstat -s，显示 TCP或UDP 端口的统计信息 netstat -st或-su</span><br></pre></td></tr></table></figure>

<h2 id="网络管理相关"><a href="#网络管理相关" class="headerlink" title="网络管理相关"></a>网络管理相关</h2><ul>
<li>ifconfig：查看所有网络设置</li>
<li>ifconfig [网卡名称] down：禁用网卡</li>
<li>ifconfig [网卡名称] up：启用网卡</li>
<li>ping [ip或网址]：和windows一样，使用【Ctrl+c】取消</li>
</ul>
<h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>TODO</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
        <tag>linux 学习总结</tag>
        <tag>linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（一）： 蜗牛星际主机开箱和群晖系统连接</title>
    <url>/p/nas-start/</url>
    <content><![CDATA[<h2 id="一、拆箱"><a href="#一、拆箱" class="headerlink" title="一、拆箱"></a>一、拆箱</h2><p>在淘宝上购买了一台蜗牛星际主机，俗称的矿渣机，买来的时候卖家已经装好了黑群晖。</p>
<p>今天收到了快递，怀着激动的心情去取快递，好家伙还挺重的，估计有5公斤：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_203516.png" alt="2037"></p>
<p>怀着激动的心情拆箱，拆开看下内部：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_203228.png" alt="2033"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_203240.png" alt="2034"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_203259.png" alt="2035"></p>
<h2 id="二、接通电源开机"><a href="#二、接通电源开机" class="headerlink" title="二、接通电源开机"></a>二、接通电源开机</h2><p>找了一台显示器，接了鼠标和键盘，开机：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_203848.png" alt="2038"></p>
<p>出现这个界面说明正常进系统，买家也给了信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一步 给NAS主机接上电源线，按开机键 当显示器显示find.synology.com to continue 说明正常进系统，给NAS主机插上网线</span><br><span class="line"></span><br><span class="line">第二步 在台式机上安装 群晖助手（后面有提供下载地址或买家自己下载），</span><br><span class="line">安装好之后 点击连接 登录NAS主机  提示输入用户名和密码，用户名是admin  密码123456</span><br><span class="line"></span><br><span class="line">群晖助手 下载地址：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1lvK0aQZaa6W09-***  提取码: axfy</span><br></pre></td></tr></table></figure>

<h2 id="三、连接群晖系统"><a href="#三、连接群晖系统" class="headerlink" title="三、连接群晖系统"></a>三、连接群晖系统</h2><p>先安装群晖助手，卖家给了百度网盘连接，下载下来安装：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_124409.png" alt="2046"></p>
<p>安装完成，打开搜索设备：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_124502.png" alt="2047"></p>
<p>没搜索到：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_124858.png" alt="20200503205402"></p>
<p>确定网线是否插好，插的没问题，再次扫描出来了（插上网线需要等一小段时间）：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_125257.png" alt="20200503210524"></p>
<p>直接联机，进入 DSM（DiskStation Manager） 登录页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_125414.png" alt="20200503210712"></p>
<p>输入用户名密码登录进入系统，主页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_211104.png" alt="20200503211136"></p>
<p>进入套件中心，默认安装了2个：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_211354.png" alt="20200503211411"></p>
<p>提供的套件还挺多的：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_211447.png" alt="20200503211522"></p>
<p>以后慢慢折腾。</p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>蜗牛星际</tag>
      </tags>
  </entry>
  <entry>
    <title>frp 内网穿透实战（一）：远程桌面连接 windows</title>
    <url>/p/frp-remote-desk/</url>
    <content><![CDATA[<p>frp github 中文文档：<a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/fatedier/frp/blob/master/README_zh.md</a></p>
<p>release 下载：<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases</a></p>
<p><em>注：服务器端和客户端下载的版本要保持一致。</em></p>
<p>本次下载的版本是【v0.31.2】：<a href="https://github.com/fatedier/frp/releases/tag/v0.31.2" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases/tag/v0.31.2</a></p>
<p>本次演示的是通过 frp 内网穿透，在远程连接一台windows电脑。</p>
<h2 id="一、部署"><a href="#一、部署" class="headerlink" title="一、部署"></a>一、部署</h2><p>部署分为服务器端和客户端，服务器是阿里云的一台 CentOS 云服务器，客户机就是本地一台 windows。</p>
<h3 id="1-1-服务端部署"><a href="#1-1-服务端部署" class="headerlink" title="1.1 服务端部署"></a>1.1 服务端部署</h3><p>本次下载的文件是【frp_0.31.2_linux_amd64.tar.gz】。</p>
<p>因为用到了服务器默认是 7000 端口，需要在防火墙中开启，如果是云服务器则只需要在安全组的入站方向增加一个端口即可。<br>由于下面客户端配置的端口是 6000 ，因此一起加上：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-24_232349.png" alt="2323"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将文件上传到服务器</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压压缩包</span></span><br><span class="line">tar -zxvf frp_0.31.2_linux_amd64.tar.gz</span><br><span class="line">​</span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> frp_0.31.2_linux_amd64</span><br><span class="line">​</span><br><span class="line"><span class="comment"># 设置后台运行frp服务端</span></span><br><span class="line">nohup ./frps -c ./frps.ini &amp;</span><br></pre></td></tr></table></figure>

<p>查看 nohub.out 日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment"># cat nohup.out </span></span><br><span class="line">2020/03/24 22:48:05 [I] [service.go:152] frps tcp listen on 0.0.0.0:7000</span><br><span class="line">2020/03/24 22:48:05 [I] [root.go:205] start frps success</span><br><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>服务端启动成功。</p>
<h3 id="1-2-客户端部署"><a href="#1-2-客户端部署" class="headerlink" title="1.2 客户端部署"></a>1.2 客户端部署</h3><p>本次下载的文件是【frp_0.31.2_windows_386.zip】。</p>
<p>解压目录，修改 frpc.ini 文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 111.X.X.34</span><br><span class="line">server_port &#x3D; 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 127.0.0.1</span><br><span class="line">local_port &#x3D; 3389</span><br><span class="line">remote_port &#x3D; 6000</span><br></pre></td></tr></table></figure>

<p>进入解压的根目录，输入命令 <code>frpc -c frpc.ini</code> ：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-24_231655.png" alt="2317"></p>
<p>客户端启动成功。</p>
<p>开启远程桌面功能：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-24_230259.png" alt="2318"></p>
<h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><p>找一台非局域网的电脑远程连接上面部署的电脑：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-24_230744.png" alt="2325"></p>
<p>校验了用户名或密码错误，出现了这个说明连接到了，下面输入正确的用户名密码：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-24_230925.png" alt="2326"></p>
<p>连接成功。</p>
<p>如有域名的话，可以将域名解析到这个公网服务器ip，然后通过【域名+端口】访问。</p>
<h2 id="三、知识点"><a href="#三、知识点" class="headerlink" title="三、知识点"></a>三、知识点</h2>]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>frp</tag>
        <tag>内网穿透</tag>
        <tag>远程桌面</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（三）： 群晖系统的使用之一些常用套件的简介</title>
    <url>/p/nas-tool/</url>
    <content><![CDATA[<h2 id="Photo-Station"><a href="#Photo-Station" class="headerlink" title="Photo Station"></a>Photo Station</h2><p>Photo Station 对普通用户来说非常有用，可以将手机里的照片自动同步到这里，还可以自动进行分类，非常适合喜欢拍照的用户。</p>
<p>官方介绍：管理照片存储、随时随地共享和访问精选集、收集客户反馈以及执行更多其他操作。</p>
<p>参考详见：<a href="nas.2020050503.md">nas 折腾笔记（五）： 群晖系统的使用之安装照片管理工具 Photo Station</a></p>
<h2 id="Audio-Station"><a href="#Audio-Station" class="headerlink" title="Audio Station"></a>Audio Station</h2><p>支持很多无损格式的音频，对发烧友来说非常方便：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_101336.png" alt="20200505101359"></p>
<h2 id="Video-Station"><a href="#Video-Station" class="headerlink" title="Video Station"></a>Video Station</h2><p>是一个视频管理的套件，能根据视频文件标题进行分类，可以非常方便的管理用户上传的视频，白群晖用户能获得自动转码的功能，但是黑群晖用户需要半洗白来获取硬件解码。</p>
<h2 id="Monments"><a href="#Monments" class="headerlink" title="Monments"></a>Monments</h2><p>可以说是 Photo Station 的升级版，有了它，Photo Station 可以不用使用。</p>
<h2 id="Download-Station"><a href="#Download-Station" class="headerlink" title="Download Station"></a>Download Station</h2><p>类似迅雷的下载工具。</p>
<h2 id="Drive"><a href="#Drive" class="headerlink" title="Drive"></a>Drive</h2><p>类似百度网盘，有客户端在电脑上进行访问。</p>
<h2 id="Chat"><a href="#Chat" class="headerlink" title="Chat"></a>Chat</h2><p>聊天工具，在局域网中使用非常方便。</p>
<h2 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h2><p>office 套件，可以实现云端文档修改，多用户修改同一个文档。</p>
<h2 id="Transmission"><a href="#Transmission" class="headerlink" title="Transmission"></a>Transmission</h2><p>下载神器，可以做 PT（Private Tracker） 下载。</p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
      </tags>
  </entry>
  <entry>
    <title>在 linux 中安装与启动 redis 详解</title>
    <url>/p/redis-instal-start/</url>
    <content><![CDATA[<p>本次使用的版本是 redis-4.0.14。</p>
<h2 id="一、安装-redis"><a href="#一、安装-redis" class="headerlink" title="一、安装 redis"></a>一、安装 redis</h2><p>下载地址：<a href="http://download.redis.io/releases/redis-4.0.14.tar.gz" target="_blank" rel="noopener">http://download.redis.io/releases/redis-4.0.14.tar.gz</a></p>
<p>下载完成进行解压，然后删除压缩包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xf redis-4.0.14.tar.gz </span><br><span class="line">rm -rf ./redis-4.0.14.tar.gz</span><br></pre></td></tr></table></figure>

<p>redis 版本4需要 tcl(版本3不需要)，因此需要先安装 tcl：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install tcl -y</span><br></pre></td></tr></table></figure>

<p>需要对源码进行编译，因为 redis 是 c 语言开发的，编译需要依赖 gcc 环境，因此需要先安装 gcc-c++：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install gcc-c++ -y</span><br></pre></td></tr></table></figure>

<p>进入 redis 目录，查看是否有 Makefile 目录，如果有说明是可以源码编译的，redis 目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd redis-4.0.14/</span></span><br><span class="line">[root@localhost redis-4.0.14]<span class="comment"># ll</span></span><br><span class="line">total 304</span><br><span class="line">-rw-rw-r--.  1 root root 166629 Mar 18  2019 00-RELEASENOTES</span><br><span class="line">-rw-rw-r--.  1 root root     53 Mar 18  2019 BUGS</span><br><span class="line">-rw-rw-r--.  1 root root   1815 Mar 18  2019 CONTRIBUTING</span><br><span class="line">-rw-rw-r--.  1 root root   1487 Mar 18  2019 COPYING</span><br><span class="line">drwxrwxr-x.  6 root root    124 Mar 18  2019 deps</span><br><span class="line">-rw-rw-r--.  1 root root     11 Mar 18  2019 INSTALL</span><br><span class="line">-rw-rw-r--.  1 root root    151 Mar 18  2019 Makefile</span><br><span class="line">-rw-rw-r--.  1 root root   4223 Mar 18  2019 MANIFESTO</span><br><span class="line">-rw-rw-r--.  1 root root  20543 Mar 18  2019 README.md</span><br><span class="line">-rw-rw-r--.  1 root root  58766 Mar 18  2019 redis.conf</span><br><span class="line">-rwxrwxr-x.  1 root root    271 Mar 18  2019 runtest</span><br><span class="line">-rwxrwxr-x.  1 root root    280 Mar 18  2019 runtest-cluster</span><br><span class="line">-rwxrwxr-x.  1 root root    281 Mar 18  2019 runtest-sentinel</span><br><span class="line">-rw-rw-r--.  1 root root   7921 Mar 18  2019 sentinel.conf</span><br><span class="line">drwxrwxr-x.  3 root root   4096 Mar 18  2019 src</span><br><span class="line">drwxrwxr-x. 10 root root    167 Mar 18  2019 tests</span><br></pre></td></tr></table></figure>

<p>编译 redis(以4核方式，速度快)源文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make -j 4</span><br></pre></td></tr></table></figure>

<p>编译完成，提示【Hint: It’s a good idea to run ‘make test’ ;)】</p>
<p>make test 表示测试编译是否有问题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make <span class="built_in">test</span> -j 4</span><br></pre></td></tr></table></figure>

<p>测试编译没什么问题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\o/ All tests passed without errors!</span><br><span class="line"></span><br><span class="line">Cleanup: may take some time... OK</span><br><span class="line">make[1]: Leaving directory /root/redis-4.0.14/src</span><br></pre></td></tr></table></figure>

<p>安装 redis 到指定目录【/usr/local/redis】:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make PREFIX=/usr/<span class="built_in">local</span>/redis install</span><br></pre></td></tr></table></figure>

<p>进入安装的 bin 目录，里面就是所有的 redis 命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost redis-4.0.14]<span class="comment"># cd /usr/local/redis/</span></span><br><span class="line">[root@localhost redis]<span class="comment"># ll</span></span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x. 2 root root 134 Dec  2 08:02 bin</span><br><span class="line">[root@localhost redis]<span class="comment"># cd bin/</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ll</span></span><br><span class="line">total 21884</span><br><span class="line">-rwxr-xr-x. 1 root root 2451040 Dec  2 08:02 redis-benchmark</span><br><span class="line">-rwxr-xr-x. 1 root root 5777304 Dec  2 08:02 redis-check-aof</span><br><span class="line">-rwxr-xr-x. 1 root root 5777304 Dec  2 08:02 redis-check-rdb</span><br><span class="line">-rwxr-xr-x. 1 root root 2617120 Dec  2 08:02 redis-cli</span><br><span class="line">lrwxrwxrwx. 1 root root      12 Dec  2 08:02 redis-sentinel -&gt; redis-server</span><br><span class="line">-rwxr-xr-x. 1 root root 5777304 Dec  2 08:02 redis-server</span><br><span class="line">[root@localhost bin]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>到此 redis 安装完成。</p>
<h2 id="二、启动-redis"><a href="#二、启动-redis" class="headerlink" title="二、启动 redis"></a>二、启动 redis</h2><p>启动 redis 有多种方式：</p>
<ul>
<li>前端默认启动</li>
<li>指定端口启动</li>
<li>指定配置文件启动</li>
</ul>
<h3 id="2-1-前端默认启动"><a href="#2-1-前端默认启动" class="headerlink" title="2.1 前端默认启动"></a>2.1 前端默认启动</h3><p>前端默认启动可使用命令【./redis-server】启动即可：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.01.png" alt="Alt text" title="Optional title"></p>
<p>如上所示，可以看到，Redis 的版本是 4.0.14，运行的模式是【standalone mode】(单机模式)，端口是6379，当把当前的关掉，redis 服务就自动关闭了。</p>
<p>重新打开一个会话，进入 redis 的 bin 目录，开启一个客户端连接 redis：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli </span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> key1 val1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get key1</span><br><span class="line"><span class="string">"val1"</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> key2 val2</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> key3 val3</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"key2"</span></span><br><span class="line">2) <span class="string">"key3"</span></span><br><span class="line">3) <span class="string">"key1"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>当关闭 redis 服务后：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.02.png" alt="Alt text" title="Optional title"></p>
<p>客户端就连接不上，重新打开后，再次连接原来的数据还在，这是因为 redis 有数据备份机制，存在文件 dump.rdb 中。</p>
<p>再次启动 redis，可以看到数据是从磁盘加载的：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.03.png" alt="Alt text" title="Optional title"></p>
<h3 id="2-2-指定端口启动"><a href="#2-2-指定端口启动" class="headerlink" title="2.2 指定端口启动"></a>2.2 指定端口启动</h3><p>如指定端口6380启动，使用命令【./redis-server –port 6380】:</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.04.png" alt="Alt text" title="Optional title"></p>
<p>但是当客户端连接时却连不上，因为连接的是默认端口 6379：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli</span></span><br><span class="line">Could not connect to Redis at 127.0.0.1:6379: Connection refused</span><br><span class="line">Could not connect to Redis at 127.0.0.1:6379: Connection refused</span><br><span class="line">not connected&gt;</span><br></pre></td></tr></table></figure>

<p>那么需要指定连接到指定端口，使用命令【./redis-cli -p 6380】即可。</p>
<h3 id="2-3-指定配置文件启动"><a href="#2-3-指定配置文件启动" class="headerlink" title="2.3 指定配置文件启动"></a>2.3 指定配置文件启动</h3><p>在开发的时候一般会将配置文件拷贝，将配置文件【/root/redis-4.0.14/redis.conf】拷贝到 redis 的 bin 目录中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># cp /root/redis-4.0.14/redis.conf ./redis.conf</span></span><br></pre></td></tr></table></figure>

<p>文本文件内容比较多，大多是注释，将注释去掉看起来比较清晰：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># cat redis.conf | grep -v "#" | grep -v "^$"</span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize no</span><br><span class="line">supervised no</span><br><span class="line">pidfile /var/run/redis_6379.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">""</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir ./</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">slave-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">slave-lazy-flush no</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble no</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure>

<p>以配置文件方式启动 redis 服务使用命令 <code>./redis-server ./redis.conf</code></p>
<p>查看启动的 redis 服务： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps -ef | grep redis</span></span><br><span class="line">root      19811  17108  0 06:01 pts/4    00:00:00 ./redis-server 127.0.0.1:6379</span><br><span class="line">root      19849  17061  0 06:06 pts/3    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>

<p>在实际使用时往往会部署多台 redis，不同的 redis 不同的端口号，配置文件以端口号命名：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat redis.conf | grep -v <span class="string">"#"</span> | grep -v <span class="string">"^$"</span> &gt; redis_6379.conf</span><br></pre></td></tr></table></figure>

<p>将 redis 安装目录拷贝多个，目录名称用端口号体现，配置文件也是一样，这样方便管理。</p>
<h2 id="三、远程连接-redis"><a href="#三、远程连接-redis" class="headerlink" title="三、远程连接 redis"></a>三、远程连接 redis</h2><p>远程连接 redis 使用命令  <code>./redis-cli -p [端口号] -h [主机]</code>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -p 6379 -h 127.0.0.1</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>4.0版本的 redis 保护机制，默认绑定了 127.0.0.1 ，在 redis.conf 文件中的配置 <code>bind 127.0.0.1</code>。<br>可以使用 requirepass 设置访问密码，如 <code>requirepass 1234567a</code>。</p>
<p>客户端连接到 redis 就需要输入密码，不然无法使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -p 6379 -h 127.0.0.1</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(error) NOAUTH Authentication required.</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>输入密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -p 6379 -h 127.0.0.1</span></span><br><span class="line">127.0.0.1:6379&gt; auth 1234567a</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"key1"</span></span><br><span class="line">2) <span class="string">"key3"</span></span><br><span class="line">3) <span class="string">"key2"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>或者使用命令时带上密码： <code>./redis-cli -p [端口号] -h [主机] -a [密码]</code>，如<code>./redis-cli -p 6379 -h 127.0.0.1 -a 1234567a</code>，但这样会提示不安全：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -p 6379 -h 127.0.0.1 -a 1234567a</span></span><br><span class="line">Warning: Using a password with <span class="string">'-a'</span> option on the <span class="built_in">command</span> line interface may not be safe.</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"key2"</span></span><br><span class="line">2) <span class="string">"key3"</span></span><br><span class="line">3) <span class="string">"key1"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>如果是局域网中的一台主机连接该 redis，报如下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\noinstall\redis\redis-2.4.5-win32-win64\64bit&gt; ./redis-cli -p 6379 -h 192.168.2.57</span><br><span class="line">redis 192.168.2.57:6379&gt; auth 1234567a</span><br><span class="line">(error) DENIED Redis is running <span class="keyword">in</span> protected mode because protected mode is enabled, </span><br><span class="line">no <span class="built_in">bind</span> address was specified, no authentication password is requested to clients.</span><br><span class="line"> In this mode connections are only accepted from the loopback interface. </span><br><span class="line"> If you want to connect from external computers to Redis you may adopt one of the following solutions: </span><br><span class="line"> 1) Just <span class="built_in">disable</span> protected mode sending the <span class="built_in">command</span> <span class="string">'CONFIG SET protected-mode no'</span> from the loopback interface by connecting to Redis from the same host the server is running,</span><br><span class="line">  however MAKE SURE Redis is not publicly accessible from internet <span class="keyword">if</span> you <span class="keyword">do</span> so. </span><br><span class="line"> Use CONFIG REWRITE to make this change permanent. </span><br><span class="line"> 2) Alternatively you can just <span class="built_in">disable</span> the protected mode by editing the Redis configuration file, </span><br><span class="line"> and setting the protected mode option to <span class="string">'no'</span>, and <span class="keyword">then</span> restarting the server. </span><br><span class="line"> 3) If you started the server manually just <span class="keyword">for</span> testing, restart it with the <span class="string">'--protected-mode no'</span> option. </span><br><span class="line"> 4) Setup a <span class="built_in">bind</span> address or an authentication password. </span><br><span class="line"> NOTE: You only need to <span class="keyword">do</span> one of the above things <span class="keyword">in</span> order <span class="keyword">for</span> the server to start accepting connections from the outside.</span><br><span class="line">redis 192.168.2.57:6379&gt;</span><br></pre></td></tr></table></figure>




<h2 id="四、关闭-redis"><a href="#四、关闭-redis" class="headerlink" title="四、关闭 redis"></a>四、关闭 redis</h2><p>使用 Ctrl+C 可以强制关闭 redis，或者使用命令 <code>kill -9 [端口号]</code> 但是容易导致数据丢失，正常关闭应该使用命令，如【./redis-cli -p 6380 shutdown】，redis 服务端已经关闭了：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.05.png" alt="Alt text" title="Optional title"></p>
<p>关闭 redis 要保证数据不丢失。</p>
<p>如果设置了密码，则需要加上密码才能关闭，使用命令 <code>./redis-cli -a [密码] -p [端口号]</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]# .&#x2F;redis-cli -p 6379 shutdown</span><br><span class="line">(error) NOAUTH Authentication required.</span><br><span class="line">[root@localhost bin]# .&#x2F;redis-cli -a 1234567a -p 6379 shutdown</span><br><span class="line">Warning: Using a password with &#39;-a&#39; option on the command line interface may not be safe</span><br></pre></td></tr></table></figure>

<h2 id="五、防火墙配置"><a href="#五、防火墙配置" class="headerlink" title="五、防火墙配置"></a>五、防火墙配置</h2><p>虽然通过 ssh 工具连接可以连接和操作 redis，但是在外面用程序连接会连接超时，这是因为端口不被外面访问，要设置防火墙。</p>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>redis安装</tag>
        <tag>redis启动</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（六）： 群晖系统的使用之端口转发和动态域名</title>
    <url>/p/nas-port-transfer/</url>
    <content><![CDATA[<h2 id="一、端口转发"><a href="#一、端口转发" class="headerlink" title="一、端口转发"></a>一、端口转发</h2><p>路由器配置端口详见：<a href="network.20200505.md">多级路由器设置端口转发</a></p>
<p>单路由器设置类似。</p>
<h2 id="二、动态域名"><a href="#二、动态域名" class="headerlink" title="二、动态域名"></a>二、动态域名</h2><p>本次以以花生壳为例。</p>
<h3 id="2-1-注册免费域名"><a href="#2-1-注册免费域名" class="headerlink" title="2.1 注册免费域名"></a>2.1 注册免费域名</h3><p>登录花生壳网站进入控制台，须实名认证点才可以使用。</p>
<p>点击壳域名菜单，添加域名： </p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_160141.png" alt="20200505160355"></p>
<p>选择免费域名，输入域名查询：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_160325.png" alt="20200505160445"></p>
<p>立即注册：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_160337.png" alt="20200505160506"></p>
<p>注册成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_160345.png" alt="20200505160525"></p>
<p>壳域名列表可看到注册成功的域名：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_160719.png" alt="20200505160749"></p>
<p>使用 ping 命令测试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\kungge&gt;ping kungge.qicp.vip</span><br><span class="line">Ping 请求找不到主机 kungge.qicp.vip。请检查该名称，然后重试。</span><br></pre></td></tr></table></figure>

<p>找不到主机，因为还没有绑定IP。</p>
<h3 id="2-2-设置-DDNS-服务"><a href="#2-2-设置-DDNS-服务" class="headerlink" title="2.2 设置 DDNS 服务"></a>2.2 设置 DDNS 服务</h3><p>使用 nas 系统配置对应关系：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_161203.png" alt="20200505161428"></p>
<p>确定等待一会儿即可刷新状态：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_161334.png" alt="20200505161454"></p>
<p>使用命令重新 ping 一下即可看到解析的ip地址。</p>
<p>通过【域名+端口】即可登录群晖 dsm 系统：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_161725.png" alt="20200505161734"></p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>端口转发</tag>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>动态域名</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（二）： 群晖系统使用之硬盘初始化、新增 Basic 存储空间和共享文件夹</title>
    <url>/p/nas-disk/</url>
    <content><![CDATA[<p>登录进入系统，打开【File Station】:</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_204546.png" alt="20200504204618"></p>
<p>提示没有可用的共享文件夹：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_203647.png" alt="20200504204206"></p>
<p>点击确定来创建：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_203659.png" alt="20200504204235"></p>
<p>发现只有一个存储空间，而这个对应的是一块16G的SSD硬盘，不要选择这个，后面会创建新的存储空间。</p>
<h2 id="一、存储结构简介"><a href="#一、存储结构简介" class="headerlink" title="一、存储结构简介"></a>一、存储结构简介</h2><p>进入【存储空间管理员】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_203721.png" alt="20200504204507"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_203818.png" alt="20200504204859"></p>
<p>分成三层：</p>
<ul>
<li>HDD/SSD：硬盘</li>
<li>存储池</li>
<li>存储空间</li>
</ul>
<p>借用网上的一张图片加深理解：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_002641.png" alt="20200505002705"></p>
<h2 id="二、硬盘初始化"><a href="#二、硬盘初始化" class="headerlink" title="二、硬盘初始化"></a>二、硬盘初始化</h2><p>进入硬盘一栏，有两块硬盘如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_204020.png" alt="20200504204036"></p>
<p>硬盘2是装DSM系统的SSD，硬盘6是新插入的HDD，未初始化表示没有安装DSM系统，如果只有一块安装了DSM系统的硬盘被拆除了，则无法进入DSM系统，引导系统会搜索存在的盘中是否有初始化DSM系统，只要有一个盘存在初始化则DSM系统可正常启动。</p>
<p>新手如果只是家用的话使用BASIC分区（类似windows一个盘一个空间）即可，如何建立空间？</p>
<h3 id="2-1-新增存储池"><a href="#2-1-新增存储池" class="headerlink" title="2.1 新增存储池"></a>2.1 新增存储池</h3><p>进入存储池一栏，新增一个存储池，操作如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_210842.png" alt="20200504213542"></p>
<p>选择 Basic，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_213618.png" alt="20200504213654"></p>
<p>选择硬盘，下一步，勾选硬盘，点击下一步，警告会将新添加硬盘上的数据清除，点击确定：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_214132.png" alt="20200504214017"></p>
<p>执行硬盘检查，若选择是会花费时间比较长（可能好几个小时，长达八九个小时甚至一天），这里选择否：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_222409.png" alt="20200504222505"></p>
<p>下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_223332.png" alt="20200504223347"></p>
<p>点击应用，大概几秒钟完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_223455.png" alt="20200504223518"></p>
<p>下来查看具体信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_224010.png" alt="20200504224029"></p>
<p>回到硬盘一栏，新增的硬盘已经正常了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_224047.png" alt="20200504224124"></p>
<h2 id="三、新增-Basic-存储空间"><a href="#三、新增-Basic-存储空间" class="headerlink" title="三、新增 Basic 存储空间"></a>三、新增 Basic 存储空间</h2><p>进入存储空间一栏，点击新增，由于之前创建的存储池是Basic，这里选择自定义（快速选项相当于一次创建存储池和存储空间，硬盘会直接被初始化），点击下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_230047.png" alt="20200504230131"></p>
<p>选择现有存储池，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_230413.png" alt="20200504230425"></p>
<p>选择上面新增的存储池，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_230512.png" alt="20200504230518"></p>
<p>输入描述，这边默认，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_230622.png" alt="20200504230645"></p>
<p>选择文件系统，Btrfs 可以保存更多的文件夹管理信息，而 ext4 只能保存文件资料，这里选择 Btrfs，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_230735.png" alt="20200504230747"></p>
<p>再次检查设置，应用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_230936.png" alt="20200504230947"></p>
<p>这样存储空间就建立好了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_232042.png" alt="20200504232103"></p>
<p>Basic 类型的存储空间实际是没有受保护的，家用如果没有特别的安全需求的话，选择这种方式很方便，也节省硬盘空间。</p>
<h2 id="四、创建共享文件夹"><a href="#四、创建共享文件夹" class="headerlink" title="四、创建共享文件夹"></a>四、创建共享文件夹</h2><p>回到文章最开始的地方，点击确定，会跳转到共享文件夹管理界面，其实就是点击新增弹出的窗口，输入名称，描述可以不用输入，选择上面新增的存储空间，然后下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_003644.png" alt="20200505003803"></p>
<p>加密操作，本次不加密，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_003902.png" alt="20200505003925"></p>
<p>配置高级设置，本次不设置，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_004000.png" alt="20200505004020"></p>
<p>确认设置，应用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_004036.png" alt="20200505004051"></p>
<p>设置权限，本次不做更改，确定：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_004143.png" alt="20200505004202"></p>
<p>这样共享文件夹就建立好了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_004227.png" alt="20200505004243"></p>
<h2 id="五、访问共享文件夹"><a href="#五、访问共享文件夹" class="headerlink" title="五、访问共享文件夹"></a>五、访问共享文件夹</h2><h3 id="5-1-File-Station-上传文件"><a href="#5-1-File-Station-上传文件" class="headerlink" title="5.1 File Station 上传文件"></a>5.1 File Station 上传文件</h3><p>登录群晖后台系统，进入 File Station 管理程序，点击上传：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_004650.png" alt="20200505004656"></p>
<p>选择上传的文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_004746.png" alt="20200505004755"></p>
<p>上传完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_004827.png" alt="20200505004840"></p>
<h3 id="5-2-File-Station-下载文件"><a href="#5-2-File-Station-下载文件" class="headerlink" title="5.2 File Station 下载文件"></a>5.2 File Station 下载文件</h3><p>进入 File Station 管理程序，选择要下载的文件右键下载：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_004936.png" alt="20200505005019"></p>
<h3 id="5-3-windows-访问共享文件夹"><a href="#5-3-windows-访问共享文件夹" class="headerlink" title="5.3 windows 访问共享文件夹"></a>5.3 windows 访问共享文件夹</h3><p>登录后台的这种方式不是很方便，速度上还会损失，使用 windows 会比较方便，输入系统地址，如本次是 <code>\\Synology</code></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_005430.png" alt="20200505005509"></p>
<p>回车，会弹出输入用户名密码的框，输入，然后确定：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_005407.png" alt="20200505005544"></p>
<p>登录成功会进入共享文件夹：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_005417.png" alt="20200505005620"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_010039.png" alt="20200505010044"></p>
<p>这样就可以操作共享文件夹进行上传和下载了。</p>
<p>也可以直接搜索网上邻居，如 windows 10 的：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_005902.png" alt="20200505005932"></p>
<h3 id="5-4-windows-映射网络硬盘"><a href="#5-4-windows-映射网络硬盘" class="headerlink" title="5.4 windows 映射网络硬盘"></a>5.4 windows 映射网络硬盘</h3><p>如果要方便快速的访问共享文件夹，可以映射一个网络硬盘。</p>
<p>右键共享文件夹，点击【映射网络驱动器(M)…】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_010408.png" alt="20200505010417"></p>
<p>选择一个驱动器号，点击完成即可：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_010525.png" alt="20200505010547"></p>
<p>这样在此电脑下面的网络位置产生了一个盘：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_010647.png" alt="20200505010704"></p>
<p>就可以直接访问了。</p>
<h3 id="5-5-测试访问速度"><a href="#5-5-测试访问速度" class="headerlink" title="5.5 测试访问速度"></a>5.5 测试访问速度</h3><p>windows 访问方式测试下拷贝速度，发现只有11M/s，也太慢了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_011406.png" alt="20200505011518"></p>
<p>而这坎硬盘之前通过硬盘盒连接电脑拷贝速度可以达到100M/s：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-04_185451.png" alt="20200505011747"></p>
<p>群晖DSM系统后台直接下载的速度：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_011906.png" alt="20200505011953"></p>
<p>两者方式速度差不多。</p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（十）： 群晖系统的使用之 Drive</title>
    <url>/p/nas-drive/</url>
    <content><![CDATA[<h2 id="套件安装"><a href="#套件安装" class="headerlink" title="套件安装"></a>套件安装</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_224248.png" alt="20200505231348"></p>
<h2 id="windows-客户端"><a href="#windows-客户端" class="headerlink" title="windows 客户端"></a>windows 客户端</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_231409.png" alt="20200505231443"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_231228.png" alt="20200505231500"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_232235.png" alt="20200505232207"></p>
<h2 id="iPhone-客户端"><a href="#iPhone-客户端" class="headerlink" title="iPhone 客户端"></a>iPhone 客户端</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_231753.png" alt="20200505231802"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_231642.png" alt="20200505231816"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_231653.png" alt="20200505231832"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_231705.png" alt="20200505231842"></p>
<p>手机端上传：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_231939.png" alt="20200505231948"></p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
        <tag>drive</tag>
      </tags>
  </entry>
  <entry>
    <title>一次 .net 操作 ftp 连接数暴增问题解决记录</title>
    <url>/p/dotnet-ftp-connect-problem/</url>
    <content><![CDATA[<p>本次解决的问题是 ftp 操作导致大量的【TIME_WAIT】。</p>
<h2 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h2><p>这个问题是在生产环境出现的，由于测试环境数据量小，程序很快运行完成，ftp 连接能被快速释放，所以一直没出现这个问题。</p>
<p>运维反馈，在 ftp 服务器监控到大量的连接【TIME_WAIT】，经查是一些 .net 程序导致的，如下前面三个都是部署了 .net 程序的服务器：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/ftp.202003181630.png" alt="ftp程序连接情况"></p>
<p>后面的是部署在 docker 容器中的 java 程序，数据还比较正常。</p>
<p>这些程序用的工具类可能是同一个（或者大同小异），所以批量出现了。</p>
<h2 id="二、问题分析与解决"><a href="#二、问题分析与解决" class="headerlink" title="二、问题分析与解决"></a>二、问题分析与解决</h2><p>由于测试环境没有重现这个问题，那么要解决这个问题需要在测试环境重现一下，好对症下药。</p>
<p>程序伪代码逻辑主要如下：</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">int</span> item <span class="keyword">in</span> list)</span><br><span class="line">    &#123;</span><br><span class="line">       ...</span><br><span class="line"></span><br><span class="line">       DownloadFile(...,path);</span><br><span class="line"></span><br><span class="line">       ...</span><br><span class="line"></span><br><span class="line">       UploadPdf(...);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">byte</span>[] <span class="title">DownloadFile</span>(<span class="params">...,<span class="keyword">string</span> path</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ftpUtil = <span class="keyword">new</span> FtpUtil(<span class="string">"10.10.60.16"</span>, <span class="string">"ftp"</span>, <span class="string">"123"</span>);</span><br><span class="line">    <span class="keyword">return</span> ftpUtil.DownloadFile(...,path);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">UploadPdf</span>(<span class="params">...,<span class="keyword">byte</span>[] buffer</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ftpUtil = <span class="keyword">new</span> FtpUtil(<span class="string">"10.10.60.16"</span>, <span class="string">"ftp"</span>, <span class="string">"123"</span>);</span><br><span class="line">    ftpUtil.UploadFile(..., buffer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>由上可看出代码是有缺陷的，首先一点，由于 ftp 对象初始化都是一样的，没必要每处理一次就 new 一个对象，这个先不管。</p>
<p>程序涉及到 ftp 操作是先下载文件，然后上传文件，问题应该时出现在 ftp 工具类中实现下载和上传的两个方法中。</p>
<p>编写了一个单元测试项目用来重现此问题，就是模拟取一定量的订单实现上面的下载和上传逻辑，当只实现下载的时候问题没出现，加了上传逻辑才出现问题，说明上次方法有问题。</p>
<p>基本信息：</p>
<ul>
<li>本机客户端 ip：10.138.30.229</li>
<li>ftp ip ：10.138.60.16</li>
<li>ftp 端口：21</li>
</ul>
<br>

<p>上传过程中发现：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003//ftp.2020-03-18_171734.png" alt="wait现象"></p>
<p>本次设置了100次，运行完成后统计发现产生了100次 连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003//ftp.2020-03-18_172512.png" alt="连接统计"></p>
<p>当程序关闭后一两分钟后终于被释放（公共的 ftp 服务器其它程序也会用）：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003//ftp.2020-03-18_172759.png" alt="连接统计"></p>
<p>问题终于复现了。</p>
<p>这到底啥原因呢？</p>
<p>要了解原因，首先要了解 TIME_WAIT 是什么意思？</p>
<p>TIME_WAIT 表示的是客户端在操作 ftp 后进入的等待状态。</p>
<p>那为什么会出现大量的 TIME_WAIT 呢？</p>
<p>经查代码发现 FtpWebRequest 类有个属性【KeepAlive】，指定在请求完成之后是否关闭到 FTP 服务器的控制连接，源码解释如下：</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 摘要:</span></span><br><span class="line"><span class="comment">//     获取或设置一个 System.Boolean 值，该值指定在请求完成之后是否关闭到 FTP 服务器的控制连接。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 返回结果:</span></span><br><span class="line"><span class="comment">//     如果不应销毁到服务器的连接，则为 true；否则为 false。默认值为 true。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 异常:</span></span><br><span class="line"><span class="comment">//   T:System.InvalidOperationException:</span></span><br><span class="line"><span class="comment">//     对于一个已在进行的请求为此属性指定了一个新值。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> KeepAlive &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br></pre></td></tr></table></figure>

<p>默认是 true，但是在上传方法中设置的是 false，则表示客户端在请求完成之后要关闭 FTP 服务器的控制连接，但是由于服务端是在收到客户端发送关闭连接命令之后才会去主动关闭连接，由于有大批量的请求，所以造成服务器上比较容易出现大量的 TIME_WAIT 状态的连接，特别是并发量较大时更易出现。</p>
<p>如果不设置这个属性，那么默认是 true，整个程序生命周期中只有一个连接，请求完成之后不会关闭，一直会处于 ESTABLISHED 状态，直到程序结束才会被释放，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003//ftp.2020-03-18_174451.png" alt="连接统计"></p>
]]></content>
      <categories>
        <category>DotNet</category>
      </categories>
      <tags>
        <tag>ftp</tag>
        <tag>c#</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（五）： 群晖系统的使用之安装照片管理工具 Photo Station</title>
    <url>/p/nas-photostation/</url>
    <content><![CDATA[<p>照片管理工具：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_145608.png" alt="20200505145620"></p>
<h2 id="一、安装-Photo-Station"><a href="#一、安装-Photo-Station" class="headerlink" title="一、安装 Photo Station"></a>一、安装 Photo Station</h2><p>在套件中心找到 Photo Station，安装套件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_095915.png" alt="20200505095942"></p>
<p>安装 PHP 7.0：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_100029.png" alt="20200505100048"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_100428.png" alt="20200505100436"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_100451.png" alt="20200505100514"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_100541.png" alt="20200505100550"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_100600.png" alt="20200505100606"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_100641.png" alt="20200505100647"></p>
<p>打开 File Station 可以看到创建了一个 photo 的共享文件夹：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_100810.png" alt="20200505100849"></p>
<h2 id="二、Photo-Station-权限设置"><a href="#二、Photo-Station-权限设置" class="headerlink" title="二、Photo Station 权限设置"></a>二、Photo Station 权限设置</h2><p>Photo Station 权限不能通过 File Station 设置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_101039.png" alt="20200505101043"></p>
<p>需要通过 Photo Station，官方的套件的权限都是归官方套件自己来设置的。</p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
        <tag>Photo Station</tag>
        <tag>照片管理</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（八）： 群晖系统的使用之 Video Station</title>
    <url>/p/nas-video-station/</url>
    <content><![CDATA[<h2 id="播放失败"><a href="#播放失败" class="headerlink" title="播放失败"></a>播放失败</h2><p>一直在转：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_214629.png" alt="20200505214648"></p>
<p>应该是转码的问题，网上搜了下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_214744.png" alt="20200505214758"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_214825.png" alt="20200505214833"></p>
<p>一直显示有转码任务：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_215052.png" alt="20200505215112"></p>
<p>后面上传了一批电影，打开【蜘蛛侠：英雄归来HD高清中英双字.mkv】，可以正常观看：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_233744.png" alt="20200505233822"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-06_001016.png" alt="20200506001033"></p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
        <tag>Video Station</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（四）： 群晖系统的使用之安装 PT 下载工具 Transmission</title>
    <url>/p/nas-transmission/</url>
    <content><![CDATA[<p>下载神器，可以做 PT（Private Tracker） 下载。</p>
<h2 id="一、安装-Transmission"><a href="#一、安装-Transmission" class="headerlink" title="一、安装 Transmission"></a>一、安装 Transmission</h2><p>安装之前如果安装了 Download Station ，建议把它卸载掉，两者可能会存在一些冲突，功能是重复的，没必要重复安装。</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_103235.png" alt="20200505103315"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_103329.png" alt="20200505103358"></p>
<p>在套件中心出现了社群选项（第三方来源，很多的软件都来自第三方库），找到 Transmission：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_103644.png" alt="20200505103449"></p>
<p>安装：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_103734.png" alt="20200505103739"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_103758.png" alt="20200505103805"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_103816.png" alt="20200505103823"></p>
<p>Watch directory 是种子存放目录，Incomplete directory 是保存下载完成的种子，这两个本次暂时不填，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_104028.png" alt="20200505104033"></p>
<p>设置默认的用户名，默认没有，本次使用 admin：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_104114.png" alt="20200505104131"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_110052.png" alt="20200505110134"></p>
<p>如果要下载文件到某个目录，需要给这个目录读写权限赋予 sc-download 组，后面再设置，下一步：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_104148.png" alt="20200505104155"></p>
<p>再次检查设置，应用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_104411.png" alt="20200505104435"></p>
<p>启动了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_104508.png" alt="20200505104519"></p>
<p>进入 Transmission，也可以直击输入【nas名称(或ip):9091】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_104635.png" alt="20200505104700"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_104830.png" alt="20200505104834"></p>
<p>登录，进入了主界面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_110210.png" alt="20200505110231"></p>
<p>看起来非常简陋，可以上传文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_110318.png" alt="20200505110342"></p>
<p>可以安装一个看起来比较好看的界面。</p>
<h2 id="二、安装-Transmission-界面"><a href="#二、安装-Transmission-界面" class="headerlink" title="二、安装 Transmission 界面"></a>二、安装 Transmission 界面</h2><p>启动 SSH 功能：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_110643.png" alt="20200505110706"></p>
<p>这样终端 SSH 服务已打开，使用客户端连接，本次是用 SecureCRT， 新建一个会话，然后连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_111041.png" alt="20200505111126"></p>
<p>这样就进入了群晖后台管理的命令行，先使用命令 <code>sudo -i</code> root 身份登录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_112723.png" alt="20200505112733"></p>
<p>使用命令 <code>wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control-cn.sh</code> 下载脚本来安装界面（如果遇到问题，可参考下面的常见问题来解决），然后使用命令 <code>bash install-tr-control-cn.sh</code> 执行脚本：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_123548.png" alt="20200505123629"></p>
<p>安装完成，刷新 Transmission 管理页面就能看到效果了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_124013.png" alt="20200505124047"></p>
<h2 id="三、设置端口转发"><a href="#三、设置端口转发" class="headerlink" title="三、设置端口转发"></a>三、设置端口转发</h2><p>在PT中如果没有设置端口转发会造成无法向大部分用户进行数据上传，这样会导致上传量无法积累，PT网站对对分享是有要求的，只下载不上传会封号。</p>
<p>要端口转发必须要有一个公网IP，如何确定是否有公网IP，可参考文章：<a href="http://www.kungge.com/tool/4061.html" target="_blank" rel="noopener">如何查看自己连接的外网是不是公网IP</a></p>
<p>如果没有的话，可以向运营商索要。</p>
<p>打开设置，进入网络传输一栏：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_124917.png" alt="20200505125026"></p>
<p>51413 就是使用的端口，需要在路由器对这个端口进行转发，每个路由器设置端口转发的方式不一样，但大同小异，本次使用的路由器是 【TP-LINK 云路由器】+【PHICOMM K2】组合方式，对于多级路由器转发可参考文章：<a href="network.20200505.md">多级路由器设置端口转发</a></p>
<p>设置完成后，点击测试端口来验证是否生效。</p>
<h2 id="P、常见问题"><a href="#P、常见问题" class="headerlink" title="P、常见问题"></a>P、常见问题</h2><h3 id="P-1-安装-Transmission-界面时下载脚本失败"><a href="#P-1-安装-Transmission-界面时下载脚本失败" class="headerlink" title="P.1 安装 Transmission 界面时下载脚本失败"></a>P.1 安装 Transmission 界面时下载脚本失败</h3><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_111937.png" alt="20200505111951"></p>
<p><code>https://raw.githubusercontent.com/ronggang/transmission-web-control/master/release/install-tr-control-cn.sh</code> 这个地址在本地如果访问失败则会下载失败，可以使用**上网将这个脚本下载下来，也可以使用本站存储好的脚本，使用命令 :<br><code>wget http://kungge.com/assist/install-tr-control-cn.sh</code>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Synology:~<span class="comment"># wget http://kungge.com/assist/install-tr-control-cn.sh</span></span><br><span class="line">--2020-05-05 11:29:04--  http://kungge.com/assist/install-tr-control-cn.sh</span><br><span class="line">Resolving kungge.com... 119.3.74.185</span><br><span class="line">Connecting to kungge.com|119.3.74.185|:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 301 Moved Permanently</span><br><span class="line">Location: http://www.kungge.com/assist/install-tr-control-cn.sh [following]</span><br><span class="line">--2020-05-05 11:29:04--  http://www.kungge.com/assist/install-tr-control-cn.sh</span><br><span class="line">Resolving www.kungge.com... 124.14.23.225, 124.14.23.229, 124.14.23.226, ...</span><br><span class="line">Connecting to www.kungge.com|124.14.23.225|:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 12662 (12K) [application/x-sh]</span><br><span class="line">Saving to: <span class="string">'install-tr-control-cn.sh'</span></span><br><span class="line"></span><br><span class="line">install-tr-control-cn.sh    100%[==========================================&gt;]  12.37K  --.-KB/s    <span class="keyword">in</span> 0.002s  </span><br><span class="line"></span><br><span class="line">2020-05-05 11:29:04 (5.20 MB/s) - <span class="string">'install-tr-control-cn.sh'</span> saved [12662/12662]</span><br><span class="line"></span><br><span class="line">root@Synology:~<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>下载完成，使用命令 <code>sh install-tr-control-cn.sh</code> 运行该脚本即可。</p>
<h3 id="P-2-Permission-denied"><a href="#P-2-Permission-denied" class="headerlink" title="P.2 Permission denied"></a>P.2 Permission denied</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">install-tr-control-cn.sh: Permission denied</span><br><span class="line"></span><br><span class="line">Cannot write to <span class="string">'install-tr-control-cn.sh'</span> (Permission denied).</span><br></pre></td></tr></table></figure>

<p>需要使用 root 身份登录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_112723.png" alt="20200505112733"></p>
<h3 id="P-3-command-not-found"><a href="#P-3-command-not-found" class="headerlink" title="P.3 command not found"></a>P.3 command not found</h3><p>出现 <code>syntax error near unexpected token</code> 或 <code>$&#39;\r&#39;: command not found</code></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_121244.png" alt="20200505121303"></p>
<p>如果出现 <code>$&#39;\r&#39;: command not found</code> ，是因为脚本编码问题，windows 系统的换行是【回车符+换行符】，即【\r\n】,而 unix 系统下是换行是【\n】，linux 下不识别【\r】为回车符，所以导致每行的配置都多了个【\r】，可以安装 dos2unix 解决。</p>
<p>或者使用命令 vim 新建一个临时的.sh文件，如 <code>vim t.sh</code>，**上网后将内容拷贝到这个文件中，然后在执行脚本 <code>bash t.sh</code>：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_123044.png" alt="20200505123218"></p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
        <tag>pt下载</tag>
        <tag>transmission</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlserver常用sql整理</title>
    <url>/p/sqlserver-common-use/</url>
    <content><![CDATA[<h2 id="xml-使用"><a href="#xml-使用" class="headerlink" title="xml 使用"></a>xml 使用</h2><p>xml 有不少用处，用好了可以很方便的处理数据，下面提供两个运用范例。</p>
<h3 id="将以某字符分隔的字符串转成表"><a href="#将以某字符分隔的字符串转成表" class="headerlink" title="将以某字符分隔的字符串转成表"></a>将以某字符分隔的字符串转成表</h3><p>有一批身份证，但是字符串，由英文逗号分隔，像这样 <code>110101197004162031,110101197105101553,110101197108281510,110101197210024537</code>，现在要实现用这些身份证去某个表里查出身份证对应的信息。</p>
<p>可以在条件中使用 in 查询，但是数据量较大时效率比较低。</p>
<p>可以通过 xml 生成一张临时表，如下 sql 范例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @Ids <span class="keyword">NVARCHAR</span>(<span class="keyword">MAX</span>)= <span class="string">'110101197004162031,110101197105101553,110101197108281510,110101197210024537'</span></span><br><span class="line"><span class="keyword">DECLARE</span> @xml_ids <span class="keyword">XML</span>;</span><br><span class="line"><span class="keyword">SELECT</span>  @xml_ids = <span class="keyword">CONVERT</span>(<span class="keyword">XML</span>, <span class="string">'&lt;root&gt;&lt;bid&gt;'</span> + <span class="keyword">REPLACE</span>(@Ids, <span class="string">','</span>, <span class="string">'&lt;/bid&gt;&lt;bid&gt;'</span>) + <span class="string">'&lt;/bid&gt;&lt;/root&gt;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">IF</span> OBJECT_ID(N<span class="string">'tempdb..#tempId'</span>, N<span class="string">'U'</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="comment">#tempId</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="comment">#tempId</span></span><br><span class="line">    (</span><br><span class="line">      IdentityNo <span class="built_in">VARCHAR</span>(<span class="number">18</span>) PRIMARY <span class="keyword">KEY</span> ,</span><br><span class="line">	  <span class="keyword">Id</span> <span class="built_in">INT</span> <span class="keyword">IDENTITY</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> <span class="comment">#tempId ( IdentityNo )</span></span><br><span class="line">		<span class="keyword">SELECT</span>  Bid.value(<span class="string">'.'</span>, <span class="string">'varchar(18)'</span>)</span><br><span class="line">		<span class="keyword">FROM</span>    @xml_ids.nodes(<span class="string">'/root/bid'</span>) x (bid)</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<table>
<thead>
<tr>
<th>IdentityNo</th>
<th>Id</th>
</tr>
</thead>
<tbody><tr>
<td>110101197004162031</td>
<td>1</td>
</tr>
<tr>
<td>110101197105101553</td>
<td>2</td>
</tr>
<tr>
<td>110101197108281510</td>
<td>3</td>
</tr>
<tr>
<td>110101197210024537</td>
<td>4</td>
</tr>
</tbody></table>
<h3 id="将表字段多行转成一个字符串"><a href="#将表字段多行转成一个字符串" class="headerlink" title="将表字段多行转成一个字符串"></a>将表字段多行转成一个字符串</h3><p>和上面的【将以某字符分隔的字符串转成表】相反，将表字段多行转成以某字符分隔的字符串。</p>
<p>语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">STUFF</span>(</span><br><span class="line">       (</span><br><span class="line">           <span class="keyword">SELECT</span> <span class="string">','</span> + t.字段</span><br><span class="line">           <span class="keyword">FROM</span> 表 t</span><br><span class="line">           <span class="keyword">WHERE</span> 条件</span><br><span class="line">           <span class="keyword">FOR</span> <span class="keyword">XML</span> <span class="keyword">PATH</span>(<span class="string">''</span>)</span><br><span class="line">       ),</span><br><span class="line">       <span class="number">1</span>,</span><br><span class="line">       <span class="number">1</span>,</span><br><span class="line">       <span class="string">''</span></span><br><span class="line">            );</span><br></pre></td></tr></table></figure>

<p>如表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span> t.VbsKey</span><br><span class="line"><span class="keyword">FROM</span> Cooperation.WMXWDictKeyMapping t</span><br><span class="line"><span class="keyword">WHERE</span> t.VbsCode = <span class="string">'BankAccountId'</span>;</span><br></pre></td></tr></table></figure>

<p>转换：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">STUFF</span>(</span><br><span class="line">       (</span><br><span class="line">           <span class="keyword">SELECT</span> TOP <span class="number">10</span> <span class="string">','</span> + t.VbsKey</span><br><span class="line">           <span class="keyword">FROM</span> Cooperation.WMXWDictKeyMapping t</span><br><span class="line">           <span class="keyword">WHERE</span> t.VbsCode = <span class="string">'BankAccountId'</span></span><br><span class="line">           <span class="keyword">FOR</span> <span class="keyword">XML</span> <span class="keyword">PATH</span>(<span class="string">''</span>)</span><br><span class="line">       ),</span><br><span class="line">       <span class="number">1</span>,</span><br><span class="line">       <span class="number">1</span>,</span><br><span class="line">       <span class="string">''</span></span><br><span class="line">            );</span><br></pre></td></tr></table></figure>
<p>取到的就是 <code>103,104,108,14,109,110,111,113,125,126</code></p>
<h2 id="日期常用操作"><a href="#日期常用操作" class="headerlink" title="日期常用操作"></a>日期常用操作</h2><h3 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h3><p>常用的日期格式：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">CHAR</span>(<span class="number">20</span>), <span class="keyword">GETDATE</span>(), <span class="number">20</span>)  <span class="comment">--2019-10-12 10:21:20 </span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">char</span>(<span class="number">24</span>), <span class="keyword">GETDATE</span>(), <span class="number">21</span>) <span class="comment">--2019-10-12 10:21:20.640 </span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">10</span>),<span class="keyword">GetDate</span>(),<span class="number">101</span>)  <span class="comment">--mm/dd/yyyy</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">10</span>),<span class="keyword">GetDate</span>(),<span class="number">102</span>)  <span class="comment">--yyyy.mm.dd</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">10</span>),<span class="keyword">GetDate</span>(),<span class="number">103</span>)  <span class="comment">--dd/mm/yyyy</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">10</span>),<span class="keyword">GetDate</span>(),<span class="number">108</span>)  <span class="comment">--hh:mi:ss(时间)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">10</span>),<span class="keyword">GetDate</span>(),<span class="number">111</span>)  <span class="comment">--yyyy/mm/dd</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">10</span>),<span class="keyword">GetDate</span>(),<span class="number">112</span>)  <span class="comment">--yyyymmdd</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">12</span>),<span class="keyword">GetDate</span>(),<span class="number">114</span>)  <span class="comment">--10:18:31:303</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">10</span>),<span class="keyword">GetDate</span>(),<span class="number">120</span>)  <span class="comment">--yyyy-mm-dd</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">20</span>), <span class="keyword">GETDATE</span>(), <span class="number">20</span>)  <span class="comment">--2019-10-12 10:24:37</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">10</span>), <span class="keyword">GETDATE</span>(), <span class="number">23</span>)  <span class="comment">--2019-10-12</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">25</span>), <span class="keyword">GETDATE</span>(), <span class="number">25</span>)  <span class="comment">--2019-10-12 10:25:48.613</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">10</span>), <span class="keyword">GETDATE</span>(), <span class="number">102</span>) <span class="comment">--2019.10.12</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">10</span>), <span class="keyword">GETDATE</span>(), <span class="number">108</span>) <span class="comment">--10:26:19</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">10</span>), <span class="keyword">GETDATE</span>(), <span class="number">111</span>)  <span class="comment">--2019/10/12</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">8</span>), <span class="keyword">GETDATE</span>(), <span class="number">112</span>)  <span class="comment">--20191012</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">12</span>), <span class="keyword">GETDATE</span>(), <span class="number">114</span>) <span class="comment">--10:27:04:917</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">20</span>), <span class="keyword">GETDATE</span>(), <span class="number">120</span>) <span class="comment">--2019-10-12 10:27:24</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">25</span>), <span class="keyword">GETDATE</span>(), <span class="number">121</span>) <span class="comment">--2019-10-12 10:27:42.680</span></span><br></pre></td></tr></table></figure>

<h3 id="获取日期范围"><a href="#获取日期范围" class="headerlink" title="获取日期范围"></a>获取日期范围</h3><p>在报表统计时，可能会查看任何日期范围的数据，下面的 sql 可通过两个参数的设置来获取任何日期范围：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @beforeDay <span class="built_in">INT</span> = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @beforeDaysBaseToday <span class="built_in">INT</span> = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @baseDate <span class="built_in">DATE</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @startDate DATETIME;</span><br><span class="line"><span class="keyword">SET</span> @baseDate = <span class="keyword">DATEADD</span>(<span class="keyword">DAY</span>, -@beforeDaysBaseToday, <span class="keyword">GETDATE</span>());</span><br><span class="line"><span class="keyword">SELECT</span> @startDate = <span class="keyword">DATEADD</span>(<span class="keyword">DAY</span>, -@beforeDay, @baseDate);</span><br><span class="line"><span class="keyword">DECLARE</span> @endDate DATETIME;</span><br><span class="line">IF @beforeDay &lt;&gt; 0</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SET</span> @endDate = <span class="keyword">DATEADD</span>(<span class="keyword">SECOND</span>,@beforeDay<span class="number">-1</span>,<span class="keyword">DATEADD</span>(<span class="keyword">SECOND</span>, -@beforeDay, <span class="keyword">CONVERT</span>(DATETIME, @baseDate)));</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">ELSE</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> @beforeDaysBaseToday = <span class="number">0</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SET</span> @endDate = <span class="keyword">DATEADD</span>(<span class="keyword">DAY</span>, -@beforeDay, <span class="keyword">GETDATE</span>());</span><br><span class="line">    <span class="keyword">END</span></span><br><span class="line">  <span class="keyword">ELSE</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SET</span> @endDate =<span class="keyword">DATEADD</span>(<span class="keyword">SECOND</span>,<span class="number">-1</span>,<span class="keyword">DATEADD</span>(<span class="keyword">DAY</span>,<span class="number">1</span>,<span class="keyword">CONVERT</span>(DATETIME, @baseDate)));</span><br><span class="line">  <span class="keyword">END</span>    </span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">GETDATE</span>() <span class="keyword">AS</span> 脚本执行时间,</span><br><span class="line">       @baseDate <span class="keyword">AS</span> 基于的日期,</span><br><span class="line">       @startDate <span class="keyword">AS</span> 统计开始时间,</span><br><span class="line">       @endDate <span class="keyword">AS</span> 统计结束时间;</span><br></pre></td></tr></table></figure>

<p>参数说明：</p>
<ul>
<li>beforeDay：多少天前</li>
<li>beforeDaysBaseToday：基于今天的多少天前</li>
</ul>
<br>

<p>startDate 和 endDate 就是最终要使用的开始日期和结束日期。</p>
<p>范例说明：</p>
<p>1.如果 beforeDaysBaseToday=0，beforeDays=1 就是昨天1天的数据</p>
<table>
<thead>
<tr>
<th>脚本执行时间</th>
<th>基于的日期</th>
<th>统计开始时间</th>
<th>统计结束时间</th>
</tr>
</thead>
<tbody><tr>
<td>2020-05-19 15:30:51.423</td>
<td>2020-05-19</td>
<td>2020-05-18 00:00:00.000</td>
<td>2020-05-18 23:59:59.000</td>
</tr>
</tbody></table>
<p>2.如果 beforeDaysBaseToday=1 beforeDays=1 就是前天1天的数据（基于昨天的一天前） </p>
<table>
<thead>
<tr>
<th>脚本执行时间</th>
<th>基于的日期</th>
<th>统计开始时间</th>
<th>统计结束时间</th>
</tr>
</thead>
<tbody><tr>
<td>2020-05-19 15:31:40.813</td>
<td>2020-05-18</td>
<td>2020-05-17 00:00:00.000</td>
<td>2020-05-17 23:59:59.000</td>
</tr>
</tbody></table>
<p>3.如果 beforeDaysBaseToday=0，beforeDays=2 就是前2天的数据</p>
<table>
<thead>
<tr>
<th>脚本执行时间</th>
<th>基于的日期</th>
<th>统计开始时间</th>
<th>统计结束时间</th>
</tr>
</thead>
<tbody><tr>
<td>2020-05-19 15:32:27.393</td>
<td>2020-05-19</td>
<td>2020-05-17 00:00:00.000</td>
<td>2020-05-18 23:59:59.000</td>
</tr>
</tbody></table>
<p>4.如果 beforeDaysBaseToday=0，beforeDays=0 就是当天凌晨到当前时间的数据，以此类推</p>
<table>
<thead>
<tr>
<th>脚本执行时间</th>
<th>基于的日期</th>
<th>统计开始时间</th>
<th>统计结束时间</th>
</tr>
</thead>
<tbody><tr>
<td>2020-05-19 15:32:52.020</td>
<td>2020-05-19</td>
<td>2020-05-19 00:00:00.000</td>
<td>2020-05-19 15:32:52.020</td>
</tr>
</tbody></table>
<h2 id="获取表结构信息"><a href="#获取表结构信息" class="headerlink" title="获取表结构信息"></a>获取表结构信息</h2><p>获取表字段信息：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> col.name <span class="keyword">AS</span> 列名,</span><br><span class="line">    typ.name <span class="keyword">AS</span> 数据类型,</span><br><span class="line">    col.max_length <span class="keyword">AS</span> 占用字节数,</span><br><span class="line">    col.precision <span class="keyword">AS</span> 数字长度,</span><br><span class="line">    col.scale <span class="keyword">AS</span> 小数位数,</span><br><span class="line">    col.is_nullable <span class="keyword">AS</span> 是否允许非空,</span><br><span class="line">    col.is_identity <span class="keyword">AS</span> 是否自增,</span><br><span class="line">    <span class="keyword">CASE</span></span><br><span class="line">        <span class="keyword">WHEN</span> <span class="keyword">EXISTS</span></span><br><span class="line">            (</span><br><span class="line">                <span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line">                <span class="keyword">FROM</span> sys.indexes idx</span><br><span class="line">                    <span class="keyword">JOIN</span> sys.index_columns idxCol</span><br><span class="line">                        <span class="keyword">ON</span> (idx.object_id = idxCol.object_id)</span><br><span class="line">                <span class="keyword">WHERE</span> idx.object_id = col.object_id</span><br><span class="line">                        <span class="keyword">AND</span> idxCol.index_column_id = col.column_id</span><br><span class="line">                        <span class="keyword">AND</span> idx.is_primary_key = <span class="number">1</span></span><br><span class="line">            ) <span class="keyword">THEN</span></span><br><span class="line">            <span class="number">1</span></span><br><span class="line">        <span class="keyword">ELSE</span></span><br><span class="line">            <span class="number">0</span></span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">AS</span> 是否是主键,</span><br><span class="line">    <span class="keyword">ISNULL</span>(g.[<span class="keyword">value</span>], <span class="string">'-'</span>) <span class="keyword">AS</span> 说明</span><br><span class="line"><span class="keyword">FROM</span> sys.columns <span class="keyword">col</span></span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sys.types typ</span><br><span class="line">    <span class="keyword">ON</span> (col.system_type_id = typ.system_type_id)</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sys.extended_properties g</span><br><span class="line">    <span class="keyword">ON</span> (</span><br><span class="line">            col.object_id = g.major_id</span><br><span class="line">            <span class="keyword">AND</span> g.minor_id = col.column_id</span><br><span class="line">        )</span><br><span class="line"><span class="keyword">WHERE</span> col.object_id =</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> object_id <span class="keyword">FROM</span> sys.tables <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">'FoticFileUpload'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h2 id="执行sql字符串"><a href="#执行sql字符串" class="headerlink" title="执行sql字符串"></a>执行sql字符串</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">Sql</span> <span class="keyword">NVARCHAR</span>(<span class="keyword">MAX</span>)=<span class="string">'sqlXX'</span>;EXEC sp_executesql  @Sql;</span><br></pre></td></tr></table></figure>

<p><em>注：sp_executesql，过程需要类型为 ‘ntext/nchar/nvarchar’ 的参数 ‘@statement’。</em></p>
<p>如果 sql 中有单引号，则需要使用转义符，sqlserver 中使用英文单引号可实现转义。</p>
<p>范例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">Sql</span> <span class="keyword">NVARCHAR</span>(<span class="keyword">MAX</span>)=<span class="string">'SELECT * FROM dbo.GoodMan WHERE UserName=''kungge'' '</span>;EXEC sp_executesql @Sql;</span><br></pre></td></tr></table></figure>

<h2 id="改变表结构"><a href="#改变表结构" class="headerlink" title="改变表结构"></a>改变表结构</h2><h3 id="表添加字段"><a href="#表添加字段" class="headerlink" title="表添加字段"></a>表添加字段</h3><p>语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> [数据库名]</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> 字段名  类型  默认值  是否为空;</span><br><span class="line">EXEC sp_addextendedproperty N'MS_Description', N'字段说明', N'SCHEMA', N'dbo',N'TABLE', N'表名', N'COLUMN', N'字段名';</span><br></pre></td></tr></table></figure>

<p>实例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span>  customer.Blacklist <span class="keyword">ADD</span> ImportOperator <span class="built_in">INT</span> <span class="keyword">DEFAULT</span>((<span class="number">0</span>));</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span>  customer.Blacklist <span class="keyword">ADD</span> ImportTime DATETIME <span class="keyword">DEFAULT</span>((<span class="keyword">GETDATE</span>()));</span><br><span class="line">EXEC sp_addextendedproperty N'MS_Description', N'导入操作者', N'SCHEMA', N'customer',N'TABLE', N'Blacklist', N'COLUMN', N'ImportOperator';</span><br><span class="line">EXEC sp_addextendedproperty N'MS_Description', N'导入时间', N'SCHEMA', N'customer',N'TABLE', N'Blacklist', N'COLUMN', N'ImportTime';</span><br></pre></td></tr></table></figure>

<h3 id="修改字段属性"><a href="#修改字段属性" class="headerlink" title="修改字段属性"></a>修改字段属性</h3><p>语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXEC sp_updateextendedproperty N'MS_Description', N'字段说明', N'SCHEMA', N'架构名',N'TABLE', N'表名', N'COLUMN', N'列名';</span><br></pre></td></tr></table></figure>

<p>范例：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">EXEC sp_updateextendedproperty N'MS_Description', N'发送标志:外贸(0 未发,1 已发),晋商(0 未发,1 已发,&gt;1 已发&amp;文件Id)', N'SCHEMA', N'lending',N'TABLE', N'Lending', N'COLUMN', N'IsSend';</span><br></pre></td></tr></table></figure>

<h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><h3 id="查看数据库版本"><a href="#查看数据库版本" class="headerlink" title="查看数据库版本"></a>查看数据库版本</h3><p><code>SELECT @@version;</code> </p>
<p>如 <code>Microsoft SQL Server 2012 (SP1) - 11.0.3128.0 (X64)   Dec 28 2012 20:23:12   Copyright (c) Microsoft Corporation  Enterprise Edition (64-bit) on Windows NT 6.1 &lt;X64&gt; (Build 7601: Service Pack 1) (Hypervisor)</code></p>
<p><code>Microsoft SQL Server 2016 (RTM) - 13.0.1601.5 (X64)   Apr 29 2016 23:23:58   Copyright (c) Microsoft Corporation  Enterprise Edition (64-bit) on Windows Server 2016 Datacenter 6.3 &lt;X64&gt; (Build 14393: ) (Hypervisor)</code></p>
]]></content>
      <categories>
        <category>数据库</category>
        <category>SQL Server</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
        <tag>sql</tag>
        <tag>常用sql</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlserver 中使用 sql 解析 json 格式数据的实现方案</title>
    <url>/p/sqlserver-json/</url>
    <content><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><p>公司老系统设计接口请求结果放到了一个表里的一个字段中，是一个 json 格式的数据，需要解析里面的某个字段的值，如：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"Content"</span>: &#123;</span><br><span class="line">    <span class="attr">"prePactNo"</span>: <span class="string">"20191217003209329291"</span>,</span><br><span class="line">    <span class="attr">"dealSts"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="attr">"dealDesc"</span>: <span class="string">"自动审批通过"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"IsSuccess"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"Message"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"RespCode"</span>: <span class="string">"0000"</span>,</span><br><span class="line">  <span class="attr">"RespDesc"</span>: <span class="string">"通信成功"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>需要解析出 dealDesc 的值。</p>
<h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><p>可以随便用一种程序语言来写一个程序来解析，比如 java、c# 等，但是如果只能用 sql 实现呢？</p>
<p>ResponseJson 存储的就是上面说的 json 格式的数据，实现 SQL 如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span> w.ResponseJson,</span><br><span class="line">       <span class="keyword">SUBSTRING</span>(w.ResponseJson, p1.number + <span class="number">13</span>, p2.number-p1.number<span class="number">-13</span>) <span class="keyword">AS</span> Resul,p1.number,p2.number</span><br><span class="line"><span class="keyword">FROM</span> business.WMXWRequestLog w <span class="keyword">WITH</span> (NOLOCK)</span><br><span class="line">    <span class="keyword">JOIN</span></span><br><span class="line">    (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">number</span></span><br><span class="line">        <span class="keyword">FROM</span> master.dbo.spt_values</span><br><span class="line">        <span class="keyword">WHERE</span> <span class="keyword">type</span> = <span class="string">'P'</span></span><br><span class="line">              <span class="keyword">AND</span> <span class="built_in">number</span> &gt; <span class="number">0</span></span><br><span class="line">    ) p1</span><br><span class="line">        <span class="keyword">ON</span> <span class="keyword">CHARINDEX</span>(<span class="string">',"dealDesc":"'</span>, w.ResponseJson) = p1.number</span><br><span class="line">		 <span class="keyword">JOIN</span></span><br><span class="line">    (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">number</span></span><br><span class="line">        <span class="keyword">FROM</span> master.dbo.spt_values</span><br><span class="line">        <span class="keyword">WHERE</span> <span class="keyword">type</span> = <span class="string">'P'</span></span><br><span class="line">              <span class="keyword">AND</span> <span class="built_in">number</span> &gt; <span class="number">0</span></span><br><span class="line">    ) p2</span><br><span class="line">        <span class="keyword">ON</span> <span class="keyword">CHARINDEX</span>(<span class="string">'"&#125;,"IsSuccess":'</span>, w.ResponseJson) = p2.number</span><br><span class="line"><span class="keyword">WHERE</span>  InterfaceName = <span class="string">'SinglePreAduit'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> w.Id <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>

<p>得到的【Resul】就是需要的值。有了这个思路，还可以解析更多的值。</p>
<h2 id="实现原理分析"><a href="#实现原理分析" class="headerlink" title="实现原理分析"></a>实现原理分析</h2><p>上面的 sql 用到了系统里的一个表【master.dbo.spt_values】，这是一个数字辅助表，使用了其 type 和 number 两个字段，取出的是 【type = ‘P’ AND number &gt; 0】的数据，在数据库中执行下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_222913.png" alt="20200511222923"></p>
<p>其 number 就是从1到2047连续的数字，因为一个 josn 格式是固定的，结合这个特性，再利用这个数字(即字符串的位置)我们就能建立表连接，然后取相对位置，就能取出 json 格式里的任何字段的数据了，但是缺陷是只能取到2047。</p>
<p>这个表就是一个辅助表，不光有我们用到了数字（type=’P’），还有 bool（type=’B’），有兴趣的可以去研究研究。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
        <tag>sqlserver数据格式</tag>
      </tags>
  </entry>
  <entry>
    <title>一次 sqlserver 单表查询过慢处理记录</title>
    <url>/p/sqlserver-query-nolock/</url>
    <content><![CDATA[<h2 id="问题探索"><a href="#问题探索" class="headerlink" title="问题探索"></a>问题探索</h2><p>执行一个单表的查询一直查不出来：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Cooperation.QDXMapping</span><br><span class="line"><span class="keyword">WHERE</span> CoKey = <span class="string">'L/DDQ'</span></span><br><span class="line">      <span class="keyword">AND</span> CoCode = <span class="string">'DOCUMENTKIND/UPLOAD'</span></span><br><span class="line">      <span class="keyword">AND</span> <span class="keyword">Status</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<p>一直【正在执行查询…】，1条记录都没出来。</p>
<p>但是同样一张表执行如下 sql 却可以全部查出来：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">100</span></span><br><span class="line">       *</span><br><span class="line"><span class="keyword">FROM</span> Cooperation.QDXMapping <span class="keyword">WITH</span> (NOLOCK)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">Id</span> <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>

<p>但是执行：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Cooperation.QDXMapping</span><br></pre></td></tr></table></figure>
<p>有80条记录出来，一直【正在执行查询…】，已经13分钟了一直出不来。</p>
<p>同一个库其它表查询正常。</p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>经测试发现在表后面加上 WITH (NOLOCK) 就都正常了，说明表被事务给锁了，查看被锁表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> OBJECT_NAME(resource_associated_entity_id) tableName,*</span><br><span class="line"><span class="keyword">FROM</span> sys.dm_tran_locks</span><br><span class="line"><span class="keyword">WHERE</span> resource_type = <span class="string">'OBJECT'</span>;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>tableName</th>
<th>resource_type</th>
<th>resource_subtype</th>
<th>resource_database_id</th>
<th>resource_description</th>
<th>resource_associated_entity_id</th>
<th>resource_lock_partition</th>
<th>request_mode</th>
<th>request_type</th>
<th>request_status</th>
<th>request_reference_count</th>
<th>request_lifetime</th>
<th>request_session_id</th>
<th>request_exec_context_id</th>
<th>request_request_id</th>
<th>request_owner_type</th>
<th>request_owner_id</th>
<th>request_owner_guid</th>
<th>request_owner_lockspace_id</th>
<th>lock_owner_address</th>
</tr>
</thead>
<tbody><tr>
<td>QDXMapping</td>
<td>OBJECT</td>
<td></td>
<td>8</td>
<td></td>
<td></td>
<td>63019463</td>
<td>0</td>
<td>IS</td>
<td>LOCK</td>
<td>GRANT</td>
<td>1</td>
<td>0</td>
<td>55</td>
<td>0</td>
<td>0</td>
<td>TRANSACTION</td>
<td>118180360</td>
<td>00000000-0000-0000-0000-000000000000</td>
<td>0x00000004FF3E2130:1:1</td>
</tr>
<tr>
<td>QDXMapping</td>
<td>OBJECT</td>
<td></td>
<td>8</td>
<td></td>
<td></td>
<td>63019463</td>
<td>0</td>
<td>IS</td>
<td>LOCK</td>
<td>GRANT</td>
<td>1</td>
<td>0</td>
<td>62</td>
<td>0</td>
<td>0</td>
<td>TRANSACTION</td>
<td>118186413</td>
<td>00000000-0000-0000-0000-000000000000</td>
<td>0x00000004F3DCE250:1:1</td>
</tr>
<tr>
<td>QDXMapping</td>
<td>OBJECT</td>
<td></td>
<td>8</td>
<td></td>
<td></td>
<td>63019463</td>
<td>0</td>
<td>IX</td>
<td>LOCK</td>
<td>GRANT</td>
<td>1</td>
<td>33554432</td>
<td>53</td>
<td>0</td>
<td>0</td>
<td>TRANSACTION</td>
<td>117740840</td>
<td>00000000-0000-0000-0000-000000000000</td>
<td>0x00000004FF3E71C0:1:1</td>
</tr>
</tbody></table>
<p>解锁：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @request_session_id <span class="built_in">INT</span> = <span class="number">53</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">sql</span> <span class="built_in">VARCHAR</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="string">'KILL '</span> + <span class="keyword">CAST</span>(@request_session_id <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>);</span><br><span class="line">EXEC (@sql);</span><br></pre></td></tr></table></figure>

<p>就是上面 sql 查出的活动进程。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
        <tag>sql查询</tag>
      </tags>
  </entry>
  <entry>
    <title>代码质量管理工具 Sonar 安装与基本使用</title>
    <url>/p/sonar-install-use/</url>
    <content><![CDATA[<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>需要安装 jdk。</p>
<p>sonarqube，下载地址：<a href="http://www.sonarqube.org/downloads/" target="_blank" rel="noopener">http://www.sonarqube.org/downloads/</a> ,【Show all versions】选择需要下载的版本，本次下载的版本是 sonarqube-6.2。</p>
<p>sonar-scanner 下载地址：<a href="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/" target="_blank" rel="noopener">https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/</a></p>
<p>选择需要下载的版本，本次下载的版本是 sonar-scanner-2.8。</p>
<h2 id="二、sonarqube-安装与配置"><a href="#二、sonarqube-安装与配置" class="headerlink" title="二、sonarqube 安装与配置"></a>二、sonarqube 安装与配置</h2><p>windows 系统运行 bin\windows-x86-64\StartSonar.bat：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar/StartSonar.bat_click.png" alt="StartSonar.bat_click"></p>
<p>浏览中打开【<a href="http://localhost:9000/】，出现如下界面表示运行成功：" target="_blank" rel="noopener">http://localhost:9000/】，出现如下界面表示运行成功：</a></p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar/sonar_http_9000.png" alt="sonar_http_9000" title="sonar_http_9000"></p>
<p>在 sqlserver 中新建一个 sonar 数据库，并进行如下设置：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar/sonar_db.png" alt="sonar_db"></p>
<p>数据库配置，修改配置文件【sonarqube-6.2\conf\sonar.properties】，主要修改内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sonar.jdbc.username=sa</span><br><span class="line">sonar.jdbc.password=123456@</span><br><span class="line"></span><br><span class="line">sonar.jdbc.url=jdbc:sqlserver://10.139.60.153:1433;databaseName=sonar</span><br><span class="line"></span><br><span class="line">sonar.jdbc.maxActive=60</span><br><span class="line">sonar.jdbc.maxIdle=5</span><br><span class="line">sonar.jdbc.maxWait=5000</span><br><span class="line">sonar.jdbc.minEvictableIdleTimeMillis=600000</span><br><span class="line">sonar.jdbc.timeBetweenEvictionRunsMillis=30000</span><br></pre></td></tr></table></figure>

<p>下载 Microsoft SQL JDBC 驱动，下载地址：<a href="https://www.microsoft.com/en-US/download/details.aspx?id=11774" target="_blank" rel="noopener">https://www.microsoft.com/en-US/download/details.aspx?id=11774</a></p>
<p>解压下载的文件，将文件【sqljdbc_auth.dll】放到目录【sonarqube-6.2\lib\jdbc\mssql】中。</p>
<p>重启 sonarqube 服务，重新访问 <a href="http://localhost:9000/" target="_blank" rel="noopener">http://localhost:9000/</a> 进行初始化数据库，完成后：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122702.png" alt="sonar.122702"></p>
<p>注：重启 sonarqube 服务可能会失败，详细查看失败解决（Process.P2）。</p>
<h2 id="三、安装插件"><a href="#三、安装插件" class="headerlink" title="三、安装插件"></a>三、安装插件</h2><p>使用默认用户（admin/admin）登录，进入插件安装页面(<a href="http://localhost:9000/updatecenter/available)，选择需要安装的插件，如本次安装【Chinese" target="_blank" rel="noopener">http://localhost:9000/updatecenter/available)，选择需要安装的插件，如本次安装【Chinese</a> Pack】和【c#】。</p>
<p>界面管理中没有适合版本的语言包，特地在网上单独下载下来，下载地址：<a href="https://github.com/SonarQubeCommunity/sonar-l10n-zh/releases?after=sonar-l10n-zh-plugin-1.22" target="_blank" rel="noopener">https://github.com/SonarQubeCommunity/sonar-l10n-zh/releases?after=sonar-l10n-zh-plugin-1.22</a></p>
<p>将下载的文件放到目录【sonarqube-6.2\extensions\plugins】中，重启服务就可看到中文了。</p>
<h2 id="四、应用"><a href="#四、应用" class="headerlink" title="四、应用"></a>四、应用</h2><p>1.修改【sonar-scanner-2.8\conf\sonar-scanner.properties】配置文件</p>
<p>修改如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sonar.host.url&#x3D;http:&#x2F;&#x2F;localhost:9000</span><br><span class="line">sonar.sourceEncoding&#x3D;UTF-8</span><br><span class="line">sonar.jdbc.url&#x3D;jdbc:jtds:sqlserver:&#x2F;&#x2F;10.139.60.153:1433&#x2F;sonar;SelectMethod&#x3D;Cursor</span><br></pre></td></tr></table></figure>

<p>2.修改sonar-scanner的环境变量</p>
<p>在 Path 中新增 sonar-scanner 安装的 bin 目录：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122703.png" alt="sonar.122703"></p>
<p>检查是否配置成功，输入命令【sonar-runner -version】出现如下表示配置成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\wankun&gt;sonar-runner -version</span><br><span class="line">WARN: sonar-runner.bat script is deprecated. Please use sonar-scanner.bat instead.</span><br><span class="line">E:\job\tool\sonar\sonar-scanner-2.8\bin\..</span><br><span class="line">ERROR: Unrecognized option: -version</span><br><span class="line">INFO:</span><br><span class="line">INFO: usage: sonar-scanner [options]</span><br><span class="line">INFO:</span><br><span class="line">INFO: Options:</span><br><span class="line">INFO:  -D,--define &lt;arg&gt;     Define property</span><br><span class="line">INFO:  -h,--<span class="built_in">help</span>             Display <span class="built_in">help</span> information</span><br><span class="line">INFO:  -v,--version          Display version information</span><br><span class="line">INFO:  -X,--debug            Produce execution debug output</span><br><span class="line">INFO:  -i,--interactive      Run interactively</span><br></pre></td></tr></table></figure>

<p>3.分析项目</p>
<blockquote>
<ol>
<li>在需要代码分析的项目根目录新建【sonar-project.properties】文件，内容如下：</li>
</ol>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Required metadata</span></span><br><span class="line">sonar.projectKey=LoanInfoProcess</span><br><span class="line">sonar.projectName=LoanInfoProcess</span><br><span class="line">sonar.projectVersion=1.0</span><br><span class="line"><span class="comment"># Comma-separated paths to directories with sources (required)</span></span><br><span class="line">sonar.sources=./</span><br><span class="line"><span class="comment"># sonar.binaries=.</span></span><br><span class="line"><span class="comment"># Language</span></span><br><span class="line">sonar.language=cs</span><br><span class="line"><span class="comment"># Encoding of the source files</span></span><br><span class="line">sonar.sourceEncoding=UTF-8</span><br></pre></td></tr></table></figure>
<blockquote>
<ol start="2">
<li>打开命令窗口，进入项目所在根目录，执行命令【sonar-runner】</li>
</ol>
</blockquote>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122704.png" alt="sonar.122704"></p>
<p>如果报错了，详见【Process.P5】</p>
<p>使用已经搭建好的 sonarqube 平台，地址【<a href="http://10.138.60.82:9000】，修改文件【sonar-scanner.properties】的【sonar.host.url】为【http://10.138.60.82:9000】，执行命令【sonar-runner】，成功如下：">http://10.138.60.82:9000】，修改文件【sonar-scanner.properties】的【sonar.host.url】为【http://10.138.60.82:9000】，执行命令【sonar-runner】，成功如下：</a></p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122705.png" alt="sonar.122705"></p>
<p>会在项目的【.sonar】中生成分析报告，如本次是【LoanInfoProcess.pdf】，sonarqube 平台也会有分析报告，在【Project】中：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122706.png" alt="sonar.122706"></p>
<p>点击可看到条目统计信息：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122707.png" alt="sonar.122707"></p>
<h2 id="P、常见问题"><a href="#P、常见问题" class="headerlink" title="P、常见问题"></a>P、常见问题</h2><h2 id="Process-P1"><a href="#Process-P1" class="headerlink" title="Process.P1"></a>Process.P1</h2><p>使用高版本 sonarqube-8.0 打开报错，需要使用 Java 11+：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar/sonarqube-8.0_error_java11.png" alt="sonarqube-8.0_error_java11"></p>
<h2 id="Process-P2"><a href="#Process-P2" class="headerlink" title="Process.P2"></a>Process.P2</h2><p>修改配置文件【sonarqube-6.2\conf\sonar.properties】的数据库配置后，保存，将 cmd 窗口关闭之后，再次启动【StartSonar.bat】 报错：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122701.png" alt="sonar.122701"></p>
<p>这种情况需要先关闭 java（为什么是关闭java,详见 Process.P4），在任务管理器的杀掉进程【java.exe】,再重启即可。</p>
<h2 id="Process-P4"><a href="#Process-P4" class="headerlink" title="Process.P4"></a>Process.P4</h2><p>查出占用文件的进程。</p>
<h2 id="Process-P5"><a href="#Process-P5" class="headerlink" title="Process.P5"></a>Process.P5</h2><p>执行命令【sonar-runner】报错如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">INFO: Importing analysis results from D:\svn\Loan\trunk\VBS_Console\LoanInfoProcess\.sonar\output-cs</span><br><span class="line">INFO: ------------------------------------------------------------------------</span><br><span class="line">INFO: EXECUTION FAILURE</span><br><span class="line">INFO: ------------------------------------------------------------------------</span><br><span class="line">INFO: Total time: 22.720s</span><br><span class="line">INFO: Final Memory: 47M/306M</span><br><span class="line">INFO: ------------------------------------------------------------------------</span><br><span class="line">ERROR: Error during SonarQube Scanner execution</span><br><span class="line">java.lang.IllegalArgumentException: Start pointer [line=1, lineOffset=0] should be before end pointer [line=1, lineOffset=0]</span><br><span class="line">        at org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:145)</span><br><span class="line">        at org.sonar.api.batch.fs.internal.DefaultInputFile.newRangeValidPointers(DefaultInputFile.java:254)</span><br><span class="line">        at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:238)</span><br><span class="line">        at org.sonarsource.dotnet.shared.plugins.SensorContextUtils.toTextRange(SensorContextUtils.java:41)</span><br><span class="line">        at org.sonarsource.dotnet.shared.plugins.protobuf.IssuesImporter.consumeFor(IssuesImporter.java:52)</span><br><span class="line">        at org.sonarsource.dotnet.shared.plugins.protobuf.IssuesImporter.consumeFor(IssuesImporter.java:33)</span><br><span class="line">        at org.sonarsource.dotnet.shared.plugins.protobuf.ProtobufImporter.consume(ProtobufImporter.java:49)</span><br><span class="line">        at org.sonarsource.dotnet.shared.plugins.protobuf.RawProtobufImporter.accept(RawProtobufImporter.java:43)</span><br><span class="line">        at org.sonarsource.dotnet.shared.plugins.AbstractSensor.parseProtobuf(AbstractSensor.java:95)</span><br><span class="line">        at org.sonarsource.dotnet.shared.plugins.AbstractSensor.importResults(AbstractSensor.java:85)</span><br><span class="line">        at org.sonar.plugins.csharp.CSharpSensor.executeInternal(CSharpSensor.java:111)</span><br><span class="line">        at org.sonar.plugins.csharp.CSharpSensor.execute(CSharpSensor.java:82)</span><br><span class="line">        at org.sonar.scanner.sensor.SensorWrapper.analyse(SensorWrapper.java:53)</span><br><span class="line">        at org.sonar.scanner.phases.SensorsExecutor.executeSensor(SensorsExecutor.java:57)</span><br><span class="line">        at org.sonar.scanner.phases.SensorsExecutor.execute(SensorsExecutor.java:49)</span><br><span class="line">        at org.sonar.scanner.phases.AbstractPhaseExecutor.execute(AbstractPhaseExecutor.java:78)</span><br><span class="line">        at org.sonar.scanner.scan.ModuleScanContainer.doAfterStart(ModuleScanContainer.java:182)</span><br><span class="line">        at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:142)</span><br><span class="line">        at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127)</span><br><span class="line">        at org.sonar.scanner.scan.ProjectScanContainer.scan(ProjectScanContainer.java:247)</span><br><span class="line">        at org.sonar.scanner.scan.ProjectScanContainer.scanRecursively(ProjectScanContainer.java:242)</span><br><span class="line">        at org.sonar.scanner.scan.ProjectScanContainer.doAfterStart(ProjectScanContainer.java:232)</span><br><span class="line">        at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:142)</span><br><span class="line">        at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127)</span><br><span class="line">        at org.sonar.scanner.task.ScanTask.execute(ScanTask.java:47)</span><br><span class="line">        at org.sonar.scanner.task.TaskContainer.doAfterStart(TaskContainer.java:86)</span><br><span class="line">        at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:142)</span><br><span class="line">        at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127)</span><br><span class="line">        at org.sonar.scanner.bootstrap.GlobalContainer.executeTask(GlobalContainer.java:115)</span><br><span class="line">        at org.sonar.batch.bootstrapper.Batch.executeTask(Batch.java:116)</span><br><span class="line">        at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:62)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">        at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)</span><br><span class="line">        at com.sun.proxy.<span class="variable">$Proxy0</span>.execute(Unknown Source)</span><br><span class="line">        at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:233)</span><br><span class="line">        at org.sonarsource.scanner.api.EmbeddedScanner.runAnalysis(EmbeddedScanner.java:151)</span><br><span class="line">        at org.sonarsource.scanner.cli.Main.runAnalysis(Main.java:110)</span><br><span class="line">        at org.sonarsource.scanner.cli.Main.execute(Main.java:74)</span><br><span class="line">        at org.sonarsource.scanner.cli.Main.main(Main.java:61)</span><br><span class="line">ERROR:</span><br><span class="line">ERROR: Re-run SonarQube Scanner using the -X switch to <span class="built_in">enable</span> full debug logging.</span><br></pre></td></tr></table></figure>

<p>这种情况暂未解决。</p>
<h2 id="Process-P6"><a href="#Process-P6" class="headerlink" title="Process.P6"></a>Process.P6</h2><p>启动Sonar【StartSonar.bat】报错：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122709.png" alt="sonar.122709"></p>
<p>经查发现任务管理器中java.exe不存在，打开【D:\install\Java\jdk1.8.0_181\bin\java.exe】，java.exe已经在任务管理器中出现了，但是还是报上面的错误。</p>
<p>查看 Path：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sonar.122708.png" alt="sonar.122708"></p>
<p>打了双引号？<br>发现 PATH 中【%JAVA_HOME%\bin;】有分号，去掉分号。<br>继续执行发现一闪而过，隐约看到有cache。</p>
<p>重新解压压缩包使用正常了。</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>代码质量管理</category>
      </categories>
      <tags>
        <tag>代码质量管理工具</tag>
        <tag>sonar</tag>
      </tags>
  </entry>
  <entry>
    <title>apollo 创建 Namespace 失败：AppNamespace XX already exists in appId:XX! 解决记录</title>
    <url>/p/apollo-namespace-create/</url>
    <content><![CDATA[<h1 id="apollo-创建-Namespace-失败：AppNamespace-XX-already-exists-in-appId-XX-解决记录"><a href="#apollo-创建-Namespace-失败：AppNamespace-XX-already-exists-in-appId-XX-解决记录" class="headerlink" title="apollo 创建 Namespace 失败：AppNamespace XX already exists in appId:XX! 解决记录"></a>apollo 创建 Namespace 失败：AppNamespace XX already exists in appId:XX! 解决记录</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在 apollo 管理界面中创建 namespace 失败：  </p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/apollo.2020-03-13_101341.png" alt="apollo 报错"></p>
<p>原因：之前在其它项目上创建过这个 namespace，即使在管理页面上删除了，应该是逻辑删除。</p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>要彻底删除应该去 apollo 配置的数据库中删除。</p>
<p>使用的数据库【apolloconfigdb】表【appnamespace】，找到要需要删除的 namespace（如本次是【TEST1.LendingOverConsumer】），然后删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> appnamespace <span class="keyword">where</span> <span class="string">`Name`</span>=<span class="string">'TEST1.LendingOverConsumer'</span>;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>工具</category>
        <category>配置中心</category>
      </categories>
      <tags>
        <tag>apollo</tag>
        <tag>配置中心</tag>
        <tag>分布式配置中心</tag>
      </tags>
  </entry>
  <entry>
    <title>ftp 连接读取目录列表失败，报错：【服务器发回了不可路由的地址。使用服务器地址代替。】解决记录</title>
    <url>/p/ftp-dir-error/</url>
    <content><![CDATA[<p>前使用 ftp 也出现过读取目录失败的问题，详见：<a href="http://www.kungge.com/kwan/3687.html" target="_blank" rel="noopener">Filezilla Client 连接服务端成功，但是读取目录失败：425 Can’t open data connection for transfer of “/“</a></p>
<p>但是这次和上次不一样。</p>
<h2 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h2><p>客户端【FileZilla Client】连接【FileZilla Server】报错信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">状态:	正在连接 119.x.x.185:21...</span><br><span class="line">状态:	连接建立，等待欢迎消息...</span><br><span class="line">状态:	不安全的服务器，不支持 FTP over TLS。</span><br><span class="line">状态:	已登录</span><br><span class="line">状态:	读取目录列表...</span><br><span class="line">状态:	服务器发回了不可路由的地址。使用服务器地址代替。</span><br><span class="line">命令:	MLSD</span><br><span class="line">响应:	425 Can&#39;t open data connection for transfer of &quot;&#x2F;&quot;</span><br><span class="line">错误:	读取目录列表失败</span><br></pre></td></tr></table></figure>

<p>报错信息：【服务器发回了不可路由的地址。使用服务器地址代替。】</p>
<p>在服务器上打开 FileZilla Server，发现也报错了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_144037.png" alt="1503"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FileZilla Server 0.9.60 beta</span><br><span class="line">Copyright 2001-2016 by Tim Kosse (tim.kosse@filezilla-project.org)</span><br><span class="line">https:&#x2F;&#x2F;filezilla-project.org&#x2F;</span><br><span class="line">Connecting to server localhost:14147...</span><br><span class="line">Connected, waiting for authentication</span><br><span class="line">Logged on</span><br><span class="line">You appear to be behind a NAT router. Please configure the passive mode settings and forward a range of ports in your router.</span><br><span class="line">Warning: FTP over TLS is not enabled, users cannot securely log in.</span><br><span class="line">Retrieving settings, please wait...</span><br><span class="line">Done retrieving settings</span><br><span class="line">Retrieving settings, please wait...</span><br><span class="line">Done retrieving settings</span><br></pre></td></tr></table></figure>

<p>可以连接上，但是读取目录失败。</p>
<h2 id="二、问题解决"><a href="#二、问题解决" class="headerlink" title="二、问题解决"></a>二、问题解决</h2><h3 id="2-1-FileZilla-Server-设置"><a href="#2-1-FileZilla-Server-设置" class="headerlink" title="2.1 FileZilla Server 设置"></a>2.1 FileZilla Server 设置</h3><p>打开 FileZilla 服务端【FileZilla Server Interface】，菜单：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_151851.png" alt="1519"></p>
<p>选择【Passive mode settings】一栏：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_151426.png" alt="1516"></p>
<h3 id="2-2-防火墙端口"><a href="#2-2-防火墙端口" class="headerlink" title="2.2 防火墙端口"></a>2.2 防火墙端口</h3><p>在防火墙入站规则中添加上面设置的端口范围，本次使用的 ftp 是华为云，只需要在控制台中添加即可：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_145111.png" alt="1522"></p>
<h3 id="2-3-测试连接"><a href="#2-3-测试连接" class="headerlink" title="2.3 测试连接"></a>2.3 测试连接</h3><p>使用 ftp 客户端连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_152354.png" alt="1524"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">状态:	正在连接 119.x.x.185:21...</span><br><span class="line">状态:	连接建立，等待欢迎消息...</span><br><span class="line">状态:	不安全的服务器，不支持 FTP over TLS。</span><br><span class="line">状态:	已登录</span><br><span class="line">状态:	读取目录列表...</span><br><span class="line">状态:	列出“&#x2F;”的目录成功</span><br></pre></td></tr></table></figure>

<p>连接成功。</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>FTP</category>
      </categories>
      <tags>
        <tag>ftp</tag>
        <tag>问题记录</tag>
      </tags>
  </entry>
  <entry>
    <title>连接 ftp 成功但读取目录失败解决记录</title>
    <url>/p/ftp-dir-fail/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>使用 ftp 客户端 FillZilla 连接报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">状态:	正在连接 106.X.76.36:21...</span><br><span class="line">状态:	连接建立，等待欢迎消息...</span><br><span class="line">状态:	不安全的服务器，不支持 FTP over TLS。</span><br><span class="line">状态:	已登录</span><br><span class="line">状态:	读取目录列表...</span><br><span class="line">命令:	PWD</span><br><span class="line">响应:	257 &quot;&#x2F;&quot; is current directory.</span><br><span class="line">命令:	TYPE I</span><br><span class="line">响应:	200 Type set to I</span><br><span class="line">命令:	PASV</span><br><span class="line">响应:	227 Entering Passive Mode (106,X,76,36,238,204)</span><br><span class="line">命令:	MLSD</span><br><span class="line">响应:	425 Can&#39;t open data connection for transfer of &quot;&#x2F;&quot;</span><br><span class="line">错误:	读取目录列表失败</span><br><span class="line">状态:	连接被服务器关闭</span><br></pre></td></tr></table></figure>

<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>如果能登录成功，但是目录列表读取失败，先检查下传输设置：</p>
<p><img src="content/ftp.2020-03-17_212255.png" alt="模式"></p>
<p>如果是默认的，试着选择【主动】模式，本次修改后可以正常读取目录：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">状态:	正在连接 106.14.76.36:21...</span><br><span class="line">状态:	连接建立，等待欢迎消息...</span><br><span class="line">状态:	不安全的服务器，不支持 FTP over TLS。</span><br><span class="line">状态:	已登录</span><br><span class="line">状态:	读取目录列表...</span><br><span class="line">状态:	列出“/”的目录成功</span><br><span class="line">状态:	连接被服务器关闭</span><br></pre></td></tr></table></figure>

<h2 id="番外篇"><a href="#番外篇" class="headerlink" title="番外篇"></a>番外篇</h2><p>客户端（华为云）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">状态:	正在连接 106.14.76.36:21...</span><br><span class="line">状态:	连接建立，等待欢迎消息...</span><br><span class="line">状态:	不安全的服务器，不支持 FTP over TLS。</span><br><span class="line">状态:	已登录</span><br><span class="line">状态:	读取目录列表...</span><br><span class="line">命令:	PWD</span><br><span class="line">响应:	257 &quot;&#x2F;&quot; is current directory.</span><br><span class="line">命令:	TYPE I</span><br><span class="line">响应:	200 Type set to I</span><br><span class="line">命令:	PORT 192,168,0,195,194,216</span><br><span class="line">响应:	200 Port command successful</span><br><span class="line">命令:	MLSD</span><br><span class="line">响应:	150 Opening data channel for directory listing of &quot;&#x2F;&quot;</span><br><span class="line">响应:	425 Can&#39;t open data connection for transfer of &quot;&#x2F;&quot;</span><br><span class="line">错误:	读取目录列表失败</span><br></pre></td></tr></table></figure>

<p>服务器端（阿里云）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(000046)2020&#x2F;3&#x2F;21 22:26:13 - kwftpuser (119.x.x.185)&gt; disconnected.</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; Connected on port 21, sending welcome message...</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; 220-FileZilla Server 0.9.60 beta</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; 220-written by Tim Kosse (tim.kosse@filezilla-project.org)</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; 220 Please visit https:&#x2F;&#x2F;filezilla-project.org&#x2F;</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; AUTH TLS</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; 502 Explicit TLS authentication not allowed</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; AUTH SSL</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; 502 Explicit TLS authentication not allowed</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; USER kwftpuser</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; 331 Password required for kwftpuser</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - (not logged in) (119.x.x.185)&gt; PASS ***************</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; 230 Logged on</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; PWD</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; 257 &quot;&#x2F;&quot; is current directory.</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; TYPE I</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; 200 Type set to I</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; PORT 192,168,0,195,194,216</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; 200 Port command successful</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; MLSD</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:18 - kwftpuser (119.x.x.185)&gt; 150 Opening data channel for directory listing of &quot;&#x2F;&quot;</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:26:28 - kwftpuser (119.x.x.185)&gt; 425 Can&#39;t open data connection for transfer of &quot;&#x2F;&quot;</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:28:29 - kwftpuser (119.x.x.185)&gt; 421 Connection timed out.</span><br><span class="line">(000047)2020&#x2F;3&#x2F;21 22:28:29 - kwftpuser (119.x.x.185)&gt; disconnected.</span><br></pre></td></tr></table></figure>

<p>本地单独连接阿里云和华为云ftp上传下载都可以。</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>FTP</category>
      </categories>
      <tags>
        <tag>ftp</tag>
        <tag>问题记录</tag>
      </tags>
  </entry>
  <entry>
    <title>在 windows 中使用 iis 搭建 ftp</title>
    <url>/p/windows-ftp-install/</url>
    <content><![CDATA[<h2 id="启用IIS"><a href="#启用IIS" class="headerlink" title="启用IIS"></a>启用IIS</h2><p>【程序和功能】-【启用或关闭 Windows 功能】，勾选 IIS，勾选 FTP 服务器，如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011001.png" alt="ftp.2020011001"></p>
<p>确定，安装完成。</p>
<p>如果是 windows server 2012 则是：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011002.png" alt="ftp.2020011002"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011003.png" alt="ftp.2020011003"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011004.png" alt="ftp.2020011004"></p>
<p>需要重启，重启完成后会在服务中出现【Microsoft FTP Service】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011005.png" alt="ftp.2020011005"></p>
<p>打开 IIS，也会出现 FTP 一栏：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011006.png" alt="ftp.2020011006"></p>
<h2 id="添加-FTP-站点"><a href="#添加-FTP-站点" class="headerlink" title="添加 FTP 站点"></a>添加 FTP 站点</h2><p>打开 IIS，右键【网站】-【添加 FTP 站点…】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011007.png" alt="ftp.2020011007"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011008.png" alt="ftp.2020011008"></p>
<p>指定身份验证和授权信息，可以指定用户，可以允许所有用户</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011009.png" alt="ftp.2020011009"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011009-2.png" alt="ftp.2020011009"></p>
<p>完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011010.png" alt="ftp.2020011010"></p>
<p>访问 <a href="ftp://10.138.61.64">ftp://10.138.61.64</a> ：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011014.png" alt="ftp.2020011014"></p>
<h2 id="设置用户和密码"><a href="#设置用户和密码" class="headerlink" title="设置用户和密码"></a>设置用户和密码</h2><p>要设置用户登录访问需要禁用匿名身份验证：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011015.png" alt="ftp.2020011015"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011016.png" alt="ftp.2020011016"></p>
<p>添加 FTP 用户：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011017.png" alt="ftp.2020011017"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011018.png" alt="ftp.2020011018"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011019.png" alt="ftp.2020011018"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011020.png" alt="ftp.2020011018"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011021.png" alt="ftp.2020011018"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011022.png" alt="ftp.2020011018"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011022-2.png" alt="ftp.2020011018"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011023.png" alt="ftp.2020011018"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011024.png" alt="ftp.2020011018"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011025.png" alt="ftp.2020011018"></p>
<p>访问：<a href="ftp://127.0.0.1/">ftp://127.0.0.1/</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011026.png" alt="ftp.2020011018"></p>
<p>这样访问失败了，从前面可以看出，需输入完整的用户名【SH-HTYF-WANGK\ftp】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011026-2.png" alt="ftp.2020011018"></p>
<p>登录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011027.png" alt="ftp.2020011018"></p>
<h3 id="解决局域网无法访问问题"><a href="#解决局域网无法访问问题" class="headerlink" title="解决局域网无法访问问题"></a>解决局域网无法访问问题</h3><p>本机局域网 IP 为 【10.138.30.229】，在局域网电脑访问 <a href="ftp://10.138.30.229/，发现无法访问：">ftp://10.138.30.229/，发现无法访问：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011028.png" alt="ftp.2020011018"></p>
<p>需要设置防火墙，</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011029.png" alt="ftp.2020011018"></p>
<p>如果只设置第一个，可以访问到，但是无法打开：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011030.png" alt="ftp.2020011018"></p>
<p>将 FTP 三个全部启用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011031.png" alt="ftp.2020011018"></p>
<p>然后就可以访问了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/ftp.2020011032.png" alt="ftp.2020011018"></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>FTP</category>
      </categories>
      <tags>
        <tag>ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>GitLab 实战笔记（一）：centOS 7 上安装 GitLab</title>
    <url>/p/gitlab-install-use/</url>
    <content><![CDATA[<h2 id="安装-GitLab-依赖"><a href="#安装-GitLab-依赖" class="headerlink" title="安装 GitLab 依赖"></a>安装 GitLab 依赖</h2><p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_182637.png" alt="1829"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_183016.png" alt="1830"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_184448.png" alt="1832"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl enable sshd</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl start sshd</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum install postfix</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.163.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.163.com</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package postfix.x86_64 2:2.10.1-6.el7 will be updated</span><br><span class="line">---&gt; Package postfix.x86_64 2:2.10.1-7.el7 will be an update</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">===============================================================================================================================</span><br><span class="line"> Package                      Arch                        Version                              Repository                 Size</span><br><span class="line">===============================================================================================================================</span><br><span class="line">Updating:</span><br><span class="line"> postfix                      x86_64                      2:2.10.1-7.el7                       base                      2.4 M</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">===============================================================================================================================</span><br><span class="line">Upgrade  1 Package</span><br><span class="line"></span><br><span class="line">Total size: 2.4 M</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">Downloading packages:</span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Updating   : 2:postfix-2.10.1-7.el7.x86_64                                                                               1/2 </span><br><span class="line">  Cleanup    : 2:postfix-2.10.1-6.el7.x86_64                                                                               2/2 </span><br><span class="line">  Verifying  : 2:postfix-2.10.1-7.el7.x86_64                                                                               1/2 </span><br><span class="line">  Verifying  : 2:postfix-2.10.1-6.el7.x86_64                                                                               2/2 </span><br><span class="line"></span><br><span class="line">Updated:</span><br><span class="line">  postfix.x86_64 2:2.10.1-7.el7                                                                                                </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl start postfix</span></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --permanent --add-service=http</span></span><br><span class="line">FirewallD is not running</span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl reload firewalld</span></span><br><span class="line">Job <span class="keyword">for</span> firewalld.service invalid.</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="安装-GitLab"><a href="#安装-GitLab" class="headerlink" title="安装 GitLab"></a>安装 GitLab</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash</span></span><br><span class="line">Detected operating system as centos/7.</span><br><span class="line">Checking <span class="keyword">for</span> curl...</span><br><span class="line">Detected curl...</span><br><span class="line">Downloading repository file: https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/config_file.repo?os=centos&amp;dist=7&amp;<span class="built_in">source</span>=script</span><br><span class="line"><span class="keyword">done</span>.</span><br><span class="line">Installing pygpgme to verify GPG signatures...</span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">gitlab_gitlab-ce-source/signature                                                                       |  836 B  00:00:00     </span><br><span class="line">Retrieving key from https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey</span><br><span class="line">Importing GPG key 0xE15E78F4:</span><br><span class="line"> Userid     : <span class="string">"GitLab B.V. (package repository signing key) &lt;packages@gitlab.com&gt;"</span></span><br><span class="line"> Fingerprint: 1a4c 919d b987 d435 9396 38b9 1421 9a96 e15e 78f4</span><br><span class="line"> From       : https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey</span><br><span class="line">Retrieving key from https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey/gitlab-gitlab-ce-3D645A26AB9FBD22.pub.gpg</span><br><span class="line">gitlab_gitlab-ce-source/signature                                                                       |  951 B  00:00:00 !!! </span><br><span class="line">gitlab_gitlab-ce-source/primary                                                                         |  175 B  00:00:19     </span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.163.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.163.com</span><br><span class="line">Package pygpgme-0.3-9.el7.x86_64 already installed and latest version</span><br><span class="line">Nothing to <span class="keyword">do</span></span><br><span class="line">Installing yum-utils...</span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.163.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.163.com</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package yum-utils.noarch 0:1.1.31-40.el7 will be updated</span><br><span class="line">---&gt; Package yum-utils.noarch 0:1.1.31-52.el7 will be an update</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">===============================================================================================================================</span><br><span class="line"> Package                        Arch                        Version                            Repository                 Size</span><br><span class="line">===============================================================================================================================</span><br><span class="line">Updating:</span><br><span class="line"> yum-utils                      noarch                      1.1.31-52.el7                      base                      121 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">===============================================================================================================================</span><br><span class="line">Upgrade  1 Package</span><br><span class="line"></span><br><span class="line">Total size: 121 k</span><br><span class="line">Downloading packages:</span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Updating   : yum-utils-1.1.31-52.el7.noarch                                                                              1/2 </span><br><span class="line">  Cleanup    : yum-utils-1.1.31-40.el7.noarch                                                                              2/2 </span><br><span class="line">  Verifying  : yum-utils-1.1.31-52.el7.noarch                                                                              1/2 </span><br><span class="line">  Verifying  : yum-utils-1.1.31-40.el7.noarch                                                                              2/2 </span><br><span class="line"></span><br><span class="line">Updated:</span><br><span class="line">  yum-utils.noarch 0:1.1.31-52.el7                                                                                             </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">Generating yum cache <span class="keyword">for</span> gitlab_gitlab-ce...</span><br><span class="line">Importing GPG key 0xE15E78F4:</span><br><span class="line"> Userid     : <span class="string">"GitLab B.V. (package repository signing key) &lt;packages@gitlab.com&gt;"</span></span><br><span class="line"> Fingerprint: 1a4c 919d b987 d435 9396 38b9 1421 9a96 e15e 78f4</span><br><span class="line"> From       : https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey</span><br><span class="line">Generating yum cache <span class="keyword">for</span> gitlab_gitlab-ce-source...</span><br><span class="line"></span><br><span class="line">The repository is setup! You can now install packages.</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>安装 gitlab-ce：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install -y gitlab-ce</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.163.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.163.com</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package gitlab-ce.x86_64 0:12.8.7-ce.0.el7 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">===============================================================================================================================</span><br><span class="line"> Package                    Arch                    Version                            Repository                         Size</span><br><span class="line">===============================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> gitlab-ce                  x86_64                  12.8.7-ce.0.el7                    gitlab_gitlab-ce                  705 M</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">===============================================================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total download size: 705 M</span><br><span class="line">Installed size: 1.6 G</span><br><span class="line">Downloading packages:</span><br><span class="line">warning: /var/cache/yum/x86_64/7/gitlab_gitlab-ce/packages/gitlab-ce-12.8.7-ce.0.el7.x86_64.rpm: Header V4 RSA/SHA1 Signature, key ID f27eab47: NOKEY</span><br><span class="line">Public key <span class="keyword">for</span> gitlab-ce-12.8.7-ce.0.el7.x86_64.rpm is not installed</span><br><span class="line">gitlab-ce-12.8.7-ce.0.el7.x86_64.rpm                                                                    | 705 MB  00:19:36     </span><br><span class="line">Retrieving key from https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey</span><br><span class="line">Importing GPG key 0xE15E78F4:</span><br><span class="line"> Userid     : <span class="string">"GitLab B.V. (package repository signing key) &lt;packages@gitlab.com&gt;"</span></span><br><span class="line"> Fingerprint: 1a4c 919d b987 d435 9396 38b9 1421 9a96 e15e 78f4</span><br><span class="line"> From       : https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey</span><br><span class="line">Retrieving key from https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey/gitlab-gitlab-ce-3D645A26AB9FBD22.pub.gpg</span><br><span class="line">Importing GPG key 0xF27EAB47:</span><br><span class="line"> Userid     : <span class="string">"GitLab, Inc. &lt;support@gitlab.com&gt;"</span></span><br><span class="line"> Fingerprint: dbef 8977 4ddb 9eb3 7d9f c3a0 3cfc f9ba f27e ab47</span><br><span class="line"> From       : https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey/gitlab-gitlab-ce-3D645A26AB9FBD22.pub.gpg</span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : gitlab-ce-12.8.7-ce.0.el7.x86_64                                                                            1/1 </span><br><span class="line">It looks like GitLab has not been configured yet; skipping the upgrade script.</span><br><span class="line"></span><br><span class="line">       *.                  *.</span><br><span class="line">      ***                 ***</span><br><span class="line">     *****               *****</span><br><span class="line">    .******             *******</span><br><span class="line">    ********            ********</span><br><span class="line">   ,,,,,,,,,***********,,,,,,,,,</span><br><span class="line">  ,,,,,,,,,,,*********,,,,,,,,,,,</span><br><span class="line">  .,,,,,,,,,,,*******,,,,,,,,,,,,</span><br><span class="line">      ,,,,,,,,,*****,,,,,,,,,.</span><br><span class="line">         ,,,,,,,****,,,,,,</span><br><span class="line">            .,,,***,,,,</span><br><span class="line">                ,*,.</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     _______ __  __          __</span><br><span class="line">    / ____(_) /_/ /   ____ _/ /_</span><br><span class="line">   / / __/ / __/ /   / __ `/ __ \</span><br><span class="line">  / /_/ / / /_/ /___/ /_/ / /_/ /</span><br><span class="line">  \____/_/\__/_____/\__,_/_.___/</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">Thank you <span class="keyword">for</span> installing GitLab!</span><br><span class="line">GitLab was unable to detect a valid hostname <span class="keyword">for</span> your instance.</span><br><span class="line">Please configure a URL <span class="keyword">for</span> your GitLab instance by setting `external_url`</span><br><span class="line">configuration <span class="keyword">in</span> /etc/gitlab/gitlab.rb file.</span><br><span class="line">Then, you can start your GitLab instance by running the following <span class="built_in">command</span>:</span><br><span class="line">  sudo gitlab-ctl reconfigure</span><br><span class="line"></span><br><span class="line">For a comprehensive list of configuration options please see the Omnibus GitLab readme</span><br><span class="line">https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GitLab now ships with a newer version of PostgreSQL (11.7), but it is not yet</span><br><span class="line">enabled by default. To upgrade, please see:</span><br><span class="line">https://docs.gitlab.com/omnibus/settings/database.html<span class="comment">#upgrade-packaged-postgresql-server</span></span><br><span class="line"></span><br><span class="line">  Verifying  : gitlab-ce-12.8.7-ce.0.el7.x86_64                                                                            1/1 </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  gitlab-ce.x86_64 0:12.8.7-ce.0.el7                                                                                           </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>

<p>使用命令 <code>gitlab-ctl reconfigure</code> 执行了一大串。</p>
<p>查看状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># gitlab-ctl status</span></span><br><span class="line">run: alertmanager: (pid 10677) 2407s; run: <span class="built_in">log</span>: (pid 9748) 3360s</span><br><span class="line">run: gitaly: (pid 10629) 2417s; run: <span class="built_in">log</span>: (pid 9012) 3552s</span><br><span class="line">run: gitlab-exporter: (pid 10614) 2420s; run: <span class="built_in">log</span>: (pid 9605) 3404s</span><br><span class="line">run: gitlab-workhorse: (pid 10595) 2421s; run: <span class="built_in">log</span>: (pid 9472) 3427s</span><br><span class="line">run: logrotate: (pid 9523) 3417s; run: <span class="built_in">log</span>: (pid 9532) 3416s</span><br><span class="line">run: nginx: (pid 9485) 3423s; run: <span class="built_in">log</span>: (pid 9496) 3422s</span><br><span class="line">run: node-exporter: (pid 10606) 2421s; run: <span class="built_in">log</span>: (pid 9579) 3410s</span><br><span class="line">run: postgres-exporter: (pid 10688) 2406s; run: <span class="built_in">log</span>: (pid 9824) 3339s</span><br><span class="line">run: postgresql: (pid 9144) 3544s; run: <span class="built_in">log</span>: (pid 9165) 3541s</span><br><span class="line">run: prometheus: (pid 10653) 2413s; run: <span class="built_in">log</span>: (pid 9679) 3389s</span><br><span class="line">run: redis: (pid 8932) 3561s; run: <span class="built_in">log</span>: (pid 8942) 3558s</span><br><span class="line">run: redis-exporter: (pid 10645) 2415s; run: <span class="built_in">log</span>: (pid 9642) 3398s</span><br><span class="line">run: sidekiq: (pid 9402) 3436s; run: <span class="built_in">log</span>: (pid 9420) 3433s</span><br><span class="line">run: unicorn: (pid 9361) 3443s; run: <span class="built_in">log</span>: (pid 9381) 3439s</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>访问【<a href="http://192.168.2.57/】：" target="_blank" rel="noopener">http://192.168.2.57/】：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_202137.png" alt="2029"></p>
<p>再次访问：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_202850.png" alt="2030"></p>
<p>说明安装成功。</p>
<h2 id="登录使用"><a href="#登录使用" class="headerlink" title="登录使用"></a>登录使用</h2><p>接着上面的为 root 设置密码。</p>
<p>用 root 登录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_203916.png" alt="登录GitLab"></p>
<p>登录成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_204710.png" alt="2047"></p>
<h2 id="启动与关闭"><a href="#启动与关闭" class="headerlink" title="启动与关闭"></a>启动与关闭</h2><p>gitlab 占用内存太大，不用的时候可以选择关闭，可使用命令 <code>sudo gitlab-ctl stop</code> 进行关闭：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3.0G        2.4G         46M         60M        472M        335M</span><br><span class="line">Swap:          2.0G        1.0G        1.0G</span><br><span class="line">[root@localhost ~]<span class="comment"># sudo gitlab-ctl stop</span></span><br><span class="line">ok: down: alertmanager: 0s, normally up</span><br><span class="line">ok: down: gitaly: 0s, normally up</span><br><span class="line">ok: down: gitlab-exporter: 0s, normally up</span><br><span class="line">ok: down: gitlab-workhorse: 0s, normally up</span><br><span class="line">ok: down: logrotate: 1s, normally up</span><br><span class="line">ok: down: nginx: 0s, normally up</span><br><span class="line">ok: down: node-exporter: 1s, normally up</span><br><span class="line">ok: down: postgres-exporter: 0s, normally up</span><br><span class="line">ok: down: postgresql: 0s, normally up</span><br><span class="line">ok: down: prometheus: 0s, normally up</span><br><span class="line">ok: down: redis: 0s, normally up</span><br><span class="line">ok: down: redis-exporter: 1s, normally up</span><br><span class="line">ok: down: sidekiq: 0s, normally up</span><br><span class="line">ok: down: unicorn: 0s, normally up</span><br><span class="line">[root@localhost ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3.0G        433M        1.9G         45M        606M        2.4G</span><br><span class="line">Swap:          2.0G        385M        1.6G</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>可使用命令 <code>sudo gitlab-ctl start</code> 启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sudo gitlab-ctl start</span></span><br><span class="line">ok: run: alertmanager: (pid 18833) 0s</span><br><span class="line">ok: run: gitaly: (pid 18847) 1s</span><br><span class="line">ok: run: gitlab-exporter: (pid 18856) 0s</span><br><span class="line">ok: run: gitlab-workhorse: (pid 18858) 0s</span><br><span class="line">ok: run: logrotate: (pid 18866) 1s</span><br><span class="line">ok: run: nginx: (pid 18874) 0s</span><br><span class="line">ok: run: node-exporter: (pid 18891) 1s</span><br><span class="line">ok: run: postgres-exporter: (pid 18893) 0s</span><br><span class="line">ok: run: postgresql: (pid 18899) 1s</span><br><span class="line">ok: run: prometheus: (pid 18907) 0s</span><br><span class="line">ok: run: redis: (pid 18909) 1s</span><br><span class="line">ok: run: redis-exporter: (pid 18915) 0s</span><br><span class="line">ok: run: sidekiq: (pid 18922) 1s</span><br><span class="line">ok: run: unicorn: (pid 18943) 0s</span><br><span class="line">[root@localhost ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3.0G        716M        1.4G         67M        850M        2.1G</span><br><span class="line">Swap:          2.0G        385M        1.6G</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="占用内存很大"><a href="#占用内存很大" class="headerlink" title="占用内存很大"></a>占用内存很大</h3><p>登录时间很长，试了好几次都是502，查看内存：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           976M        718M         67M         10M        190M         52M</span><br><span class="line">Swap:          2.0G        1.8G        169M</span><br></pre></td></tr></table></figure>

<p>竟然使用了 718M，只剩67M可用，将服务器内存增大到2G，就立马登录成功了,查看内存：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# free -h</span><br><span class="line">              total        used        free      shared  buff&#x2F;cache   available</span><br><span class="line">Mem:           2.0G        891M        791M        6.7M        316M        998M</span><br><span class="line">Swap:          2.0G        1.7G        270M</span><br></pre></td></tr></table></figure>

<p>使用 top 命令：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_205609.png" alt="top"></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>git工具</tag>
        <tag>代码管理</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>git 客户端 sourcetree 基本使用</title>
    <url>/p/sourcetree-baseuse/</url>
    <content><![CDATA[<h2 id="远程代码库下载到本地"><a href="#远程代码库下载到本地" class="headerlink" title="远程代码库下载到本地"></a>远程代码库下载到本地</h2><p>菜单，【文件】-&gt;【克隆/新建…】：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122901.png" alt="Alt text"></p>
<p>输入需要克隆的远程仓库地址、克隆到本地的目录，选择检出的分支，勾选【递归子模块】：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122902.png" alt="Alt text"></p>
<p>点击克隆后，就会从远程下载，可显示完整输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git -c filter.lfs.smudge= -c filter.lfs.required=<span class="literal">false</span> -c diff.mnemonicprefix=<span class="literal">false</span> -c core.quotepath=<span class="literal">false</span> --no-optional-locks <span class="built_in">clone</span> --branch develop_TR620 --recursive http://10.138.61.72/vbs/service-group/console/LoanInfoProcess.git D:\svn\Loan\branches\LoanInfoProcess_TR620</span><br><span class="line">Cloning into <span class="string">'D:\svn\Loan\branches\LoanInfoProcess_TR620'</span>...</span><br><span class="line"></span><br><span class="line">[KUpdating files:  66% (162/243)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[KUpdating files:  67% (163/243)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[KUpdating files: 100% (243/243), <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line">执行成功</span><br></pre></td></tr></table></figure>

<p>远程代码会下载到本地目录：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122903.png" alt="Alt text"></p>
<p>在 sourcetree 主界面中就可以看到代码的提交信息：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122904.png" alt="Alt text"></p>
<p>设置本地分支跟踪远程分支：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122905.png" alt="Alt text"></p>
<h2 id="选择一个工作副本仓库添加到-sourcetree"><a href="#选择一个工作副本仓库添加到-sourcetree" class="headerlink" title="选择一个工作副本仓库添加到 sourcetree"></a>选择一个工作副本仓库添加到 sourcetree</h2><p>地址就是本地的副本仓库目录：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122906.png" alt="Alt text"></p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122907.png" alt="Alt text"></p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="P1"><a href="#P1" class="headerlink" title="P1"></a>P1</h3><p>将本地副本仓库直接推送到远程：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git -c diff.mnemonicprefix=<span class="literal">false</span> -c core.quotepath=<span class="literal">false</span> --no-optional-locks push -v --tags origin master:master</span><br><span class="line">Pushing to https://github.com/kungge/KunNote.git</span><br><span class="line">To https://github.com/kungge/KunNote.git</span><br><span class="line"> ! [rejected]        master -&gt; master (fetch first)</span><br><span class="line">error: failed to push some refs to <span class="string">'https://github.com/kungge/KunNote.git'</span></span><br><span class="line">hint: Updates were rejected because the remote contains work that you <span class="keyword">do</span></span><br><span class="line">hint: not have locally. This is usually caused by another repository pushing</span><br><span class="line">hint: to the same ref. You may want to first integrate the remote changes</span><br><span class="line">hint: (e.g., <span class="string">'git pull ...'</span>) before pushing again.</span><br><span class="line">hint: See the <span class="string">'Note about fast-forwards'</span> <span class="keyword">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure>
<p>这种情况应先拉取再推送即可。</p>
<h3 id="P2"><a href="#P2" class="headerlink" title="P2"></a>P2</h3><p>你想参与别人的项目，你直接克隆的是别人的项目，修改后把你本地的代码推送到远程会报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git -c diff.mnemonicprefix&#x3D;false -c core.quotepath&#x3D;false --no-optional-locks push -v --tags origin master:master</span><br><span class="line">remote: Permission to 404658568&#x2F;GoodBlog.git denied to kungge.</span><br><span class="line">fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;404658568&#x2F;GoodBlog.git&#x2F;&#39;: The requested URL returned error: 403</span><br><span class="line"></span><br><span class="line">Pushing to https:&#x2F;&#x2F;github.com&#x2F;404658568&#x2F;GoodBlog.git</span><br><span class="line">完成时带有错误，见上文。</span><br></pre></td></tr></table></figure>

<p>初看属于权限问题，别人的项目你不能直接推送的。</p>
<p>你可以先fork别人的项目，更改后推送，当你再次推送会打开一个 pull 请求：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122908.png" alt="Alt text"></p>
<p>创建 pull 请求：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122909.png" alt="Alt text"></p>
<p>这个时候项目创始人github的项目主页中会出现：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122910.png" alt="Alt text"></p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/sourcetree.122911.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>git客户端</tag>
        <tag>sourcetree</tag>
      </tags>
  </entry>
  <entry>
    <title>idea 2018 永久激活记录</title>
    <url>/p/idea-activation/</url>
    <content><![CDATA[<p>本次测试激活仅供学习使用，勿用于商业用途，请支持正版。</p>
<p>本次激活的版本是 2018，经测试可达到永久激活：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IntelliJ IDEA 2018.2.2 (Ultimate Edition)</span><br><span class="line">Build #IU-182.4129.33, built on August 21, 2018</span><br><span class="line">Licensed to idea</span><br><span class="line">Subscription is active until January 1, 2100</span><br><span class="line">JRE: 1.8.0_152-release-1248-b8 x86</span><br><span class="line">JVM: OpenJDK Server VM by JetBrains s.r.o</span><br><span class="line">Windows 10 10.0</span><br></pre></td></tr></table></figure>

<h2 id="下载破解补丁"><a href="#下载破解补丁" class="headerlink" title="下载破解补丁"></a>下载破解补丁</h2><p>下载地址：<a href="http://www.kungge.com/NotProjFiles/software/JetbrainsCrack-4.2-release-enc.jar" target="_blank" rel="noopener">http://www.kungge.com/NotProjFiles/software/JetbrainsCrack-4.2-release-enc.jar</a></p>
<p>将下载的文件【JetbrainsCrack-4.2-release-enc.jar】拷贝到 idea 的安装【bin】目录下。</p>
<h2 id="修改两个文件"><a href="#修改两个文件" class="headerlink" title="修改两个文件"></a>修改两个文件</h2><p>在【bin】目录中找到两个后缀为【.vmoptions】的文件，经查发现本次改的是【idea.exe.vmoptions】【idea64.exe.vmoptions】两个文件，在这两个文件的最后追加一个字段 【-javaagent [破解补丁的绝对路径]】，如本次是：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">-javaagent:E:\job\noinstalled\Intellij</span> <span class="string">IDEA</span> <span class="number">2018.2</span><span class="number">.2</span><span class="string">\bin\JetbrainsCrack-4.2-release-enc.jar</span></span><br></pre></td></tr></table></figure>

<h2 id="输入激活码激活"><a href="#输入激活码激活" class="headerlink" title="输入激活码激活"></a>输入激活码激活</h2><p>修改文件完成后，打开 idea，使用如下激活码：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">ThisCrackLicenseId-&#123;</span><br><span class="line">    "licenseId": "ThisCrackLicenseId",</span><br><span class="line">    "licenseeName": "idea",</span><br><span class="line">    "assigneeName": "",</span><br><span class="line">    "assigneeEmail": "idea@163.com",</span><br><span class="line">    "licenseRestriction": "For This Crack, Only Test! Please support genuine!!!",</span><br><span class="line">    "checkConcurrentUse": false,</span><br><span class="line">    "products": [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"II"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"DM"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"AC"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"RS0"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"WS"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"DPN"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"RC"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"PS"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"DC"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"RM"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"CL"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"code"</span>: <span class="string">"PC"</span>,</span><br><span class="line">            <span class="attr">"paidUpTo"</span>: <span class="string">"2099-12-31"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    "hash": "2911276/0",</span><br><span class="line">    "gracePeriodDays": 7,</span><br><span class="line">    "autoProlongated": false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将激活码拷贝到选择的【Activate】-【Activate license with：Activation code】输入框中，然后点击【ok】即可。</p>
<p>打开菜单【Help】-&gt;【About】即可看到激活的信息，详见文章开篇处。</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>集成开发环境</tag>
        <tag>软件激活</tag>
      </tags>
  </entry>
  <entry>
    <title>在 idea 中设置自动添加注释信息</title>
    <url>/p/idea-settings-annotate/</url>
    <content><![CDATA[<p>菜单 File -&gt; Settings：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/idea.2020-03-09_165410.png" alt="注释配置"></p>
<p>添加的信息：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> $&#123;USER&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> $&#123;DATE&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<p>当新增一个类的时候，会生成如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kungge.abc.order.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wankun</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/9.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test1</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>工具</category>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>集成开发环境</tag>
        <tag>注释</tag>
      </tags>
  </entry>
  <entry>
    <title>在 idea 中快速创建 srping boot 项目</title>
    <url>/p/idea-spring-boot/</url>
    <content><![CDATA[<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>【Create New Project】-&gt; 【Spring Initializer】，选择 jdk，【Next】：</p>
<p><img src="content/idea.2020010301.png" alt="idea.2020010301"></p>
<p>输入信息，【Next】，勾选需要的依赖，如本次勾选：</p>
<ul>
<li>Developer Tools：Lombok</li>
<li>SQL：MS SQL Server Driver</li>
</ul>
<p><img src="content/idea.2020010302.png" alt="idea.2020010302"></p>
<p>【Next】，输入项目名称和路径，【Finish】完成，项目结构：</p>
<p><img src="content/idea.2020010303.png" alt="idea.2020010303"></p>
<p>pom.xml：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.chengkun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.microsoft.sqlserver<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mssql-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>spring-boot 启动依赖是：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>手动添加 log4j 包：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.vcredit.framework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j2-kafka-configurer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.4-RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后 idea 会检查到有变动会提示，点击【import changes】就会导入变化的。</p>
<p>DemoApplication.java 初始的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chengkun.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="创建定时任务"><a href="#创建定时任务" class="headerlink" title="创建定时任务"></a>创建定时任务</h2><p>1.在类【DemoApplication】添加注解【@EnableScheduling】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chengkun.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.新建一个 JobTest 类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chengkun.demo.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JobTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0/2 * * * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World "</span>+<span class="keyword">new</span> Date());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.运行</p>
<p><img src="content/idea.2020010304.png" alt="idea.2020010304"></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>集成开发环境</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlserver 获取字符串获中某个字符的最后一个位置</title>
    <url>/p/sqlserver-sql-string/</url>
    <content><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><p>CHARINDEX 函数取到的位置是从0开始，获取某字符时取到的是第一个位置，如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @GoodMan <span class="built_in">VARCHAR</span>(<span class="number">255</span>) = <span class="string">'GOODMAN/KUNGGE/WAN'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> @GoodMan <span class="keyword">AS</span> TheString,<span class="keyword">CHARINDEX</span>(<span class="string">'/'</span>,@GoodMan) TheCharIndex</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>TheString</th>
<th>TheCharIndex</th>
</tr>
</thead>
<tbody><tr>
<td>GOODMAN/KUNGGE/WAN</td>
<td>8</td>
</tr>
</tbody></table>
<p>查了下 sqlserver 的函数库，没有找到截取最后一个字符功能的函数，像 .NET 里的 <code>LastIndexOf(char)</code> 这种。</p>
<h2 id="需求实现"><a href="#需求实现" class="headerlink" title="需求实现"></a>需求实现</h2><p>可以利用 REVERSE（字符串反转） 函数实现，先将字符串反转，然后获取反转后第一个字符的位置，再用字符串总长度减掉这个位置，得到的值加1就是最后一个字符的位置。</p>
<p>下面是一个具体案例的处理过程，废话不多说，直接看 sql：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @GoodMan <span class="built_in">VARCHAR</span>(<span class="number">255</span>) = <span class="string">'GOODMAN/KUNGGE/WAN'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> @GoodMan <span class="keyword">AS</span> TheString,</span><br><span class="line">       <span class="keyword">REVERSE</span>(@GoodMan) TheReverse,</span><br><span class="line">       <span class="keyword">CHARINDEX</span>(<span class="string">'/'</span>, <span class="keyword">REVERSE</span>(@GoodMan)) Reverse_CharFirstIndex,</span><br><span class="line">       <span class="keyword">LEN</span>(@GoodMan) <span class="keyword">AS</span> TheStringLen,</span><br><span class="line">       <span class="keyword">LEN</span>(@GoodMan) - <span class="keyword">CHARINDEX</span>(<span class="string">'/'</span>, <span class="keyword">REVERSE</span>(@GoodMan)) <span class="keyword">AS</span> Reverse_CharFirstIndex_leftLen,</span><br><span class="line">       <span class="keyword">SUBSTRING</span>(@GoodMan, <span class="number">1</span>, <span class="keyword">LEN</span>(@GoodMan) - <span class="keyword">CHARINDEX</span>(<span class="string">'/'</span>, <span class="keyword">REVERSE</span>(@GoodMan))) <span class="keyword">AS</span> TheString_AtCharLastIndex;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>TheString</th>
<th>TheReverse</th>
<th>Reverse_CharFirstIndex</th>
<th>TheStringLen</th>
<th>Reverse_CharFirstIndex_leftLen</th>
<th>TheString_AtCharLastIndex</th>
</tr>
</thead>
<tbody><tr>
<td>GOODMAN/KUNGGE/WAN</td>
<td>NAW/EGGNUK/NAMDOOG</td>
<td>4</td>
<td>18</td>
<td>14</td>
<td>GOODMAN/KUNGGE</td>
</tr>
</tbody></table>
<ul>
<li>Reverse_CharFirstIndex 是字符 <code>/</code> 第一次出现的位置</li>
<li>Reverse_CharFirstIndex_leftLen+1 就是字符 <code>/</code> 最后出现的置</li>
<li>TheString_AtCharLastIndex 就是截取字符 <code>/</code> 最后出现的置之前的字符串 </li>
</ul>
<p>有没有其它的实现方式，欢迎评论留言。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
        <tag>sqlserver字符串</tag>
        <tag>sqlserver函数</tag>
        <tag>sqlserver实用</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman 调用 .asmx 格式的 webservice 接口</title>
    <url>/p/postman-webservice/</url>
    <content><![CDATA[<p>在测试 .asmx 的 webservice 接口时，可以通过网页填入参数，然后点击【Invoke】进行测试：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/postman.2020010601.png" alt="postman.2020010601"></p>
<p>这样的弊端时无法保存入参，每次都要输入，特别时在参数比较多的情况下，每次都要重新输入，相当麻烦：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/postman.2020010602.png" alt="postman.2020010602"></p>
<p>那么如何在 Postman 进行测试呢？</p>
<p>地址栏输入【…/Abc.asmx/API】，如【…/Abc.asmx?op=DoIt】对应【…/Abc.asmx/DoIt】。</p>
<p>在【Body】一栏下选中【x-www-form-urlencoded】，然后添加入参即可，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/postman.2020010603.png" alt="postman.2020010603"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/postman.2020010604.png" alt="postman.2020010604"></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>测试工具</category>
      </categories>
      <tags>
        <tag>postman</tag>
        <tag>接口测试工具</tag>
      </tags>
  </entry>
  <entry>
    <title>一款桌面小工具 FastStone 使用心得：截图配合 ftp 写 markdown 简直不能太爽</title>
    <url>/p/smalltool-faststone/</url>
    <content><![CDATA[<p>在 markdown 中插入图片比较麻烦，虽然可以安装一些插件，使用快捷键快速插入图片标签，但是还需要给名片命名，如果是截图还要把图片存储到某个地址，然后再引用这个地址，这些下来还是比较麻烦的。</p>
<p>本文介绍如何在 markdown 中快速插入截图，需要完成如下操作：</p>
<ol>
<li>创建一个图片网站：用来链接图片</li>
<li>创建 ftp 服务：将图片上传到图片网站</li>
<li>设置 FastStone</li>
</ol>
<p>可以找一台云服务器，使用 tomacat 或者 iis 等都可以，本人有一台华为云服务器，使用的是 iis，配置了一个二级域名【<a href="http://img2.kungge.com】解析到了这个图片网站地址，当然也可以不用配置域名直接用ip即可。" target="_blank" rel="noopener">http://img2.kungge.com】解析到了这个图片网站地址，当然也可以不用配置域名直接用ip即可。</a></p>
<p>设置 FastStone，直接按F12，或者点击菜单设置，选择 FTP 一栏，输入 FTP 服务器地址、端口、用户名、密码，url 配置你的图片网站地址即可（一定要勾选【复制网址到剪贴板】）：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_220443.png" alt="20200503220544"></p>
<p>设置完成，截图的时候，使用快捷键【Alt+T】（默认快捷键），或者点击菜单【文件】-&gt; 【发送到网络（FTP）】。</p>
<p>配置了 vs code 代码片段，截完图上传到ftp后，然后直接粘贴（Ctrl+V）图片地址，演示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_2059.gif" alt="20200503205902"></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>小工具</category>
      </categories>
      <tags>
        <tag>桌面小工具</tag>
        <tag>FastStone</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2 学习笔记：一文学会基本使用</title>
    <url>/p/struts2-base/</url>
    <content><![CDATA[<p>Struts2 是一个 MVC 框架。</p>
<p>Struts1 完全依赖于 Servlet 的 API 但是耦合性太高，被 Struts2 替代了。</p>
<p>Struts2 并不是在 Struts1 基础上设计的，两者没有直接的关系。</p>
<h2 id="一、环境配置"><a href="#一、环境配置" class="headerlink" title="一、环境配置"></a>一、环境配置</h2><p>下载 Struts2 的压缩包，下载地址：<a href="https://struts.apache.org/" target="_blank" rel="noopener">https://struts.apache.org/</a></p>
<p>本次下载的版本是【struts-2.3.37】。</p>
<p>下载完成后，我们打开压缩包：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020102.png" alt="struts2"></p>
<h3 id="1-1-框架中的核心依赖"><a href="#1-1-框架中的核心依赖" class="headerlink" title="1.1 框架中的核心依赖"></a>1.1 框架中的核心依赖</h3><p>将 struts2 空的核心架包【apps/struts2-blank.war】 拷贝出来：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020103.png" alt="struts2"></p>
<p>放到 Tomcat 安装目录 webapps 下面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020104.png" alt="struts2"></p>
<p>然后启动 Tomcat 【bin/startup.bat】，启动成功后，得到 Tomcat 目录下【webapps/struts2-blank/WEB-INF/lib】下的文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020105.png" alt="struts2"></p>
<p>也可以不用像上面那么麻烦，直接解压 war 后缀的文件，具体操作如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020107.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020108.png" alt="struts2"></p>
<p>将这些文件拷贝到项目中，然后【Add as Library…】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020106.png" alt="struts2"></p>
<h3 id="1-2-创建核心过滤器"><a href="#1-2-创建核心过滤器" class="headerlink" title="1.2 创建核心过滤器"></a>1.2 创建核心过滤器</h3><p>在 web.xml 中添加 Struts2 框架的核心过滤器的配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.action<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中 filter-class 就是：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020109.png" alt="struts2"></p>
<h3 id="1-3-创建-struts-xml-文件"><a href="#1-3-创建-struts-xml-文件" class="headerlink" title="1.3 创建 struts.xml 文件"></a>1.3 创建 struts.xml 文件</h3><p>创建 Resources 目录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020110.png" alt="struts2"></p>
<p>在这个目录下新建 struts.xml 文件，文件头从文件中拷贝出来：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020111.png" alt="struts2"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-4-启动项目验证"><a href="#1-4-启动项目验证" class="headerlink" title="1.4 启动项目验证"></a>1.4 启动项目验证</h3><p>添加 Tomcat 配置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020112.png" alt="struts2"></p>
<p>启动项目，如果访问成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020112-2.png" alt="struts2"></p>
<p>则到此环境配置完成。</p>
<h2 id="二、Struts2-的基本使用"><a href="#二、Struts2-的基本使用" class="headerlink" title="二、Struts2 的基本使用"></a>二、Struts2 的基本使用</h2><h3 id="2-1-一个简单的例子"><a href="#2-1-一个简单的例子" class="headerlink" title="2.1 一个简单的例子"></a>2.1 一个简单的例子</h3><p>创建 ActionTest 类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ActionTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ActionTest 被实例化"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>index.jsp：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>这里是主页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  这是主页内容</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>struts.xml 配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--name 要保证唯一 namespace 是逻辑的命名空间--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg1"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg1ns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest1"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayHi"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"hi"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg2"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg2ns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest1"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayHi"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"hi"</span> <span class="attr">type</span>=<span class="string">"redirect"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>extends 是继承的 package，struts-default 是默认的 package：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020113.png" alt="struts2"></p>
<p>即使在不同的 package 中 action 的 name 相同，可以通过 namespace 增加逻辑命名空间，访问效果如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020114.png" alt="struts2"></p>
<p>配置的视图，默认使用的是转发（type=”dispatcher”），在 pkg2 中指定【type=”redirect”】则为重定向，当访问【<a href="http://localhost:8080/struts2test/pkg2ns/actionTest1.action】" target="_blank" rel="noopener">http://localhost:8080/struts2test/pkg2ns/actionTest1.action】</a><br>地址栏会变成【<a href="http://localhost:8080/struts2test/index.jsp】。" target="_blank" rel="noopener">http://localhost:8080/struts2test/index.jsp】。</a></p>
<p>几乎所有的都是使用转发。</p>
<h3 id="2-2-传值"><a href="#2-2-传值" class="headerlink" title="2.2 传值"></a>2.2 传值</h3><p>如何将值传到视图中和将视图中的值传到后台？</p>
<h4 id="2-2-1-后台传值到视图"><a href="#2-2-1-后台传值到视图" class="headerlink" title="2.2.1 后台传值到视图"></a>2.2.1 后台传值到视图</h4><p>Struts2 的 Action 中不能定义方法名前缀为 get、set。</p>
<p>只需在类中定义一个变量，并且需要定义对这个变量的 get 方法，如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.msg=<span class="string">"hi"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后在视图页面展示出来，如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>这里是主页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">这是主页内容，msg 为 $&#123;msg&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>渲染效果如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020115.png" alt="struts2"></p>
<p>如果有多个视图方法？</p>
<p>如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ActionTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ActionTest ActionTest()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hi"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hello"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayYes</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"yes"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"yes"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>struts.xml：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--name要保证唯一 namespace是逻辑的命名空间--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg1"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg1ns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest1"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayHi"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"hi"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest2"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayHello"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"hello"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest3"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayYes"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"yes"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>渲染效果分别如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020116.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020117.png" alt="struts2"></p>
<p>后台输出：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020118.png" alt="struts2"></p>
<p>说明每调用一次，实例化一次对象。</p>
<h4 id="2-2-2-视图传值到后台"><a href="#2-2-2-视图传值到后台" class="headerlink" title="2.2.2 视图传值到后台"></a>2.2.2 视图传值到后台</h4><p>新建视图页面 test1.jsp：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test1 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"pkgTest/actionTest2_test1.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>对于视图页面传值，后台类必须设置 get 和 set 方法，新建类 ActionTest2：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"test1() userName="</span>+<span class="keyword">this</span>.userName+<span class="string">" age="</span>+<span class="keyword">this</span>.age);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020125.png" alt="struts2"></p>
<p>后台打印出了视图传过来的值，说明传值成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020126.png" alt="struts2"></p>
<h4 id="2-2-3-传复合型参数"><a href="#2-2-3-传复合型参数" class="headerlink" title="2.2.3 传复合型参数"></a>2.2.3 传复合型参数</h4><p>实际开发中，参数是以类的属性存在，这就是复合型参数。</p>
<p>新建一个实体类 UserInfo：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>后台类 ActionTest2 改为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserInfo userInfo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfo <span class="title">getUserInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserInfo</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userInfo = userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"test2() userName="</span>+<span class="keyword">this</span>.userInfo.getUserName()+<span class="string">" age="</span>+<span class="keyword">this</span>.userInfo.getAge());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test2"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新建 test2.jsp：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test2 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"pkgTest/actionTest2_test2.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userInfo.userName"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userInfo.age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>struts.xml 配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkgTest"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkgTest"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest2_*"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest2"</span> <span class="attr">method</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span>/&#123;1&#125;Result.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>设置 actionTest2_test2.action 对应的视图是 /test2Result.jsp，这个 jsp 内容：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test2Result 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">test2Result 页面，姓名：$&#123;userInfo.getUserName()&#125;  年龄：$&#123;userInfo.getAge()&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>test2.jsp 页面提交时后台接收到了视图页传过来的值，打印：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">test2() userName&#x3D;mark age&#x3D;29</span><br></pre></td></tr></table></figure>

<p>会转发到视图【/test2Result.jsp】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020301.png" alt="struts2"></p>
<p>实现的是双向绑定。</p>
<h3 id="2-3-通配符的使用"><a href="#2-3-通配符的使用" class="headerlink" title="2.3 通配符的使用"></a>2.3 通配符的使用</h3><p>通配符非常灵活。</p>
<h4 id="2-3-1-一个类不同方法的通配"><a href="#2-3-1-一个类不同方法的通配" class="headerlink" title="2.3.1 一个类不同方法的通配"></a>2.3.1 一个类不同方法的通配</h4><p>ActionTest 修改如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ActionTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ActionTest ActionTest()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hi"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hello"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">yes</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"yes"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"yes"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>struts.xml 配置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg2"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg2ns"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest_*"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>访问渲染效果如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020119.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020120.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020121.png" alt="struts2"></p>
<p>可以使用 constant 修改默认的变量：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020122.png" alt="struts2"></p>
<p>默认的变量在 default.properties 中设置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020123.png" alt="struts2"></p>
<p>如配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.enable.SlashesInActionNames"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>则可以使用【/】作为访问路径的常量，如【&lt;action name=”actionTest/*” …】。</p>
<p>如配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.configuration.xml.reload"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>则更改 struts2 的配置文件后自动加载。</p>
<p>前面是一个视图，如果是多个视图呢？</p>
<p>增加页面 hi.jsp、hello.jsp、yes.jsp，struts.xml 配置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg3"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg3ns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest_*"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span>/&#123;1&#125;.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>渲染效果如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020124.png" alt="struts2"></p>
<h4 id="2-3-2-不同类的通配"><a href="#2-3-2-不同类的通配" class="headerlink" title="2.3.2 不同类的通配"></a>2.3.2 不同类的通配</h4><p>只需要修改 struts.xml 中 class 的通配即可，这里不作详解。</p>
<h3 id="2-4-使用-Servlet"><a href="#2-4-使用-Servlet" class="headerlink" title="2.4 使用 Servlet"></a>2.4 使用 Servlet</h3><p>通过 ActionContext 可以获取 request 对象。</p>
<p>通过 ServletActionContext 可以获取 pageContext 对象和 request 对象。</p>
<p>新建一个类 ServletAction 继承 ActionSupport：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.PageContext;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ActionContext context= ActionContext.getContext();<span class="comment">//request 对象</span></span><br><span class="line">        Map&lt;String, Object&gt; session = context.getSession();<span class="comment">//session 对象</span></span><br><span class="line">        Map&lt;String, Object&gt; application = context.getApplication();<span class="comment">//application 对象</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"yes"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        PageContext pageContext = ServletActionContext.getPageContext();</span><br><span class="line">        HttpServletRequest request = ServletActionContext.getRequest();</span><br><span class="line">        ServletContext servletContext = ServletActionContext.getServletContext();<span class="comment">//application</span></span><br><span class="line">        </span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新建一个类 ServletAction2，通过实现接口可以实现 IoC 功能：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.ApplicationAware;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.RequestAware;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.SessionAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletAction2</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> <span class="keyword">implements</span> <span class="title">ApplicationAware</span>, <span class="title">SessionAware</span>, <span class="title">RequestAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String, Object&gt; application;</span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String, Object&gt; request;</span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String, Object&gt; session;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplication</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.application=map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRequest</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.request=map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSession</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.session=map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新建一个视图类 UserAction 继承 ServletAction2：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.struts.servlet.ServletAction2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> <span class="keyword">extends</span> <span class="title">ServletAction2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> UserInfo userInfo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfo <span class="title">getUserInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserInfo</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userInfo = userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"test() userName="</span>+<span class="keyword">this</span>.userInfo.getUserName()+<span class="string">" age="</span>+<span class="keyword">this</span>.userInfo.getAge());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hello world"</span>;</span><br><span class="line">        <span class="keyword">this</span>.request.put(<span class="string">"theRequest"</span>,<span class="string">"theRequest data"</span>);</span><br><span class="line">        <span class="keyword">this</span>.session.put(<span class="string">"theSession"</span>,<span class="string">"theSession data"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>test 方法中接收了视图页面传过来的数据，给类中的 msg 变量赋值，然后在 request 对象和 session 对象中分别存入数据。</p>
<p>struts.xml 配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkgTest"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkgTest"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"*_*"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.&#123;1&#125;Action"</span> <span class="attr">method</span>=<span class="string">"&#123;2&#125;"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/userResult.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>视图 userResult.jsp ：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>userResult 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">test2Result 页面，姓名：$&#123;userInfo.getUserName()&#125;  年龄：$&#123;userInfo.getAge()&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">msg 数据：$&#123;requestScope.msg&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">request 对象中的数据：$&#123;theRequest&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">session 对象中的数据：$&#123;theSession&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过一个视图页 userTest.jsp 来提交数据：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>userTest 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"pkgTest/User_test.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userInfo.userName"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userInfo.age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>测试范例如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020501.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020502.png" alt="struts2"></p>
<h2 id="三、Struts2-多模块的使用"><a href="#三、Struts2-多模块的使用" class="headerlink" title="三、Struts2 多模块的使用"></a>三、Struts2 多模块的使用</h2><p>本次演示是实际开发中多个目录的情况，每个模块一个目录，下面对应 action 和 exception，项目结构如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020-03-14_220730.png" alt="proj dir"></p>
<h3 id="3-1-创建-Action"><a href="#3-1-创建-Action" class="headerlink" title="3.1 创建 Action"></a>3.1 创建 Action</h3><p>新建 BaseAction 作为所谓父类的 Action，用来统一管理子类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.common.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.RequestAware;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.SessionAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Action 类的父类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> <span class="keyword">implements</span> <span class="title">RequestAware</span>, <span class="title">SessionAware</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 当前用户的key</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CURRENT_USER=<span class="string">"current_user"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String,Object&gt; request;</span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String,Object&gt; session;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRequest</span><span class="params">(Map&lt;String,Object&gt; var1)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.request=var1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSession</span><span class="params">(Map&lt;String, Object&gt; var1)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.session=var1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">getCurrentUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> session.get(CURRENT_USER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>一个模块一个 Action，用来继承 BaseAction，如本次的 User 模块下 UserAction：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.user.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nice.core.common.action.BaseAction;</span><br><span class="line"><span class="keyword">import</span> com.nice.core.entity.UserInfo;</span><br><span class="line"><span class="keyword">import</span> com.nice.core.user.ex.UserException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> <span class="keyword">extends</span> <span class="title">BaseAction</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserInfo userInfo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfo <span class="title">getUserInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserInfo</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userInfo = userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserAction login start"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(userInfo.getUserName()+<span class="string">" "</span>+userInfo.getPassword());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"kwan"</span>.equals(userInfo.getUserName()) &amp;&amp; <span class="string">"123"</span>.equals(userInfo.getPassword()))&#123;</span><br><span class="line">            System.out.println(<span class="string">"login successful"</span>);</span><br><span class="line">            session.put(CURRENT_USER,userInfo.getUserName());</span><br><span class="line">            <span class="keyword">return</span> SUCCESS;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UserException(<span class="string">"用户登录异常"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-创建异常处理类"><a href="#3-2-创建异常处理类" class="headerlink" title="3.2 创建异常处理类"></a>3.2 创建异常处理类</h3><p>实际开发会建立自己的异常，如新建一个公共的异常类【BusinessException】：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.common.ex;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异常的父类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BusinessException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">BusinessException</span><span class="params">(String message, Throwable cause,</span></span></span><br><span class="line"><span class="function"><span class="params">                               <span class="keyword">boolean</span> enableSuppression,</span></span></span><br><span class="line"><span class="function"><span class="params">                               <span class="keyword">boolean</span> writableStackTrace)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>各个模块的异常类都继承这个公共异常类，更好的规范，，如【UserException】:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.user.ex;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nice.core.common.ex.BusinessException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户信息异常处理类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserException</span> <span class="keyword">extends</span> <span class="title">BusinessException</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserException</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">UserException</span><span class="params">(String message, Throwable cause,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">boolean</span> enableSuppression,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">boolean</span> writableStackTrace)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-3-struts-配置"><a href="#3-3-struts-配置" class="headerlink" title="3.3 struts 配置"></a>3.3 struts 配置</h3><p>新建 struts.xml 文件，具体的模块 action 并不建立在此文件中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--可以使用【/】作为访问路径的常量--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.enable.SlashesInActionNames"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--更改 struts2 的配置文件后自动加载--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.configuration.xml.reload"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--后缀名配置常量，支持多个以逗号分隔--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.action.extension"</span> <span class="attr">value</span>=<span class="string">"do,action,,"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--包含零散的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/user/struts-user.xml"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--定义基本包，如果 abstract 设为 true，则抽象包下面配置的 Action 元素无效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"basepkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">abstract</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置全局视图--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">global-results</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">type</span>=<span class="string">"redirect"</span> <span class="attr">name</span>=<span class="string">"login"</span>&gt;</span>/loginPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"error"</span>&gt;</span>/errorPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">global-results</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--配置全局异常--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exception-mapping</span> <span class="attr">exception</span>=<span class="string">"java.lang.Exception"</span> <span class="attr">result</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在资源目录【Resources】中会区分不同模块，因此会以一个模块建立一个目录，user 模块的 struts 配置【struts-user.xml】：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"userpkg"</span> <span class="attr">extends</span>=<span class="string">"basepkg"</span> <span class="attr">namespace</span>=<span class="string">"/userns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"*"</span>  <span class="attr">class</span>=<span class="string">"com.nice.core.user.action.UserAction"</span> <span class="attr">method</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/WEB-INF/views/user/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 struts.xml 中通过 include 标签将各模块的 struts 配置导入进来，配置全局视图、配置全局异常。</p>
<h3 id="3-3-创建视图页面"><a href="#3-3-创建视图页面" class="headerlink" title="3.3 创建视图页面"></a>3.3 创建视图页面</h3><p>本次模拟实现一个简单的登录操作，登录页面【loginPage.jsp】：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">"$&#123;pageContext.request.contextPath&#125;"</span> /&gt;</span><br><span class="line">    &lt;title&gt;用户登录页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">"/userns/login.do"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    用户名：&lt;input type=<span class="string">"text"</span> name=<span class="string">"userInfo.userName"</span>&gt; &lt;br&gt;</span><br><span class="line">    密码：&lt;input type=<span class="string">"text"</span> name=<span class="string">"userInfo.password"</span>&gt; &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"登录"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>登录成功的页面：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;用户登录后的主页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">当前登录用户：$&#123;sessionScope.current_user&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-4-登录验证演示"><a href="#3-4-登录验证演示" class="headerlink" title="3.4 登录验证演示"></a>3.4 登录验证演示</h3><p>登录页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/struts2.2020-03-14_215832.png" alt="loginPage"></p>
<p>登录成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/struts2.2020-03-14_215904.png" alt="login success"></p>
<h3 id="3-5-异常处理"><a href="#3-5-异常处理" class="headerlink" title="3.5 异常处理"></a>3.5 异常处理</h3><p>异常有系统异常和业务异常。</p>
<p>若是系统异常，对应的错误页面【errorPage.jsp】：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;这是错误页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    系统出现异常。</span><br><span class="line">    &lt;s:debug&gt;&lt;/s:debug&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>业务异常的错误页面【businessExPage.jsp】：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;业务异常页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    这是业务异常页面。&lt;br&gt;</span><br><span class="line">异常信息：$&#123;exception.message&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>struts.xml 全局异常配置改为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"basepkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">abstract</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置全局视图--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">global-results</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">type</span>=<span class="string">"redirect"</span> <span class="attr">name</span>=<span class="string">"login"</span>&gt;</span>/loginPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"error"</span>&gt;</span>/errorPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"businessEx"</span>&gt;</span>/businessExPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">global-results</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置全局异常--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exception-mapping</span> <span class="attr">exception</span>=<span class="string">"java.lang.Exception"</span> <span class="attr">result</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exception-mapping</span> <span class="attr">exception</span>=<span class="string">"com.nice.core.common.ex.BusinessException"</span> <span class="attr">result</span>=<span class="string">"businessEx"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>登录页面输入错误的用户和密码，上面的【UserAction】类中在逻辑中是直接 <code>throw new UserException(&quot;用户登录异常&quot;);</code>，因此会抛出一个业务异常：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/struts2.2020-03-14_230637.png" alt="异常页面"></p>
<h2 id="三、Struts2-拦截器"><a href="#三、Struts2-拦截器" class="headerlink" title="三、Struts2 拦截器"></a>三、Struts2 拦截器</h2><h3 id="3-1-自定义拦截器类"><a href="#3-1-自定义拦截器类" class="headerlink" title="3.1 自定义拦截器类"></a>3.1 自定义拦截器类</h3><p>拦截器分成两种：</p>
<ul>
<li>类拦截器：AbstractInterceptor</li>
<li>方法拦截器：MethodFilterInterceptor</li>
</ul>
<br>

<p>下面做一个小实例用来控制登录拦截，如果需要登录的页面则进行拦截（判断是否登录，没有登录则跳转到登录页）。</p>
<p>自定义类拦截器【TheClassInteceptor】如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.common.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nice.core.common.action.BaseAction;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.Action;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionInvocation;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.interceptor.AbstractInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TheClassInteceptor</span> <span class="keyword">extends</span> <span class="title">AbstractInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">intercept</span><span class="params">(ActionInvocation actionInvocation)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"TheClassInteceptor intercept start"</span>);</span><br><span class="line"></span><br><span class="line">        Object action = actionInvocation.getAction();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"actionInvocation.getAction()="</span>+action);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当前登录用户的 session</span></span><br><span class="line">        Object sessionObj = actionInvocation.getInvocationContext().getSession().get(BaseAction.CURRENT_USER);</span><br><span class="line"></span><br><span class="line">        System.out.println(BaseAction.CURRENT_USER+<span class="string">" session ="</span>+sessionObj);</span><br><span class="line"></span><br><span class="line">        String result=Action.LOGIN;</span><br><span class="line">        <span class="keyword">if</span>(sessionObj!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            result=actionInvocation.invoke();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义方法拦截器【TheMethodInterceptor】如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.common.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nice.core.common.action.BaseAction;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.Action;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionInvocation;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.interceptor.MethodFilterInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方法拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TheMethodInterceptor</span> <span class="keyword">extends</span> <span class="title">MethodFilterInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">doIntercept</span><span class="params">(ActionInvocation actionInvocation)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"TheMethodInterceptor doIntercept start"</span>);</span><br><span class="line"></span><br><span class="line">        Object action = actionInvocation.getAction();</span><br><span class="line">        System.out.println(<span class="string">"actionInvocation.getAction()="</span>+action);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当前登录用户的 session</span></span><br><span class="line">        Object sessionObj = actionInvocation.getInvocationContext().getSession().get(BaseAction.CURRENT_USER);</span><br><span class="line"></span><br><span class="line">        System.out.println(BaseAction.CURRENT_USER+<span class="string">" session ="</span>+sessionObj);</span><br><span class="line"></span><br><span class="line">        String result= Action.LOGIN;</span><br><span class="line">        <span class="keyword">if</span>(sessionObj!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            result=actionInvocation.invoke();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-拦截器配置"><a href="#3-2-拦截器配置" class="headerlink" title="3.2 拦截器配置"></a>3.2 拦截器配置</h3><p>自定义的拦截器写好了还要在【struts.xml】中进行配置。</p>
<p>Struts2 默认内置了很多拦截器，配置在【struts-default.xml】中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">class</span>=<span class="string">"com.opensymphony.xwork2.interceptor.AliasInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"autowiring"</span> <span class="attr">class</span>=<span class="string">"com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"chain"</span> <span class="attr">class</span>=<span class="string">"com.opensymphony.xwork2.interceptor.ChainingInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"conversionError"</span> <span class="attr">class</span>=<span class="string">"org.apache.struts2.interceptor.StrutsConversionErrorInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"cookie"</span> <span class="attr">class</span>=<span class="string">"org.apache.struts2.interceptor.CookieInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"cookieProvider"</span> <span class="attr">class</span>=<span class="string">"org.apache.struts2.interceptor.CookieProviderInterceptor"</span>/&gt;</span></span><br><span class="line">            ...</span><br><span class="line"></span><br><span class="line">             <span class="comment">&lt;!-- Basic stack --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"basicStack"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"exception"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"servletConfig"</span>/&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Sample validation and workflow stack --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"validationWorkflowStack"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"basicStack"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"validation"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"workflow"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在配置自定义拦截器时会覆盖默认使用内置的拦截器，因此应先引用原默认拦截器【defaultStack】：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册自定义拦截器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"loginInterceptor"</span> <span class="attr">class</span>=<span class="string">"com.nice.core.common.interceptor.TheMethodInterceptor"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置一个拦截栈--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"loginStack"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"loginInterceptor"</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"excludeMethods"</span>&gt;</span>login<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置所有子包都默认使用的拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-interceptor-ref</span> <span class="attr">name</span>=<span class="string">"loginStack"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>上面配置了全局的登录拦截，排除的方法【excludeMethods】为【login】，因此在进入其他页面时会被拦截判断是否登录。</p>
<h3 id="3-3-拦截器效果演示"><a href="#3-3-拦截器效果演示" class="headerlink" title="3.3 拦截器效果演示"></a>3.3 拦截器效果演示</h3><p>在用户模块新增一个页面用于新增用户，【UserAction】中添加方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟新增</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.msg=<span class="string">"新增页面"</span>;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接通过地址【/userns/add.do】访问会这个页面会进入自定义的拦截器【TheMethodInterceptor】方法【doIntercept】中，拿不到登录 session，后台打印日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TheMethodInterceptor doIntercept start</span><br><span class="line">actionInvocation.getAction()=com.nice.core.user.action.UserAction@556479a2</span><br><span class="line">current_user session =null</span><br></pre></td></tr></table></figure>

<p>页面跳转到登录页面，先登录再访问这个新增页面就会放行，新增页面就能访问到</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/struts2.2020-03-15_122159.png" alt="用户新增页面"></p>
]]></content>
      <categories>
        <category>Java框架</category>
      </categories>
      <tags>
        <tag>struts2</tag>
        <tag>java框架</tag>
      </tags>
  </entry>
  <entry>
    <title>sql server 附加的数据库变成只读解决</title>
    <url>/p/sqlserver-attach-problem/</url>
    <content><![CDATA[<p>本次操作的数据库是 SQL Server 2016，其他版本的类似。</p>
<h2 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h2><p>将云服务器中的数据库分离之后再附加到另外一台服务器上，数据库显示只读状态。</p>
<h2 id="二、问题解决"><a href="#二、问题解决" class="headerlink" title="二、问题解决"></a>二、问题解决</h2><h3 id="2-1-解决方案一"><a href="#2-1-解决方案一" class="headerlink" title="2.1 解决方案一"></a>2.1 解决方案一</h3><p>将数据库再分离，然后使用 windows 内置账户登录再附加就可以了。</p>
<h3 id="2-1-解决方案二"><a href="#2-1-解决方案二" class="headerlink" title="2.1 解决方案二"></a>2.1 解决方案二</h3><p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_231712.png" alt="只读设置"></p>
<p>右键数据库，进入属性，选择状态页，将【数据库为只读】设为 False：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_231945.png" alt="只读"></p>
<p>如果没有成功，报如下错误：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_232420.png" alt="2324"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">标题: Microsoft SQL Server Management Studio</span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">数据库 &quot;kwdb&quot; 的 更改 失败。  (Microsoft.SqlServer.Smo)</span><br><span class="line"></span><br><span class="line">有关帮助信息，请单击: http:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink?ProdName&#x3D;Microsoft+SQL+Server&amp;ProdVer&#x3D;14.0.17289.0+((SSMS_Rel_17_4).181117-0805)&amp;EvtSrc&#x3D;Microsoft.SqlServer.Management.Smo.ExceptionTemplates.FailedOperationExceptionText&amp;EvtID&#x3D;更改+Database&amp;LinkId&#x3D;20476</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line">其他信息:</span><br><span class="line"></span><br><span class="line">执行 Transact-SQL 语句或批处理时发生了异常。 (Microsoft.SqlServer.ConnectionInfo)</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">无法打开物理文件“C:\Special\DB\kwdb.mdf”。操作系统错误 5:“5(拒绝访问。)”。</span><br><span class="line">无法打开物理文件“C:\Special\DB\kwdb_log.ldf”。操作系统错误 5:“5(拒绝访问。)”。</span><br><span class="line">无法重新启动数据库“kwdb”。将恢复到以前的状态。</span><br><span class="line">ALTER DATABASE 语句失败。</span><br><span class="line">正在回滚不合法事务。估计回滚已完成: 0%。</span><br><span class="line">正在回滚不合法事务。估计回滚已完成: 100%。 (Microsoft SQL Server，错误: 5120)</span><br><span class="line"></span><br><span class="line">有关帮助信息，请单击: http:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink?ProdName&#x3D;Microsoft%20SQL%20Server&amp;ProdVer&#x3D;13.00.1601&amp;EvtSrc&#x3D;MSSQLServer&amp;EvtID&#x3D;5120&amp;LinkId&#x3D;20476</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line">按钮:</span><br><span class="line"></span><br><span class="line">确定</span><br><span class="line">------------------------------</span><br></pre></td></tr></table></figure>

<p>查看数据库文件属性：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_232733.png" alt="2327"></p>
<p>当前登录的用户 Administrator 其实是对文件有完全控制权限，但是登录的数据库账户是 sa，所以就没有这种权限。</p>
<p>如果是内置账户登录再附加数据库是可以的，所以方案一是可行的。</p>
<p>如果仍使用 sa 登录，则需要添加一个【Network Service】账户完全控制权限，可尝试一下，如果还不行，建议采用方案一。</p>
<p>具体操作如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_233536.png" alt="2351"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_233553.png" alt="2352"></p>
<p>分离再重新附加。</p>
]]></content>
      <categories>
        <category>数据库</category>
        <category>SQL Server</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
        <tag>数据库附加</tag>
      </tags>
  </entry>
  <entry>
    <title>vs code 中使用这些插件让编写 markdown 变得更方便</title>
    <url>/p/vscode-markdown-plugin/</url>
    <content><![CDATA[<h2 id="一、Markdown-Preview-Enhanced"><a href="#一、Markdown-Preview-Enhanced" class="headerlink" title="一、Markdown Preview Enhanced"></a>一、Markdown Preview Enhanced</h2><p>Markdown Preview Enhanced 应该是 vs code 的 markdown 插件中最全也是最强大的一个。</p>
<p>以下简称 MPE。</p>
<h3 id="1-1-导入外部文件"><a href="#1-1-导入外部文件" class="headerlink" title="1.1 导入外部文件"></a>1.1 导入外部文件</h3><p>语法 ：<code>@import &quot;你的文件&quot;</code></p>
<p>如导入一张图片：<code>@import &quot;content/yun_bg.jpg&quot;</code></p>
<p>如果引入图片类型的文件，不建议这样使用，因为其它很多插件不支持这个语法，建议使用 markdown 通用导入图片的语法：<code>![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code>，如本图片可使用语法：<code>![mpe.2020011101](content/yun_bg.jpg)</code>。</p>
<p>还可以在导入图片的时候设置图片的基本信息，语法：<code>@import &quot;test.png&quot; {width=&quot;300px&quot; height=&quot;200px&quot; title=&quot;图片的标题&quot; alt=&quot;我的 alt&quot;}</code></p>
<p>该语法功能很强大，详细可移步下面的参考文献的 <code>[Markdown Preview Enhanced]-[导入外部文件]</code> 模块。</p>
<h3 id="1-2-目录列表"><a href="#1-2-目录列表" class="headerlink" title="1.2 目录列表"></a>1.2 目录列表</h3><p>MPE 可支持在 markdown 文件中创建目录（TOC）。</p>
<p>在需要插入目录的地方使用 <code>[TOC]</code> 即可，但是这种方式只会在预览中显示，而不会修改 markdown 文件本身，不建议这样使用，因为使用其他的插件就不起作用了。</p>
<p>在 vs code 中使用快捷键【Ctrl+Shit+P】来创建目录，会生成如下一串代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- @import &quot;[TOC]&quot; &#123;cmd&#x3D;&quot;toc&quot; depthFrom&#x3D;1 depthTo&#x3D;6 orderedList&#x3D;false&#125; --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- code_chunk_output --&gt;</span><br><span class="line"></span><br><span class="line">- [一、Markdown Preview Enhanced](#一-markdown-preview-enhanced)</span><br><span class="line">  - [1.1 导入外部文件](#11-导入外部文件)</span><br><span class="line">  - [1.2 目录列表](#12-目录列表)</span><br><span class="line">  - [1.R 参考文献](#1r-参考文献)</span><br><span class="line"></span><br><span class="line">&lt;!-- &#x2F;code_chunk_output --&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>orderlist 表示是否使用有序列表，若改为 true，则会加上标号，生成目录范例如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 一、Markdown Preview Enhanced</span><br><span class="line">	1. 1.1 导入外部文件</span><br><span class="line">	2. 1.2 目录列表</span><br><span class="line">	3. R 参考文献&#96;</span><br><span class="line">2. 二、other</span><br></pre></td></tr></table></figure>
<p>如果标题本身加了序号就没必要设为 true，不然太难看了。</p>
<ul>
<li>depthFrom=1 和 depthTo=6 表示<code>[1~6]</code>包含的</li>
<li>ignoreLink=true 表示在目录中不会被显示成超链接</li>
<li>若需要排除一个目录则只需要在标题后面添加 <code>{ignore=true}</code> 即可。</li>
</ul>
<h3 id="1-3-Code-Chunk"><a href="#1-3-Code-Chunk" class="headerlink" title="1.3 Code Chunk"></a>1.3 Code Chunk</h3><p>MPE 支持渲染代码的运行结果，默认是禁用的，开启可能会造成一些安全问题。</p>
<h3 id="1-4-文档导出"><a href="#1-4-文档导出" class="headerlink" title="1.4 文档导出"></a>1.4 文档导出</h3><p>预览的界面中右键，就可以看到有多种格式的文档导出。</p>
<h3 id="1-5-Save-as-Mardkown"><a href="#1-5-Save-as-Mardkown" class="headerlink" title="1.5 Save as Mardkown"></a>1.5 Save as Mardkown</h3><p>MPE 支持编译到 GitHub Flavored Markdown。这么做是为了使导出的 markdown 文件可以包含所有的绘制的图形（为 png 图片），code chunks，以及数学表达式（图片形式）等等以方便于发布到 GitHub。</p>
<h3 id="1-6-定制与扩展"><a href="#1-6-定制与扩展" class="headerlink" title="1.6 定制与扩展"></a>1.6 定制与扩展</h3><p>MPE 支持很多扩展。</p>
<h4 id="1-6-1-定制-css"><a href="#1-6-1-定制-css" class="headerlink" title="1.6.1 定制 css"></a>1.6.1 定制 css</h4><p>MPE 支持自定义样式。</p>
<p>使用快捷键【Ctrl+Shift+P】,然后运行【Markdown Preview Enhanced: Customize Css】，就可以打开【style.css】文件，然后就可以编写自己的样式了。</p>
<h4 id="1-6-2-扩展-Markdown-Parser"><a href="#1-6-2-扩展-Markdown-Parser" class="headerlink" title="1.6.2 扩展 Markdown Parser"></a>1.6.2 扩展 Markdown Parser</h4><p>运行 Markdown Preview Enhanced: Extend Parser 命令可以打开 parseer.js 文件。</p>
<p>默认的 parser.js 内容：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  onWillParseMarkdown: <span class="function"><span class="keyword">function</span>(<span class="params">markdown</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> resolve(markdown)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  onDidParseMarkdown: <span class="function"><span class="keyword">function</span>(<span class="params">html</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> resolve(html)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以针对 markdown 文件中的内容进行处理，如替换信息，这个功能非常有用，如发布一篇文章需要添加作者和时间信息，就可以在需要展示作者和时间的地方用一个固定的字符串占位，在解析时将其替换即可，如设置字符串为 <code>[ArticlePostInfo]</code>，修改 parser.js ：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  onWillParseMarkdown: <span class="function"><span class="keyword">function</span>(<span class="params">markdown</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">      <span class="keyword">var</span> showDateTime=myDate.toLocaleString();</span><br><span class="line">      markdown = markdown.replace(<span class="string">"[ArticlePostInfo]"</span>,<span class="string">"&lt;div style=\"text-align:right\"&gt;&lt;i&gt; kwan post "</span>+showDateTime+<span class="string">"&lt;/i&gt;&lt;/div&gt;"</span>);</span><br><span class="line">      <span class="keyword">return</span> resolve(markdown);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  onDidParseMarkdown: <span class="function"><span class="keyword">function</span>(<span class="params">html</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> resolve(html)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此次在文章顶部设置这个占位字符串，在解析时就会把该字符串内容解析成处理的信息，如 <code>kwan post 2020/1/12 下午4:13:28</code>，显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14_004826.png" alt="20200514004843"></p>
<p>添加 <code>markdown = markdown.replace(&quot;[RtnDocTop]&quot;,&quot;&lt;button onclick=\&quot;javascript:document.body.scrollTop = 0;document.documentElement.scrollTop = 0;\&quot; id=\&quot;btnRtnTop\&quot;&gt;返回顶部&lt;/button&gt;&quot;);</code> 可实现从底部返回顶部。</p>
<h4 id="1-6-3-图片助手"><a href="#1-6-3-图片助手" class="headerlink" title="1.6.3 图片助手"></a>1.6.3 图片助手</h4><p>在预览页面中右键点击【Image Helper】，如果是本地上传，使用【Upload】：</p>
<p><img src="content/mpe.2020011104.png" alt="Alt text"></p>
<p>经测试本地上传失败，会插入<code>![Uploading mpe.2020011104.png… (k5yacxgq2)]()</code>，插件并没有解析它。</p>
<p>Link 可以，输入图片地址，按 Enter 就会自动插入标签：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![enter image description here](http:&#x2F;&#x2F;www.kungge.com&#x2F;NewContent&#x2F;img&#x2F;yun_bg.jpg)</span><br></pre></td></tr></table></figure>
<h4 id="1-7-Markdown-基本要素"><a href="#1-7-Markdown-基本要素" class="headerlink" title="1.7 Markdown 基本要素"></a>1.7 Markdown 基本要素</h4><p>Markdown 基本通用语法在此不作介绍，只是介绍下 MPE 的特性。</p>
<h4 id="1-7-1-给标题添加-id-或者-class"><a href="#1-7-1-给标题添加-id-或者-class" class="headerlink" title="1.7.1 给标题添加 id 或者 class"></a>1.7.1 给标题添加 id 或者 class</h4><p>给标题添加 id 或者 class，在标题后添加 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#123;#id .class1 .class2&#125;&#96;</span><br></pre></td></tr></table></figure>

<p>如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#### 1.7.1 此标题有1个 id &#123;#theId&#125;</span><br><span class="line">#### 1.7.2 此标题有2个 class &#123;.class1 .class2&#125;</span><br></pre></td></tr></table></figure>

<h4 id="1-7-2-强调"><a href="#1-7-2-强调" class="headerlink" title="1.7.2 强调"></a>1.7.2 强调</h4><p>文字加上横线删除，使用： <code>~~删除的文字~~</code></p>
<p><del>被横线删除</del></p>
<h4 id="1-7-3-超链接"><a href="#1-7-3-超链接" class="headerlink" title="1.7.3 超链接"></a>1.7.3 超链接</h4><p>直接使用链接如 <code>http://www.kungge.com</code>，MPE 会直接渲染成 <code>&lt;a href=&quot;http://www.kungge.com&quot;&gt;</code></p>
<p><a href="http://www.kungge.com" target="_blank" rel="noopener">http://www.kungge.com</a></p>
<h4 id="1-7-4-代码块-class"><a href="#1-7-4-代码块-class" class="headerlink" title="1.7.4 代码块 class"></a>1.7.4 代码块 class</h4><p>使用语法：<code>java {.class1 .class2}</code></p>
<h4 id="1-7-5-代码块显示行号"><a href="#1-7-5-代码块显示行号" class="headerlink" title="1.7.5 代码块显示行号"></a>1.7.5 代码块显示行号</h4><p><code>java .{line-numbers}</code></p>
<h4 id="1-7-6-高亮代码行数"><a href="#1-7-6-高亮代码行数" class="headerlink" title="1.7.6 高亮代码行数"></a>1.7.6 高亮代码行数</h4><p>使用<code>{heighlight=5}</code> 或 <code>{heighlight=[5,10,16-18]}</code></p>
<h4 id="1-8-扩展语法"><a href="#1-8-扩展语法" class="headerlink" title="1.8 扩展语法"></a>1.8 扩展语法</h4><h4 id="1-8-1-表格"><a href="#1-8-1-表格" class="headerlink" title="1.8.1 表格"></a>1.8.1 表格</h4><p>合并表格的单元格需要启用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/mpe.2020011103.png" alt="Alt text"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202001/mpe.2020011102.png" alt="Alt text"></p>
<p>colspan <code>&gt;</code> or empty cell：</p>
<table>
<thead>
<tr>
<th>col1</th>
<th>col2</th>
</tr>
</thead>
<tbody><tr>
<td>&gt;</td>
<td>r1c2</td>
</tr>
<tr>
<td>r2c1</td>
<td></td>
</tr>
</tbody></table>
<p>rowspan  <code>^</code> :</p>
<table>
<thead>
<tr>
<th>col1</th>
<th>col2</th>
</tr>
</thead>
<tbody><tr>
<td>r1c1</td>
<td>r1c2</td>
</tr>
<tr>
<td>^</td>
<td>r2c2</td>
</tr>
</tbody></table>
<h4 id="1-8-2-Emoji-amp-Font-Awesome"><a href="#1-8-2-Emoji-amp-Font-Awesome" class="headerlink" title="1.8.2 Emoji &amp; Font-Awesome"></a>1.8.2 Emoji &amp; Font-Awesome</h4><blockquote>
<p>只适用于 markdown-it parser 而不适用于 pandoc parser。 缺省下是启用的。你可以在插件设置里禁用此功能。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">笑脸：:smile:</span><br><span class="line">车：:fa-car:</span><br></pre></td></tr></table></figure>
<h4 id="1-8-3-上标和小标"><a href="#1-8-3-上标和小标" class="headerlink" title="1.8.3 上标和小标"></a>1.8.3 上标和小标</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">上标：2^n^</span><br><span class="line">下标：H~2~O</span><br></pre></td></tr></table></figure>

<h4 id="1-8-4-脚注"><a href="#1-8-4-脚注" class="headerlink" title="1.8.4 脚注"></a>1.8.4 脚注</h4><p>变化无穷，各有所归[^1]。<br>古之大化[^2]着，乃与无形俱剩。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[^1]: 所归：归属，指不同表现。</span><br><span class="line">[^2]: 化：教化。</span><br></pre></td></tr></table></figure>

<h4 id="1-8-5-标记"><a href="#1-8-5-标记" class="headerlink" title="1.8.5 标记"></a>1.8.5 标记</h4><p>语法：<code>==标记的内容==</code>，如：</p>
<p>==标记的内容==</p>
<h2 id="二、Markdown-Shortcuts"><a href="#二、Markdown-Shortcuts" class="headerlink" title="二、Markdown Shortcuts"></a>二、Markdown Shortcuts</h2><p>MPE 很强大，但是在编写 markdown 却有点不方便，比如插入图片，插入超链接等，需要手写，如有快捷键之类或快捷字符那就方便多了，就像在 sublime 中使用插件时插入图片使用 <code>mdi+tab</code>，就会默认插入图片标签：<code>![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code>，插入超链接时使用 <code>mdl+tab</code>，插入<code>[](link)</code> 即可。</p>
<p>在 vs code 中也有类似的插件，本次介绍【Markdown Shortcuts】，可以通过快捷键或者鼠标右键来插入需要的标签内容。</p>
<h2 id="2-1-可操作的标签"><a href="#2-1-可操作的标签" class="headerlink" title="2.1 可操作的标签"></a>2.1 可操作的标签</h2><p>右键默认支持的内容：</p>
<ul>
<li>Toggle bold：空白处插入一个粗体标签<code>****</code>，选择文字将文字变成粗体，快捷键【Ctrl+B】</li>
<li>Toggle code block：空白处插入一个代码块标签 <code>&quot;``````&quot;</code>，选择文字将文字用代码块包含，快捷键【Ctrl+M Ctrl+C】</li>
<li>Toggle hyperlink：空白处插入会要求输入 alt text 和连接然后会生成一个超链接标签，选择文字后只需要输入连接即可，快捷键【Ctrl+L】</li>
<li>Toggle inline code：空白处插入一个行内代码块标签 <code>&quot;``&quot;</code>，选择文字会用行内代码标签包含，快捷键【Ctrl+M Ctrl+I】</li>
<li>Toggle italic：插入一个斜体标签，需要选择文字，快捷键【Ctrl+I】</li>
<li>Toggle bullet points：空白处插入一个列表项标签 <code>*</code>，选择多行文字会转成列表，快捷键【Ctrl+M Ctrl+B】</li>
<li>Toggle checkboxes：空白处插入一个多选框标签 <code>- [ ]</code>，选择多行文字会将其变成多个复选框，快捷键【Ctrl+M Ctrl+X】</li>
<li>Toggle number list：空白处插入一个有序列表项标签 <code>1.</code> ，选择多行文字会转成有序列表，快捷键【Ctrl+M Ctrl+1】</li>
<li>Add table：空白处插入一个表格标签</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Column A | Column B | Column C</span><br><span class="line">---------|----------|---------</span><br><span class="line"> A1 | B1 | C1</span><br><span class="line"> A2 | B2 | C2</span><br><span class="line"> A3 | B3 | C3</span><br></pre></td></tr></table></figure>
<ul>
<li>Add table with header：直接空白处会插入一个带表头的表格标签，选择一段有空格整齐文字时，会自动变为表格</li>
<li>Toggle image：插入一个图片标签 <code>![altText](content/abc.jpg)</code>，快捷键【Ctrl+Shift+L】</li>
<li>Toggle citations：插入一个引用标签 <code>&gt;</code></li>
</ul>
<p>像<code>行内代码</code>、列表、有序列表可以手写，比较简单，如果是要将文字转成列表就比较方便了。</p>
<p><strong>table</strong> 和 代码块比较多，有快捷操作会方便很多。</p>
<ul>
<li><input disabled="" type="checkbox"> 牛奶</li>
<li><input disabled="" type="checkbox"> 咖啡</li>
<li><input disabled="" type="checkbox"> 豆奶</li>
</ul>
<h2 id="三、markdownlint"><a href="#三、markdownlint" class="headerlink" title="三、markdownlint"></a>三、markdownlint</h2><p>用于检查 markdown 使用不合理的插件。</p>
<h2 id="四、Markdown-Theme-Kit"><a href="#四、Markdown-Theme-Kit" class="headerlink" title="四、Markdown Theme Kit"></a>四、Markdown Theme Kit</h2><p>为 vs code 提供主题，目前提供了4种主题：</p>
<ul>
<li>Markdown Editor</li>
<li>Markdown Editor Dark</li>
<li>Markdown Editor Focus</li>
<li>Markdown Editor Yellow</li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
        <category>编辑器</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>编辑器</tag>
        <tag>vs code</tag>
        <tag>vs code插件</tag>
      </tags>
  </entry>
  <entry>
    <title>vs code 添加 markdown 自定义代码片段</title>
    <url>/p/vscode-snippet-markdown/</url>
    <content><![CDATA[<p>visual studio code 编辑器支持添加用户自定义代码片段，而且可以根据文件类型来添加，本次以 markdown 为例进行介绍，其它语言类似。</p>
<h2 id="一、如何添加？"><a href="#一、如何添加？" class="headerlink" title="一、如何添加？"></a>一、如何添加？</h2><p>菜单 File -&gt; Preferences -&gt; User Snippets：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_162550.png" alt="1630"></p>
<p>然后选择文件类型，如本次选择 Markdown：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_163319.png" alt="1634"></p>
<p>会打开 markdown.json 配置文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_163526.png" alt="1635"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="comment">// Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and </span></span><br><span class="line">	<span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line">	<span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the </span></span><br><span class="line">	<span class="comment">// same ids are connected.</span></span><br><span class="line">	<span class="comment">// Example:</span></span><br><span class="line">	<span class="comment">// "Print to console": &#123;</span></span><br><span class="line">	<span class="comment">// 	"prefix": "log",</span></span><br><span class="line">	<span class="comment">// 	"body": [</span></span><br><span class="line">	<span class="comment">// 		"console.log('$1');",</span></span><br><span class="line">	<span class="comment">// 		"$2"</span></span><br><span class="line">	<span class="comment">// 	],</span></span><br><span class="line">	<span class="comment">// 	"description": "Log output to console"</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二、配置文件介绍"><a href="#二、配置文件介绍" class="headerlink" title="二、配置文件介绍"></a>二、配置文件介绍</h2><p>josn 配置文件由3部分组成：</p>
<ul>
<li>prefix：触发代码片段的字符</li>
<li>body：代码块内容，光标首次为【<code>$1</code>】，按 tab 键切换到第2次为【<code>$2</code>】，依次类推</li>
<li>description：代码块描述，会在快捷键右侧注释的地方显示</li>
</ul>
<h2 id="三、body-内容语法介绍"><a href="#三、body-内容语法介绍" class="headerlink" title="三、body 内容语法介绍"></a>三、body 内容语法介绍</h2><p>body 内容可以携带参数：</p>
<ul>
<li>光标：语法 <code>$number</code> </li>
<li>光标添加可选值：<code>$number</code> 后面可以跟可选的值，语法 <code>${number | a,b,c,...}</code>，【a、b、c】就是可选的项， 范例如 <code>{$1 | a1,a2}</code> 表示第1个光标位置，候选值为zan【a1】和【a2】，如果只有一个默认值，可以写成 <code>${1:default}</code>，还支持嵌套模式，如 <code>${1:a1 ${2: b1}}</code></li>
<li>变量：可以插入变量值，语法 <code>$variable</code>，可以有默认值 <code>${variable:default}</code></li>
</ul>
<p>vs code 提供很多变量供使用，如文本或文件相关：</p>
<table>
<thead>
<tr>
<th>变量名</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>TM_SELECTED_TEXT</td>
<td>当前选定的文本或空字符串</td>
</tr>
<tr>
<td>TM_CURRENT_LINE</td>
<td>当前行的内容</td>
</tr>
<tr>
<td>TM_CURRENT_WORD</td>
<td>光标所处单词或空字符串</td>
</tr>
<tr>
<td>TM_LINE_INDEX</td>
<td>行号（从零开始）</td>
</tr>
<tr>
<td>TM_LINE_NUMBER</td>
<td>行号（从一开始）</td>
</tr>
<tr>
<td>TM_FILENAME</td>
<td>当前文档的文件名（含后缀名）</td>
</tr>
<tr>
<td>TM_FILENAME_BASE</td>
<td>当前文档的文件名（不含后缀名）</td>
</tr>
<tr>
<td>TM_DIRECTORY</td>
<td>当前文档所在目录</td>
</tr>
<tr>
<td>TM_FILEPATH</td>
<td>当前文档的完整文件路径</td>
</tr>
<tr>
<td>CLIPBOARD</td>
<td>当前剪贴板中内容</td>
</tr>
</tbody></table>
<p>日期时间相关：</p>
<table>
<thead>
<tr>
<th>变量名</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>CURRENT_YEAR</td>
<td>当前年份</td>
</tr>
<tr>
<td>CURRENT_YEAR_SHORT</td>
<td>当前年份的后两位</td>
</tr>
<tr>
<td>CURRENT_MONTH</td>
<td>格式化为两位数字的当前月份，如</td>
</tr>
<tr>
<td>CURRENT_MONTH_NAME</td>
<td>当前月份的全称，如</td>
</tr>
<tr>
<td>CURRENT_MONTH_NAME_SHORT</td>
<td>当前月份的简称，如</td>
</tr>
<tr>
<td>CURRENT_DATE</td>
<td>当天月份第几天</td>
</tr>
<tr>
<td>CURRENT_DAY_NAME</td>
<td>当天周几，如</td>
</tr>
<tr>
<td>CURRENT_DAY_NAME_SHORT</td>
<td>当天周几的简称，如</td>
</tr>
<tr>
<td>CURRENT_HOUR</td>
<td>当前小时（24</td>
</tr>
<tr>
<td>CURRENT_MINUTE</td>
<td>当前分钟</td>
</tr>
<tr>
<td>CURRENT_SECOND</td>
<td>当前秒数</td>
</tr>
</tbody></table>
<p>若想将语法关键字当做普通字符使用则需要使用转义字符【\】（反斜杠）进行转义。</p>
<h2 id="四、代码片段范例"><a href="#四、代码片段范例" class="headerlink" title="四、代码片段范例"></a>四、代码片段范例</h2><p>像主流的语言如 java、c#、c++可以直接提示，但是 markdown 默认是不能提示的，需要额外设置，快捷键【Ctrl+Shift+P】后，输入【settings】选择【Preferences: Open Settings(JSON)】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_175511.png" alt="1809"></p>
<p>然后添加：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"[markdown]":  &#123;</span><br><span class="line">	"editor.quickSuggestions": true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_175702.png" alt="1810"></p>
<p>markdown 代码片段配置：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="comment">// Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and </span></span><br><span class="line">	<span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line">	<span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the </span></span><br><span class="line">	<span class="comment">// same ids are connected.</span></span><br><span class="line">	<span class="comment">// Example:</span></span><br><span class="line">	<span class="attr">"mdInfo-template"</span>: &#123;</span><br><span class="line">		<span class="attr">"prefix"</span>: <span class="string">"mdBaseInfo"</span>,</span><br><span class="line">		<span class="attr">"body"</span>: [</span><br><span class="line">            <span class="string">"---"</span>,</span><br><span class="line">            <span class="string">"title: $&#123;1:标题&#125;"</span>,</span><br><span class="line">            <span class="string">"date: $&#123;CURRENT_YEAR&#125;-$&#123;CURRENT_MONTH&#125;-$&#123;CURRENT_DATE&#125; $&#123;CURRENT_HOUR&#125;:$&#123;CURRENT_MINUTE&#125;:$&#123;CURRENT_SECOND&#125;"</span>,</span><br><span class="line">            <span class="string">"tags: [$&#123;2:标签1,标签2&#125;]"</span>,</span><br><span class="line">            <span class="string">"categories: $&#123;3:类别&#125;"</span>,</span><br><span class="line">            <span class="string">"---"</span></span><br><span class="line">		],</span><br><span class="line">		<span class="attr">"description"</span>: <span class="string">"markdown 文章基本信息模板"</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>保存，在 markdown 文件中输入演示：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_180222.gif" alt="1804"></p>
<p>为了方便后来设置 hexo 头会这样使用：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"mdInfo-template": &#123;</span><br><span class="line">		"prefix": "mdBaseInfo",</span><br><span class="line">		"body": [</span><br><span class="line">			"---",</span><br><span class="line">			"title: $&#123;1: 标题&#125;",</span><br><span class="line">			"id: $&#123;CURRENT_YEAR&#125;-$&#123;CURRENT_MONTH&#125;-$&#123;CURRENT_DATE&#125;_$&#123;CURRENT_HOUR&#125;",</span><br><span class="line">			"date: $&#123;CURRENT_YEAR&#125;-$&#123;CURRENT_MONTH&#125;-$&#123;CURRENT_DATE&#125; $&#123;CURRENT_HOUR&#125;:$&#123;CURRENT_MINUTE&#125;:$&#123;CURRENT_SECOND&#125;",</span><br><span class="line">			"tags: [$&#123;2:标签1,标签2&#125;]",</span><br><span class="line">			"categories: $&#123;3:类别&#125;",</span><br><span class="line">			"---",</span><br><span class="line">			<span class="string">""</span></span><br><span class="line">		],</span><br><span class="line">		"description": "markdown 文章基本信息模板"</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>markdown 中经常使用图片，可以安装快捷键插件来快速插入一个图片但是感觉还不够好，有时候还要想一个名称，使用代码片段会更快，使用时间来生成名称，配置范例如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"mdImg-template": &#123;</span><br><span class="line">	"prefix": "mdImg",</span><br><span class="line">	"body": [</span><br><span class="line">		<span class="string">"![$&#123;CURRENT_YEAR&#125;$&#123;CURRENT_MONTH&#125;$&#123;CURRENT_DATE&#125;$&#123;CURRENT_HOUR&#125;$&#123;CURRENT_MINUTE&#125;$&#123;CURRENT_SECOND&#125;]($1)"</span></span><br><span class="line">	],</span><br><span class="line">	"description": "markdown 图片基本模板"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>演示：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-03_2059.gif" alt="20200503205902"></p>
<p>可能在工作中会编写表格，可以将表格框架写到代码片段中，如申请一个开发分支的简单的表格：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"jobBranchApply-template": &#123;</span><br><span class="line">		"prefix": "branchApply",</span><br><span class="line">		"body": [</span><br><span class="line">			"| 需求 | $1 |",</span><br><span class="line">			"|------|------|",</span><br><span class="line">			" 涉及程序 | ",</span><br><span class="line">			" 拥有人 | 万坤",</span><br><span class="line">			<span class="string">" 备注 | "</span></span><br><span class="line">		],</span><br><span class="line">		"description": "代码分支申请"</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14.applyBranch.gif" alt="20200514002457"></p>
<p>还有比如工作中会写一些固定格式的文档，如开发写的需求相关的提测文档，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-14.taskInfo.gif" alt="20200514003119"></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>编辑器</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>编辑器</tag>
        <tag>vs code</tag>
        <tag>代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>在 idea 中使用 maven 下载过慢问题解决</title>
    <url>/p/idea-maven-problem/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>maven 下载过慢：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-02_235005.png" alt="2350"></p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-02_234126.png" alt="2346"></p>
<p>找到 maven home 目录，修改文件 <code>conf\settings.xml</code>，将如下内容加入到 <code>&lt;mirrors&gt;</code> 节点中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阿里云仓库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/central<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- 中央仓库1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>repo1<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo1.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- 中央仓库2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>repo2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo2.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-02_235626.png" alt="2356"></p>
<p>速度快了很多。</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>包管理</category>
      </categories>
      <tags>
        <tag>问题记录</tag>
        <tag>包管理</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>nuget.org 温馨邮件提示 github 上出现 API key 暖心</title>
    <url>/p/nuget-nugetorg-email/</url>
    <content><![CDATA[<p>今天收到 nuget.org 邮件，标题【[NuGet Gallery] API key ‘APIKeysCreateKeyName’ revoked due to a potential leak】</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_143907.png" alt="nuget邮件"></p>
<p>内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hi kungge,</span><br><span class="line">This is your friendly NuGet security bot! It appears that an API key &#39;APIKeysCreateKeyName&#39; assoicated with your account was posted at GitHub. As a precautionary measure, we have revoked this key to protect your account and packages. Please review your packages for any unauthorized activity.</span><br><span class="line">Your key was found here: https:&#x2F;&#x2F;github.com&#x2F;Ants-double&#x2F;huanhuncao&#x2F;blob&#x2F;68baf96585872db6a50d044bbb5dc8f63a5fc753&#x2F;nexus%20nuget%20npm&#x2F;%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%8A%8A%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E5%88%B0Nuget%E4%BB%93%E5%BA%93%E4%B8%AD%E5%BF%83.md</span><br><span class="line">In the future, please be mindful of accidentally posting your API keys publicly!</span><br><span class="line">You can regenerate this key or create a new one on the Manage API Keys page.</span><br><span class="line">Here are the recommended ways to manage API keys:</span><br><span class="line">•	Save the API key into a local NuGet.Config using the NuGet CLI. This file should NOT be checked-in to version control or GitHub;</span><br><span class="line">•	Use environment variables to set and access API keys.</span><br><span class="line">•	Use GitHub encrypted secrets to store and access API keys.</span><br><span class="line">Need help? Reply to this email or contact support.</span><br><span class="line">Thanks,</span><br><span class="line">The NuGet Gallery Team</span><br><span class="line"></span><br><span class="line">Privacy Statement</span><br><span class="line">Microsoft Corporation</span><br><span class="line">One Microsoft Way</span><br><span class="line">Redmond, WA 98052 USA</span><br></pre></td></tr></table></figure>

<p>将邮件中提到的网址【<a href="https://github.com/Ants-double/huanhuncao/blob/68baf96585872db6a50d044bbb5dc8f63a5fc753/nexus%20nuget%20npm/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%8A%8A%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E5%88%B0Nuget%E4%BB%93%E5%BA%93%E4%B8%AD%E5%BF%83.md】点进去查看：" target="_blank" rel="noopener">https://github.com/Ants-double/huanhuncao/blob/68baf96585872db6a50d044bbb5dc8f63a5fc753/nexus%20nuget%20npm/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%8A%8A%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E5%88%B0Nuget%E4%BB%93%E5%BA%93%E4%B8%AD%E5%BF%83.md】点进去查看：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_143510.png" alt="github一地址"></p>
<p>这是啥情况？？？</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>包管理</tag>
        <tag>nugut</tag>
        <tag>nuget.org</tag>
      </tags>
  </entry>
  <entry>
    <title>NuGet 打包并发布到私仓 ProGet</title>
    <url>/p/nuget-proget/</url>
    <content><![CDATA[<h2 id="创建包"><a href="#创建包" class="headerlink" title="创建包"></a>创建包</h2><p>使用工具【PackageExplorer.4.4.25】。</p>
<p>打开【NuGetPackageExplorer】如果需要新增一个 package，点击【Create a new package】</p>
<p>右边是一个空白页，右键 【Add Lib Folder】</p>
<p>然后 【Add .Net Folder】：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201911/nuget_2019-11-28_141057.png" alt="nuget_2019-11-28_141057" title="nuget_2019-11-28_141057.png"></p>
<p>选择需要的版本，比如本次建了【net40】和【net45】。</p>
<p>右键点击【Add Existing File…】选择添加 dll 文件。</p>
<p>添加完成后，点击左边的编辑按钮编辑元数据：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201911/nuget_2019-11-28_142207.png" alt="nuget_2019-11-28_142207" title="nuget_2019-11-28_142207"></p>
<p>注：如果有依赖需要点击【Edit dependencies】添加依赖。</p>
<p>编辑完成，点击左上角的【√】，然后点击菜单【File】下的【Save】保存，如本次保存的文件【Tamir.SharpSSHVAssist.1.1.1.13.nupkg】。</p>
<h2 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h2><p>包创建完成后需要将包发布到私仓，本次发布到 ProGet。</p>
<p>打开 ProGet 管理页面，进入【Packages】，点击【Add Package】:</p>
<p><img src="http://img2.kungge.com/md-content/2019/201911/nuget_2019-11-28_142814.png" alt="nuget_2019-11-28_142814" title="Optional title"></p>
<p>点击【Upload from Disk】，将上面生成的 .nupkg 上传。</p>
<p>上传完成后在 NuGet 控制台就可以搜索到你上传的包了：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201911/nuget_2019-11-28_143148.png" alt="nuget_2019-11-28_143148.png" title="Optional title"></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>包管理</category>
      </categories>
      <tags>
        <tag>nugut</tag>
        <tag>nugut打包</tag>
        <tag>proget</tag>
      </tags>
  </entry>
</search>
