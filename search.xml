<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo 实战（二）：Hexo 基本设置</title>
    <url>/p/hexo-base/</url>
    <content><![CDATA[<h2 id="一、Hexo-站点配置文件"><a href="#一、Hexo-站点配置文件" class="headerlink" title="一、Hexo 站点配置文件"></a>一、Hexo 站点配置文件</h2><p>官方关于配置的文档：<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration</a></p>
<p>网站的配置信息在文件 _config.yml 中，完整的初始配置信息（除了修改 Deployment）如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: Hexo</span><br><span class="line">subtitle: <span class="string">''</span></span><br><span class="line">description: <span class="string">''</span></span><br><span class="line">keywords:</span><br><span class="line">author: John Doe</span><br><span class="line">language: en</span><br><span class="line">timezone: <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: http://yoursite.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  trailing_html: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line">source_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line">new_post_name: :title.md <span class="comment"># File name of new posts</span></span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line">external_link:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  field: site <span class="comment"># Apply to the whole site</span></span><br><span class="line">  exclude: <span class="string">''</span></span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace: <span class="string">''</span></span><br><span class="line">  wrap: <span class="literal">true</span></span><br><span class="line">  hljs: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line">index_generator:</span><br><span class="line">  path: <span class="string">''</span></span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line">meta_generator: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"><span class="comment">## Use post's date for updated date unless set in front-matter</span></span><br><span class="line">use_date_for_updated: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the 'source/' folder</span></span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: landscape</span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/kungge/kungge.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>主要分成如下：</p>
<ul>
<li>Site：网站</li>
<li>URL：网址</li>
<li>Directory：目录</li>
<li>Writing：文章写作</li>
<li>Category &amp; Tag：分类和标签</li>
<li>Date / Time format：日期 / 时间格式</li>
<li>Pagination：分页</li>
<li>Include / Exclude file(s)：包括或不包括目录和文件</li>
<li>Extensions：扩展</li>
</ul>
<h3 id="1-1-使用主题-NexT"><a href="#1-1-使用主题-NexT" class="headerlink" title="1.1 使用主题 NexT"></a>1.1 使用主题 NexT</h3><p>默认的主题是 landscape，而 NexT 主题很多人选择，简洁好看，接下来会在该主题基础上进行设置。</p>
<p>NexT 主题源码地址：<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></p>
<p>下载 release 版：<a href="https://github.com/theme-next/hexo-theme-next/releases" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next/releases</a></p>
<p>将下载的压缩包解压到 <code>themes/</code> 目录下，将_config.yml 中 theme 修改为 :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<h3 id="1-2-网站信息配置"><a href="#1-2-网站信息配置" class="headerlink" title="1.2 网站信息配置"></a>1.2 网站信息配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 坤哥博客小站</span><br><span class="line">subtitle: 热爱生活,热爱技术,听听故事</span><br><span class="line">description: 生活是一门艺术,更是一门技术</span><br><span class="line">keywords: 坤哥博客小站,坤哥博客网,坤哥博客技术网</span><br><span class="line">author: wankun</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_222440.png" alt="2225"></p>
<h3 id="1-3-写作"><a href="#1-3-写作" class="headerlink" title="1.3 写作"></a>1.3 写作</h3><p>上一篇文章讲过通过命令 <code>hexo new [layout] &lt;title&gt;</code> 可以新建一篇文章，layout 表示布局，Hexo 有三种默认布局：post、page 和 draft，不指定布局则会使用默认布局，默认布局配置使用 <code>default_layout: post</code> 设置，不同的布局会存储在不同的目录中，前面使用命令 hexo new “Hello by hexo newcommand” 新增文件【Hello-by-hexo-new-command.md】存储在目录【source/_posts】中，如果是 draft 则是【source/_drafts】，page 则是【source】。</p>
<p>【Hello-by-hexo-new-command.md】文件内容为空，但是有“头”信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello by hexo new command</span><br><span class="line">date: 2020-03-29 01:09:05</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_230431.png" alt="2313"></p>
<p>这里的“头”信息叫 Front-matter，是文件最上方以 — 分隔的区域，用于指定个别文件的变量，以下是预先定义的参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>layout</td>
<td>布局</td>
<td>不指定则使用默认_config.yml中配置的</td>
</tr>
<tr>
<td>title</td>
<td>标题</td>
<td>文章的文件名</td>
</tr>
<tr>
<td>date</td>
<td>建立日期</td>
<td>文件建立日期</td>
</tr>
<tr>
<td>updated</td>
<td>更新日期</td>
<td>文件更新日期</td>
</tr>
<tr>
<td>comments</td>
<td>开启文章的评论功能</td>
<td>true</td>
</tr>
<tr>
<td>tags</td>
<td>标签（不适用于分页）</td>
<td></td>
</tr>
<tr>
<td>categories</td>
<td>分类（不适用于分页）</td>
<td></td>
</tr>
<tr>
<td>permalink</td>
<td>覆盖文章网址</td>
<td></td>
</tr>
<tr>
<td>keywords</td>
<td>仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td>
<td></td>
</tr>
</tbody></table>
<p>修改该文件内容如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">by</span> <span class="string">hexo</span> <span class="string">new</span> <span class="string">command</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-29</span> <span class="number">01</span><span class="string">:09:05</span></span><br><span class="line"><span class="attr">updated:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-31</span> <span class="number">23</span><span class="string">:10:05</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">标签1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签2</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签3</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">类别1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">[类别2,</span> <span class="string">类别2-1]</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">[类别2,</span> <span class="string">类别2-2]</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">[类别3]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">这里是文章内容。。。</span></span><br></pre></td></tr></table></figure>

<p><em>注：在hexo中类别有父子之分，<code>[类别2, 类别2-1]</code> 表示 <code>类别2-1</code> 是 <code>类别2</code> 的子类别。</em></p>
<p>标签和类别也可以使用 <code>[]</code>,如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span> <span class="string">[hexo,Hexo</span> <span class="string">基本设置]</span></span><br><span class="line"><span class="attr">categories:</span>  <span class="string">开源博客</span></span><br></pre></td></tr></table></figure>

<p>生成静态文件时，发现不光生成了文件本身，还生成了类别和标签页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_231603.png" alt="2316"></p>
<p>渲染结果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_231301.png" alt="2314"></p>
<p>进入类别页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_232035.png" alt="2320"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_231917.png" alt="2319"></p>
<p>文件名称使用 <code>new_post_name: :title.md # File name of new posts</code> 来配置，默认使用 <code>:title.md</code> 表示使用文章标题名来命名，可使用加入时间信息来命名方便文章管理：</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>:title</td>
<td>标题（小写，空格将会被替换为短杠）</td>
</tr>
<tr>
<td>:year</td>
<td>建立的年份，比如， 2015</td>
</tr>
<tr>
<td>:month</td>
<td>建立的月份（有前导零），比如， 04</td>
</tr>
<tr>
<td>:i_month</td>
<td>建立的月份（无前导零），比如， 4</td>
</tr>
<tr>
<td>:day</td>
<td>建立的日期（有前导零），比如， 07</td>
</tr>
<tr>
<td>:i_day</td>
<td>建立的日期（无前导零），比如， 7</td>
</tr>
</tbody></table>
<h2 id="二、NexT-主题基本配置"><a href="#二、NexT-主题基本配置" class="headerlink" title="二、NexT 主题基本配置"></a>二、NexT 主题基本配置</h2><h3 id="2-1-Schemes-配置"><a href="#2-1-Schemes-配置" class="headerlink" title="2.1 Schemes 配置"></a>2.1 Schemes 配置</h3><p>scheme 默认是 Muse：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_225028.png" alt="2250"></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment"># scheme: Mist</span></span><br><span class="line"><span class="comment"># scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>

<p>Pisces 效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_225430.png" alt="2254"></p>
<p>Mist 效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_225933.png" alt="2259"></p>
<p>Gemini 效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_163654.png" alt="20200510163714"></p>
<p>个人推荐使用 Gemini。</p>
<h3 id="2-2-菜单配置"><a href="#2-2-菜单配置" class="headerlink" title="2.2 菜单配置"></a>2.2 菜单配置</h3><p>默认的菜单配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || th</span></span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>

<p><code>||</code> 前面的是超链接，后面的是图标，修改如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  schedule: /schedule/ || calendar</span><br><span class="line">  sitemap: /sitemap.xml || sitemap</span><br><span class="line">  commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_230927.png" alt="2309"></p>
<p>配置的是英文，为啥会显示成对应中文？</p>
<p>其实这是有语言配置文件决定的，配置什么语言就用目录 【languages/】下【语言.yml】文件，如本次配置的是【language: zh-CN】，使用的文件就是【zh-CN.yml】。</p>
<h3 id="2-3-侧栏配置"><a href="#2-3-侧栏配置" class="headerlink" title="2.3 侧栏配置"></a>2.3 侧栏配置</h3><p>侧栏默认配置如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/sidebar</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  position: left</span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  <span class="comment">#width: 300</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display (only for Muse | Mist), available values:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically.</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  display: post</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar padding in pixels.</span></span><br><span class="line">  padding: 18</span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class="line">  offset: 12</span><br><span class="line">  <span class="comment"># Enable sidebar on narrow view (only for Muse | Mist).</span></span><br><span class="line">  onmobile: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line">avatar:</span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  url: <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  rounded: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  rotated: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Posts / Categories / Tags in sidebar.</span></span><br><span class="line">site_state: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_232856.png" alt="2329"></p>
<ul>
<li>Sidebar Position 用来配置侧栏的位置</li>
<li>Sidebar Display 用来配置侧栏的显示时机</li>
<li>Sidebar Avatar 用来配置侧栏头像</li>
</ul>
<h3 id="2-4-友情链接配置"><a href="#2-4-友情链接配置" class="headerlink" title="2.4 友情链接配置"></a>2.4 友情链接配置</h3><p>默认：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line">social:</span><br><span class="line">  <span class="comment">#GitHub: https://github.com/yourname || github</span></span><br><span class="line">  <span class="comment">#E-Mail: mailto:yourname@gmail.com || envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  icons_only: <span class="literal">false</span></span><br><span class="line">  transition: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>把注释去掉，看看效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_234930.png" alt="2349"></p>
<h3 id="2-5-站点建立时间配置"><a href="#2-5-站点建立时间配置" class="headerlink" title="2.5 站点建立时间配置"></a>2.5 站点建立时间配置</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup. If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2020</span></span><br></pre></td></tr></table></figure>

<p>底部显示的是：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_235238.png" alt="2352"></p>
<p>修改成2019，显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_180745.png" alt="20200510180826"></p>
<h2 id="三、页面添加"><a href="#三、页面添加" class="headerlink" title="三、页面添加"></a>三、页面添加</h2><h4 id="3-1-分类页面添加"><a href="#3-1-分类页面添加" class="headerlink" title="3.1 分类页面添加"></a>3.1 分类页面添加</h4><p>使用命令 <code>hexo new page categories</code> 新增一个 categories 文件夹：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_000948.png" alt="0009"></p>
<p>里面默认会添加一个 index.md 文件，默认展示：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_001050.png" alt="0010"></p>
<p>修改 index.md：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 网站分类</span><br><span class="line">date: 2020-03-30 23:55:32</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>如果文章指定 categories 参数则会在这里展示出来，显示效果范例：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-06_234730.png" alt="20200506234740"></p>
<h4 id="3-2-标签页面添加"><a href="#3-2-标签页面添加" class="headerlink" title="3.2 标签页面添加"></a>3.2 标签页面添加</h4><p>标签页面添加和类别类似，使用命令 <code>hexo new page tags</code> 新增一个 tags 文件夹：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_000106.png" alt="0001"></p>
<p>默认内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-03-30 23:59:32</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>展示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-31_000437.png" alt="0004"></p>
<p>修改 index.md 文件如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 网站标签</span><br><span class="line">date: 2020-03-30 23:59:32</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>显示效果范例：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-06_235434.png" alt="20200506235250"></p>
<h4 id="3-4-404页面添加"><a href="#3-4-404页面添加" class="headerlink" title="3.4 404页面添加"></a>3.4 404页面添加</h4><h4 id="3-5-关于我页面添加"><a href="#3-5-关于我页面添加" class="headerlink" title="3.5 关于我页面添加"></a>3.5 关于我页面添加</h4><p>使用命令 <code>hexo new page about</code> 生成文件夹，修改 index.html 内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于本站</span><br><span class="line">date: 2020-05-07 00:11:24</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">本站是坤哥网的精选文章，均属原创，欢迎转载！转载时请保留原文链接！</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-07_001454.png" alt="20200507001504"></p>
<h2 id="四、常规设置"><a href="#四、常规设置" class="headerlink" title="四、常规设置"></a>四、常规设置</h2><h3 id="4-1-添加显示摘要"><a href="#4-1-添加显示摘要" class="headerlink" title="4.1 添加显示摘要"></a>4.1 添加显示摘要</h3><p>在首页默认为展示很多，可以显示【阅读全文】的链接，找到主题的配置文件 _config.yml 关于此的内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>可以不用设置，只需要在截断处添加 <code>&lt;!-- more --&gt;</code> 标签，如（使用了 Hexo 可以不用自己添加目录了，上面的目录应该去掉）：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_235039.png" alt="20200508235056"></p>
<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_234213.png" alt="20200508235151"></p>
<p>如果要自动添加摘要，可以安装插件 <code>npm install hexo-auto-excerpt</code>，然后在 package.json 中添加 <code>&quot;hexo-auto-excerpt&quot;: &quot;^1.1.2&quot;</code> 显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_153226.png" alt="20200510153237"></p>
<h3 id="4-2-打赏设置"><a href="#4-2-打赏设置" class="headerlink" title="4.2 打赏设置"></a>4.2 打赏设置</h3><p>找到主题的配置文件 _config.yml 关于此的内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Reward (Donate)</span><br><span class="line"># Front-matter variable (unsupport animation).</span><br><span class="line">reward_settings:</span><br><span class="line">  # If true, reward will be displayed in every article by default.</span><br><span class="line">  enable: false</span><br><span class="line">  animation: false</span><br><span class="line">  #comment: Donate comment here.</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  #wechatpay: &#x2F;images&#x2F;wechatpay.png</span><br><span class="line">  #alipay: &#x2F;images&#x2F;alipay.png</span><br><span class="line">  #paypal: &#x2F;images&#x2F;paypal.png</span><br><span class="line">  #bitcoin: &#x2F;images&#x2F;bitcoin.png</span><br></pre></td></tr></table></figure>

<p>本次使用支付宝和微信，准备好收款图片，将其存放到 source 的目录下或某个目录下如 images，设置修改如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">您的支持是我最大的动力！</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure>

<p>在文章末尾出现了打赏按钮：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_000807.png" alt="20200509000818"></p>
<p>点击打赏按钮则会跳出设置的图片：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_001029.png" alt="20200509001042"></p>
<p>animation 如果设置为 true，鼠标放上去图片下面的字会动。</p>
<h3 id="4-3-网站访问次数统计"><a href="#4-3-网站访问次数统计" class="headerlink" title="4.3 网站访问次数统计"></a>4.3 网站访问次数统计</h3><p>将 enable 设为 true：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_001411.png" alt="20200509001656"></p>
<p>换个浏览器再次访问：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_001444.png" alt="20200509001719"></p>
<p>次数增加了，说明功能正常，使用域名访问，次数清空了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_185914.png" alt="20200510190036"></p>
<p>文章阅读数：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_003140.png" alt="20200509003231"></p>
<h3 id="4-4-本地搜索"><a href="#4-4-本地搜索" class="headerlink" title="4.4 本地搜索"></a>4.4 本地搜索</h3><p>设置内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Swiftype Search API Key</span></span><br><span class="line"><span class="attr">swiftype_key:</span></span><br></pre></td></tr></table></figure>

<p>将 local_search.enable 设为 true。</p>
<p>npm 安装 hexo-generator-searchdb 依赖，</p>
<p>然后在根目录下的 _config.xml 中添加如下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>这样就会产生一个搜索框，然后点击会弹出一个窗口，文本框输入关键字即可实现搜索：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-09_003848.png" alt="20200509003921"></p>
<p>实现原理主要是 hexo-generator-searchdb 会预先生成一个文本库 search.xml，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_153855.png" alt="20200510153903"></p>
<p>本地搜索是，NexT就会直接使用 js 来调用这个文件，这样就实现了静态网站的本地搜索。</p>
<h3 id="4-5-图片弹出"><a href="#4-5-图片弹出" class="headerlink" title="4.5 图片弹出"></a>4.5 图片弹出</h3><p>github 地址：<a href="https://github.com/theme-next/theme-next-fancybox" target="_blank" rel="noopener">https://github.com/theme-next/theme-next-fancybox</a></p>
<p>使用命令将远程代码下载下来：<code>git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox</code>，速度可能会很慢，可从本站下载：<a href="http://www.kungge.com/assist/theme-next-fancybox-master.zip" target="_blank" rel="noopener">http://www.kungge.com/assist/theme-next-fancybox-master.zip</a></p>
<p>主题配置文件 <code>fancybox: true</code>。</p>
<p>点击图片即可弹出来，显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_142716.png" alt="20200510142736"></p>
<h3 id="4-6-网站图标"><a href="#4-6-网站图标" class="headerlink" title="4.6 网站图标"></a>4.6 网站图标</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>

<p>进入主题图片目录【C:\Special\Test\HexoTest\blog\themes\next\source\images】，换成自己的就好：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/smiley_lock_16x16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/smiley_lock_32x32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_141102.png" alt="20200510141112"></p>
<h3 id="4-7-备案信息"><a href="#4-7-备案信息" class="headerlink" title="4.7 备案信息"></a>4.7 备案信息</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Beian ICP and gongan information for Chinese users. See: http://www.beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">icp:</span></span><br><span class="line">    <span class="comment"># The digit in the num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_id:</span></span><br><span class="line">    <span class="comment"># The full num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_num:</span></span><br><span class="line">    <span class="comment"># The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span></span><br></pre></td></tr></table></figure>

<p>修改：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Beian ICP and gongan information for Chinese users. See: http://www.beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">icp:</span> <span class="string">赣ICP备16000944号-1</span></span><br><span class="line">    <span class="comment"># The digit in the num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_id:</span></span><br><span class="line">    <span class="comment"># The full num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_num:</span></span><br><span class="line">    <span class="comment"># The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span> <span class="string">http://img2.kungge.com/content/beian.png</span></span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_152534.png" alt="20200510152547"></p>
<h3 id="4-8-添加评论"><a href="#4-8-添加评论" class="headerlink" title="4.8 添加评论"></a>4.8 添加评论</h3><p>目前hexo支持的评论系统很多，next 主题自带了 gitalk，需要配置下，但是需要 github 账号登录，很麻烦，网上也有人反馈国内会报网络错误，翻墙才能使用。</p>
<p>本次添加 Valine，比较简洁好用，官网：<a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></p>
<p>分三个版本：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_155524.png" alt="20200510162629"></p>
<p>个人直接使用开发版即可，一般够用。</p>
<p>next 本身也集成了 valine。</p>
<p>去注册登录，然后创建应用，创建好的应用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_160844.png" alt="20200510160919"></p>
<p>点击应用进入配置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_161116.png" alt="20200510161154"></p>
<p>打开主题配置文件，找到 valine，初始信息：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>

<p>将 appid 和 appkey 填入进来</p>
<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_161752.png" alt="20200510161816"></p>
<p>评论一下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_162139.png" alt="20200510162158"></p>
<p>修改评论头像，属性是 avatar</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_212340.png" alt="20200510212352"></p>
<h4 id="查看评论数据"><a href="#查看评论数据" class="headerlink" title="查看评论数据"></a>查看评论数据</h4><p>登录 leancloud 进入应用选择存储（如本次的地址是【<a href="https://leancloud.cn/dashboard/data.html?appid=WS9yN0bdMnmWCTEGdPtRjty5-gzGzoHsz】），然后选择的" target="_blank" rel="noopener">https://leancloud.cn/dashboard/data.html?appid=WS9yN0bdMnmWCTEGdPtRjty5-gzGzoHsz】），然后选择的</a> Class 为 Comment，就可以看到评论数据了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_210939.png" alt="20200510211015"></p>
<h3 id="添加-github-banner"><a href="#添加-github-banner" class="headerlink" title="添加 github_banner"></a>添加 github_banner</h3><p>启用：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/kungge</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_164635.png" alt="20200510164644"></p>
<h3 id="侧边栏头像"><a href="#侧边栏头像" class="headerlink" title="侧边栏头像"></a>侧边栏头像</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>修改：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">http://img2.kungge.com/content/dog.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_165528.png" alt="20200510165535"></p>
<h3 id="修改标签样式"><a href="#修改标签样式" class="headerlink" title="修改标签样式"></a>修改标签样式</h3><p>文章末尾标签样式展示，在控制【blog\themes\next\layout_macro\post.swig】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_170455.png" alt="20200510170531"></p>
<p>默认标签小图标是不展示：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line"><span class="attr">tag_icon:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>使用 <code>#</code> ：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_170648.png" alt="20200510170700"></p>
<p>只需要修改配置，将其设为 true，效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_170733.png" alt="20200510170740"></p>
<h3 id="添加文章版权信息"><a href="#添加文章版权信息" class="headerlink" title="添加文章版权信息"></a>添加文章版权信息</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>

<p>将 false 都设为 true，效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_171608.png" alt="20200510171629"></p>
<h3 id="底部信息"><a href="#底部信息" class="headerlink" title="底部信息"></a>底部信息</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup. If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2020</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="comment"># Icon name in Font Awesome. See: https://fontawesome.com/v4.7.0/icons/</span></span><br><span class="line">    <span class="comment"># `heart` is recommended with animation in red (#ff0000).</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">user</span></span><br><span class="line">    <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">"#808080"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Beian ICP and gongan information for Chinese users. See: http://www.beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">icp:</span> <span class="string">赣ICP备16000944号-1</span></span><br><span class="line">    <span class="comment"># The digit in the num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_id:</span></span><br><span class="line">    <span class="comment"># The full num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_num:</span></span><br><span class="line">    <span class="comment"># The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span> <span class="string">http://img2.kungge.com/content/beian.png</span></span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_171934.png" alt="20200510172011"></p>
<h4 id="不显示-power-by"><a href="#不显示-power-by" class="headerlink" title="不显示 power by"></a>不显示 power by</h4><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_211929.png" alt="20200510212035"></p>
<p>主题配置文件将 fo0ter 下 powered 设为 <code>powered: false</code>：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_212145.png" alt="20200510212152"></p>
<h3 id="设置代码块"><a href="#设置代码块" class="headerlink" title="设置代码块"></a>设置代码块</h3><p>默认：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_172308.png" alt="20200510172319"></p>
<p>修改样式，复制按钮可见：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span></span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_172939.png" alt="20200510172950"></p>
<h3 id="文章地址"><a href="#文章地址" class="headerlink" title="文章地址"></a>文章地址</h3><p>默认：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://yoursite.com</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br></pre></td></tr></table></figure>

<p>渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_181257.png" alt="20200510181308"></p>
<p>这样的地址对seo不太友好。</p>
<p>修改如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://yoursite.com</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">p/:id/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br></pre></td></tr></table></figure>

<p>每篇文章 <code>---xx---</code> 中指定一个 Id 唯一值，如 <code>id: nas-network</code>，渲染效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_200340.png" alt="20200510200349"></p>
<h3 id="添加日历"><a href="#添加日历" class="headerlink" title="添加日历"></a>添加日历</h3><p>使用命令下载 <code>git clone --depth=1 git://github.com/icecory/theme-next-calendar themes/next/source/lib/calendar</code></p>
<p>如果是用 git clone 从 github 下载源码太慢，可以直接下载源码，然后解压到对应目录【themes/next/source/lib/calendar】中，本站提供下载【<a href="http://www.kungge.com/assist/theme-next-calendar-master.zip】。" target="_blank" rel="noopener">http://www.kungge.com/assist/theme-next-calendar-master.zip】。</a></p>
<p>按照上面的提示会报错如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_202404.png" alt="20200510202433"></p>
<p>暂不使用。</p>
<h3 id="页面浏览进度展示"><a href="#页面浏览进度展示" class="headerlink" title="页面浏览进度展示"></a>页面浏览进度展示</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>将 scrollpercent 设为 true。</p>
<p>若想把 top 按钮放在侧边栏，将 sidebar 设为 true。</p>
<p>效果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_231119.png" alt="20200510231141"></p>
<p>还是放到文章右侧吧：</p>
<h3 id="页面加载进度展示"><a href="#页面加载进度展示" class="headerlink" title="页面加载进度展示"></a>页面加载进度展示</h3><p>命令窗口进入目录【themes/next/】,然后下载安装 <code>git clone https://github.com/theme-next/theme-next-pace source/lib/pace</code>，在主题配置文件中找到下面的设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/HubSpot/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure>

<p>将 enable 设为 true 即可，theme 表示不同的样式效果。</p>
<h2 id="P、常见问题"><a href="#P、常见问题" class="headerlink" title="P、常见问题"></a>P、常见问题</h2><h3 id="P1-网站中文乱码"><a href="#P1-网站中文乱码" class="headerlink" title="P1 网站中文乱码"></a>P1 网站中文乱码</h3><p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_212732.png" alt="2127"></p>
<p>为什么会出现乱码？</p>
<p>先查看网站用的主题，在 <code># Extensions</code> 一栏，使用命令 <code>npm install hexo-generator-searchdb --save</code> 安装：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure>

<p>用的主题是 landscape，然后再主题的目录下找到语言配置文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_213309.png" alt="2133"></p>
<p>那么在 <code># Site</code> 一栏中语言配置 <code>language:</code> 也要在使用的主题语言配置中。</p>
<p>如上中文应使用 <code>zh-CN</code>，设置 <code>language: zh-CN</code>。</p>
<p>如果还不行，那可能是配置文件【_config.yml】本身的编码格式，另存为 UTF-8 格式：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_221710.png" alt="2217"></p>
<h3 id="P2-yml-可读性差"><a href="#P2-yml-可读性差" class="headerlink" title="P2 .yml 可读性差"></a>P2 .yml 可读性差</h3><p>在华为云的 windows 服务器上用记事本打开成这样：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_223727.png" alt="2237"></p>
<p>可读性太差。</p>
<p>而在本机的 windows 打开却是正常的：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_224656.png" alt="2247"></p>
<p>在华为云的 windows 服务器上记事本也设置了自动换行，这是怎么回事？</p>
<p>不做深究，强烈建议使用第三方编辑器编写即可，如 vs code、sublime等。</p>
<h3 id="P3-网站全空白"><a href="#P3-网站全空白" class="headerlink" title="P3 网站全空白"></a>P3 网站全空白</h3><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_121157.png" alt="20200510121234"></p>
<p>查看页面元素，发现都在：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_121908.png" alt="20200510122402"></p>
<p>说明是样式的问题，查看日志：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_121952.png" alt="20200510122428"></p>
<p>查看使用主题的 font-asesome.min.css 文件，发现确实不存在，刚才误删了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_122210.png" alt="20200510122544"></p>
<p>恢复就好了。</p>
]]></content>
      <categories>
        <category>开源博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Hexo 基本设置</tag>
        <tag>hexo 实战</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 实战（一）：CentOS 7 上安装 Docker</title>
    <url>/p/centos-docker/</url>
    <content><![CDATA[<p>docker 官方文档：<a href="https://docs.docker.com/get-started/" target="_blank" rel="noopener">https://docs.docker.com/get-started/</a></p>
<p>centOS 上安装 docker 官方文档：<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">Install Docker Engine on CentOS</a></p>
<p>阿里云安装 docker 介绍：<a href="https://yq.aliyun.com/articles/110806" target="_blank" rel="noopener">Docker CE 镜像源站</a></p>
<h2 id="一、安装-docker-前准备"><a href="#一、安装-docker-前准备" class="headerlink" title="一、安装 docker 前准备"></a>一、安装 docker 前准备</h2><p>docker 支持 Linux、Windows、MacOS平台，支持的平台可以参考官网：<a href="https://docs.docker.com/engine/install/。" target="_blank" rel="noopener">https://docs.docker.com/engine/install/。</a></p>
<p>支持的 Linux 大部分版本，但是要求 Linux 版本内核在 3.10 以上，使用命令 <code>uname -r</code> 查看系统内核版本验证你的 CentOS 是否支持 Docker：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-514.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>使用命令 <code>yum install -y yum-utils device-mapper-persistent-data lvm2</code> 安装需要的包。</p>
<p>配置阿里云 docker yum 源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br><span class="line">...</span><br><span class="line">[root@localhost ~]<span class="comment"># yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">adding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">grabbing file http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">repo saved to /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure>

<h2 id="二、安装-docker"><a href="#二、安装-docker" class="headerlink" title="二、安装 docker"></a>二、安装 docker</h2><h3 id="2-1-docker-版本介绍"><a href="#2-1-docker-版本介绍" class="headerlink" title="2.1 docker 版本介绍"></a>2.1 docker 版本介绍</h3><p>目前主要有两个版本：docker-ce和docker-ee，前者是社区版（开源免费），后者是企业版（闭源收费，docker的商业版本）。</p>
<p>docker-io 和 docker-engin 是之前的版本，版本号是1.X。</p>
<h3 id="2-2-安装指定版本的-docker"><a href="#2-2-安装指定版本的-docker" class="headerlink" title="2.2 安装指定版本的 docker"></a>2.2 安装指定版本的 docker</h3><p>本次安装社区版本 docker-ce。</p>
<p>查看仓库中的所有 docker-ce 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum list docker-ce --showduplicates | sort -r</span></span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line">docker-ce.x86_64            3:19.03.8-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.7-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.6-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.5-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.4-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.3-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.2-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.1-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:19.03.0-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.9-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.6-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.5-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.4-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.3-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.2-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.1-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:18.09.0-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.06.3.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.06.2.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.06.1.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.06.0.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.03.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            18.03.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.12.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.12.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.09.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.09.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.06.2.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.06.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.06.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.03.3.ce-1.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.03.2.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.03.1.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">docker-ce.x86_64            17.03.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line">Available Packages</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>安装指定的版本需要加上版本信息，如 <code>yum install docker-ce-18.06.3.ce</code>，不指定版本信息则默认安装最新稳定版：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install docker-ce</span></span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  docker-ce.x86_64 3:19.03.8-3.el7                                                                                                          </span><br><span class="line">  </span><br><span class="line">Dependency Installed:</span><br><span class="line">  container-selinux.noarch 2:2.107-3.el7         containerd.io.x86_64 0:1.2.13-3.1.el7         docker-ce-cli.x86_64 1:19.03.8-3.el7        </span><br><span class="line">  </span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>

<p>如上表示安装完成。</p>
<h3 id="2-3-启动-docker"><a href="#2-3-启动-docker" class="headerlink" title="2.3 启动 docker"></a>2.3 启动 docker</h3><p>安装完成后，使用命令 <code>systemctl start docker</code> 启动 docker，然后可使用命令 <code>systemctl status docker</code> 查看 docker 的状态。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl start docker</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl status docker</span></span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Fri 2020-04-24 06:43:27 PDT; 16s ago</span><br><span class="line">     Docs: https://docs.docker.com</span><br><span class="line"> Main PID: 120921 (dockerd)</span><br><span class="line">    Tasks: 13</span><br><span class="line">   Memory: 45.8M</span><br><span class="line">   CGroup: /system.slice/docker.service</span><br><span class="line">           └─120921 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line">  </span><br><span class="line">Apr 24 06:43:26 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:26.824128116-07:00"</span> level=info msg=<span class="string">"ccResolverWrapper...e=grpc</span></span><br><span class="line"><span class="string">Apr 24 06:43:26 localhost.localdomain dockerd[120921]: time="</span>2020-04-24T06:43:26.824138795-07:00<span class="string">" level=info msg="</span>ClientConn switch...e=grpc</span><br><span class="line">Apr 24 06:43:26 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:26.857763277-07:00"</span> level=info msg=<span class="string">"Loading container...tart."</span></span><br><span class="line">Apr 24 06:43:26 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:26.972274142-07:00"</span> level=info msg=<span class="string">"Default bridge (d...dress"</span></span><br><span class="line">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:27.088685674-07:00"</span> level=info msg=<span class="string">"Loading containers: done."</span></span><br><span class="line">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time=<span class="string">"2020-04-24T06:43:27.132097640-07:00"</span> level=warning msg=<span class="string">"Not using nati...erlay2</span></span><br><span class="line"><span class="string">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time="</span>2020-04-24T06:43:27.132364215-07:00<span class="string">" level=info msg="</span>Docker daemon<span class="string">" co...9.03.8</span></span><br><span class="line"><span class="string">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time="</span>2020-04-24T06:43:27.132510032-07:00<span class="string">" level=info msg="</span>Daemon has comple...ation<span class="string">"</span></span><br><span class="line"><span class="string">Apr 24 06:43:27 localhost.localdomain dockerd[120921]: time="</span>2020-04-24T06:43:27.194040570-07:00<span class="string">" level=info msg="</span>API listen on /va....sock<span class="string">"</span></span><br><span class="line"><span class="string">Apr 24 06:43:27 localhost.localdomain systemd[1]: Started Docker Application Container Engine.</span></span><br><span class="line"><span class="string">Hint: Some lines were ellipsized, use -l to show in full.</span></span><br></pre></td></tr></table></figure>

<p>若要开机启动，可使用命令 <code>systemctl enable docker</code>。</p>
<p>使用命令 <code>docker version</code> 查看 docker 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.8</span><br><span class="line"> API version:       1.40</span><br><span class="line"> Go version:        go1.12.17</span><br><span class="line"> Git commit:        afacb8b</span><br><span class="line"> Built:             Wed Mar 11 01:27:04 2020</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          19.03.8</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.12.17</span><br><span class="line">  Git commit:       afacb8b</span><br><span class="line">  Built:            Wed Mar 11 01:25:42 2020</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.2.13</span><br><span class="line">  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0-rc10</span><br><span class="line">  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>如上显示出了包含 Client 和 Server 的版本信息。</p>
<h2 id="三、docker-镜像"><a href="#三、docker-镜像" class="headerlink" title="三、docker 镜像"></a>三、docker 镜像</h2><h3 id="3-1-拉取镜像"><a href="#3-1-拉取镜像" class="headerlink" title="3.1 拉取镜像"></a>3.1 拉取镜像</h3><p>hello-world 是 docker 官方提供的最小镜像，通过它可以用来验证 Docker 是否安装成功，先使用 pull 命令把它拉下来，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull hello-world</span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">0e03bdcc26d7: Pull complete </span><br><span class="line">Digest: sha256:8e3114318a995a1ee497790535e7b88365222a21771ae7e53687ad76563e8e76</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> hello-world:latest</span><br><span class="line">docker.io/library/hello-world:latest</span><br></pre></td></tr></table></figure>

<h3 id="3-2-查看镜像信息"><a href="#3-2-查看镜像信息" class="headerlink" title="3.2 查看镜像信息"></a>3.2 查看镜像信息</h3><p>使用命令 <code>docker images</code> 查看系统已有镜像。</p>
<p>使用命令 <code>docker images [镜像名称]</code> 查看指定镜像：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker.io/library/hello-world:latest</span><br><span class="line">[root@localhost ~]<span class="comment"># docker images hello-world</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">hello-world         latest              bf756fb1ae65        3 months ago        13.3kB</span><br></pre></td></tr></table></figure>

<p>列表字段含义：</p>
<ul>
<li>REPOSITORY：来自的仓库</li>
<li>TAG：镜像的标签信息</li>
<li>IMAGE ID: 镜像 ID，若 ID 相同说明指向同一个镜像</li>
<li>CREATED：镜像最后更新时间</li>
<li>SIZE：镜像大小</li>
</ul>
<p>使用命令 <code>docker inspect [镜像名称]</code> 查看镜像详细信息，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker inspect hello-world</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Id"</span>: <span class="string">"sha256:bf756fb1ae65adf866bd8c456593cd24beb6a0a061dedf42b26a993176745f6b"</span>,</span><br><span class="line">        <span class="string">"RepoTags"</span>: [</span><br><span class="line">            <span class="string">"hello-world:latest"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"RepoDigests"</span>: [</span><br><span class="line">            <span class="string">"hello-world@sha256:8e3114318a995a1ee497790535e7b88365222a21771ae7e53687ad76563e8e76"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"Parent"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Comment"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Created"</span>: <span class="string">"2020-01-03T01:21:37.263809283Z"</span>,</span><br><span class="line">        <span class="string">"Container"</span>: <span class="string">"71237a2659e6419aee44fc0b51ffbd12859d1a50ba202e02c2586ed999def583"</span>,</span><br><span class="line">        <span class="string">"ContainerConfig"</span>: &#123;</span><br><span class="line">            <span class="string">"Hostname"</span>: <span class="string">"71237a2659e6"</span>,</span><br><span class="line">            <span class="string">"Domainname"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"User"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"AttachStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStdout"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStderr"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Tty"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"OpenStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"StdinOnce"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Env"</span>: [</span><br><span class="line">                <span class="string">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"Cmd"</span>: [</span><br><span class="line">                <span class="string">"/bin/sh"</span>,</span><br><span class="line">                <span class="string">"-c"</span>,</span><br><span class="line">                <span class="string">"#(nop) "</span>,</span><br><span class="line">                <span class="string">"CMD [\"/hello\"]"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"ArgsEscaped"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"Image"</span>: <span class="string">"sha256:eb850c6a1aedb3d5c62c3a484ff01b6b4aade130b950e3bf3e9c016f17f70c34"</span>,</span><br><span class="line">            <span class="string">"Volumes"</span>: null,</span><br><span class="line">            <span class="string">"WorkingDir"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"Entrypoint"</span>: null,</span><br><span class="line">            <span class="string">"OnBuild"</span>: null,</span><br><span class="line">            <span class="string">"Labels"</span>: &#123;&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"DockerVersion"</span>: <span class="string">"18.06.1-ce"</span>,</span><br><span class="line">        <span class="string">"Author"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Config"</span>: &#123;</span><br><span class="line">            <span class="string">"Hostname"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"Domainname"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"User"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"AttachStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStdout"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"AttachStderr"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Tty"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"OpenStdin"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"StdinOnce"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"Env"</span>: [</span><br><span class="line">                <span class="string">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"Cmd"</span>: [</span><br><span class="line">                <span class="string">"/hello"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"ArgsEscaped"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"Image"</span>: <span class="string">"sha256:eb850c6a1aedb3d5c62c3a484ff01b6b4aade130b950e3bf3e9c016f17f70c34"</span>,</span><br><span class="line">            <span class="string">"Volumes"</span>: null,</span><br><span class="line">            <span class="string">"WorkingDir"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"Entrypoint"</span>: null,</span><br><span class="line">            <span class="string">"OnBuild"</span>: null,</span><br><span class="line">            <span class="string">"Labels"</span>: null</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"Architecture"</span>: <span class="string">"amd64"</span>,</span><br><span class="line">        <span class="string">"Os"</span>: <span class="string">"linux"</span>,</span><br><span class="line">        <span class="string">"Size"</span>: 13336,</span><br><span class="line">        <span class="string">"VirtualSize"</span>: 13336,</span><br><span class="line">        <span class="string">"GraphDriver"</span>: &#123;</span><br><span class="line">            <span class="string">"Data"</span>: &#123;</span><br><span class="line">                <span class="string">"MergedDir"</span>: <span class="string">"/var/lib/docker/overlay2/dffcec0071ed9fa1ea69b4ded806c8a45e4ff64514fda7708d492500c2d4cd1b/merged"</span>,</span><br><span class="line">                <span class="string">"UpperDir"</span>: <span class="string">"/var/lib/docker/overlay2/dffcec0071ed9fa1ea69b4ded806c8a45e4ff64514fda7708d492500c2d4cd1b/diff"</span>,</span><br><span class="line">                <span class="string">"WorkDir"</span>: <span class="string">"/var/lib/docker/overlay2/dffcec0071ed9fa1ea69b4ded806c8a45e4ff64514fda7708d492500c2d4cd1b/work"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"Name"</span>: <span class="string">"overlay2"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"RootFS"</span>: &#123;</span><br><span class="line">            <span class="string">"Type"</span>: <span class="string">"layers"</span>,</span><br><span class="line">            <span class="string">"Layers"</span>: [</span><br><span class="line">                <span class="string">"sha256:9c27e219663c25e0f28493790cc0b88bc973ba3b1686355f221c38a36978ac63"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"Metadata"</span>: &#123;</span><br><span class="line">            <span class="string">"LastTagTime"</span>: <span class="string">"0001-01-01T00:00:00Z"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>使用命令 <code>docker history [镜像名称]</code> 查看镜像历史，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker history hello-world</span></span><br><span class="line">IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT</span><br><span class="line">bf756fb1ae65        3 months ago        /bin/sh -c <span class="comment">#(nop)  CMD ["/hello"]               0B                  </span></span><br><span class="line">&lt;missing&gt;           3 months ago        /bin/sh -c <span class="comment">#(nop) COPY file:7bf12aab75c3867a…   13.3kB</span></span><br></pre></td></tr></table></figure>

<p>镜像是由多个层组成，上面列出的就是各个层的创建信息。</p>
<h3 id="3-3-运行镜像"><a href="#3-3-运行镜像" class="headerlink" title="3.3 运行镜像"></a>3.3 运行镜像</h3><p>使用命令 <code>docker run [镜像名称]</code> 运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker run hello-world</span></span><br><span class="line">  </span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line">  </span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">"hello-world"</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line">  </span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line">  </span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line">  </span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>

<h2 id="四、配置-docker-镜像加速器"><a href="#四、配置-docker-镜像加速器" class="headerlink" title="四、配置 docker 镜像加速器"></a>四、配置 docker 镜像加速器</h2><h3 id="4-1-镜像地址介绍"><a href="#4-1-镜像地址介绍" class="headerlink" title="4.1 镜像地址介绍"></a>4.1 镜像地址介绍</h3><p>docker 官方镜像地址：<a href="https://hub.docker.com/search?q=&amp;type=image" target="_blank" rel="noopener">https://hub.docker.com/search?q=&amp;type=image</a></p>
<p>你打开看下网站加载是不是有点慢，因为网站是国外的。</p>
<p>我们可以配置国内的镜像地址来提升获取 docker 官方镜像的速度。</p>
<p>目前国内比较出名的镜像站有：</p>
<ul>
<li>阿里云镜像：https://{your_id}.mirror.aliyuncs.com</li>
<li>Docker中国区官方镜像：<a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a></li>
<li>网易163镜像：<a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a></li>
<li>daocloud镜像：http://{your_id}.m.daocloud.io</li>
<li>中科大镜像：<a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a></li>
</ul>
<h3 id="4-2-配置国内镜像地址"><a href="#4-2-配置国内镜像地址" class="headerlink" title="4.2 配置国内镜像地址"></a>4.2 配置国内镜像地址</h3><p>docker 版本不低于 1.10 时可以直接通过 daemon config 进行配置。</p>
<p>如果目录【/etc/docker】不存在，先创建 <code>mkdir -p /etc/docker</code>，使用命令 <code>vi /etc/docker/daemon.json</code> 编辑文件（没有会新增），添加内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"registry-mirrors"</span>: [<span class="string">"配置的加速地址"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如配置Docker中国区官方镜像为：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://registry.docker-cn.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>配置阿里云 docker 镜像加速器比较麻烦，需要要注册账号后登录到容器镜像服务控制台中获取镜像加速地址。</p>
<p>登录阿里云的容器镜像服务控制台：<a href="https://cr.console.aliyun.com/" target="_blank" rel="noopener">https://cr.console.aliyun.com/</a></p>
<p>选择镜像加速器，可以看到你的专属镜像加速地址：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202004/2020-04-24_224712.png" alt="2317"></p>
<p>修改完成后重启 docker 服务即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart docker</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-测试拉取较大点的镜像"><a href="#4-3-测试拉取较大点的镜像" class="headerlink" title="4.3 测试拉取较大点的镜像"></a>4.3 测试拉取较大点的镜像</h3><p>拉取一个较大一点的镜像 MySql：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull mysql</span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/mysql</span><br><span class="line">54fec2fa59d0: Pull complete </span><br><span class="line">bcc6c6145912: Pull complete </span><br><span class="line">951c3d959c9d: Pull complete </span><br><span class="line">05de4d0e206e: Pull complete </span><br><span class="line">319f0394ef42: Pull complete </span><br><span class="line">d9185034607b: Pull complete </span><br><span class="line">013a9c64dadc: Pull complete </span><br><span class="line">96d4c3d31f9f: Pull complete </span><br><span class="line">785bc90808da: Pull complete </span><br><span class="line">1339cf094729: Pull complete </span><br><span class="line">beb8f531cc37: Pull complete </span><br><span class="line">2b40c9f6a918: Pull complete </span><br><span class="line">Digest: sha256:9643e9fbd6330d10686f8922292dcb20995e7b792c17d4e94ddf95255f1d5449</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> mysql:latest</span><br><span class="line">docker.io/library/mysql:latest</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>下载很快，一两分钟就完成了。</p>
<p>使用命令 <code>docker images</code> 查看镜像列表，如下已经有两个镜像了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">hello-world         latest              bf756fb1ae65        3 months ago        13.3kB</span><br><span class="line">mysql               latest              0c27e8e5fcfa        46 hours ago        546MB</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>容器</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 学习总结(二)：常用命令</title>
    <url>/p/linux-centos-commond/</url>
    <content><![CDATA[<h2 id="帮助相关"><a href="#帮助相关" class="headerlink" title="帮助相关"></a>帮助相关</h2><ul>
<li>查看帮助：man [命令]</li>
<li>退出帮助：q</li>
</ul>
<h2 id="文件目录相关"><a href="#文件目录相关" class="headerlink" title="文件目录相关"></a>文件目录相关</h2><p>切换目录，使用 cd 命令：</p>
<ul>
<li>cd [目录]：切换到某目录</li>
<li>cd ..：返回上一级目录</li>
<li>cd /：切换到根目录</li>
<li>cd ~：切换到加目录</li>
</ul>
<p>查看当前所在位置：pwd</p>
<p>创建目录：mkdir [目录名]。</p>
<p>删除目录：rmdir [目录名]。</p>
<p>显示目录下的文件列表使用 ls 命令：</p>
<ul>
<li>ls</li>
<li>ls -a</li>
<li>ls -l：简写的方式(ll)</li>
<li>ll -h：友好的显示</li>
</ul>
<p>查看文件内容：</p>
<ul>
<li>cat：显示文件的所有内容</li>
<li>more：分页显示，空格进入下一页，回车进入下一行</li>
<li>less：分页显示，使用 PgUp 和 PgDn 翻页</li>
<li>tail</li>
</ul>
<p>创建文件使用 touch 命令。</p>
<h2 id="软件安装包管理"><a href="#软件安装包管理" class="headerlink" title="软件安装包管理"></a>软件安装包管理</h2><p>yum 命令：</p>
<ol>
<li>列出软件清单<blockquote>
<ol>
<li>列出所有可更新的软件清单：yum check-update</li>
<li>列出所有可安裝的软件清单：yum list</li>
<li>查找软件包：yum search [keyword]</li>
<li>列出以XX开头的软件清单：yum list XX*</li>
</ol>
</blockquote>
</li>
<li>更新软件<blockquote>
<ol>
<li>更新所有软件：yum update</li>
<li>更新指定的软件：yum update <package_name></li>
</ol>
</blockquote>
</li>
<li>安装软件<blockquote>
<ol>
<li>仅安装指定的软件：yum install <package_name></li>
</ol>
</blockquote>
</li>
<li>删除软件包：yum remove <package_name></li>
<li>清除缓存:<blockquote>
<ol>
<li>清除缓存目录下的软件包：yum clean packages</li>
<li>清除缓存目录下的header：syum clean headers</li>
<li>清除缓存目录下旧的headers：yum clean oldheaders: </li>
<li>清除缓存目录下的软件包及旧的headers：yum clean, yum clean all (= yum clean packages; yum clean oldheaders) </li>
</ol>
</blockquote>
</li>
</ol>
<p>yum 的配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/yum.conf </span></span><br><span class="line">[main]</span><br><span class="line">cachedir=/var/cache/yum/<span class="variable">$basearch</span>/<span class="variable">$releasever</span></span><br><span class="line">keepcache=0</span><br><span class="line">debuglevel=2</span><br><span class="line">logfile=/var/<span class="built_in">log</span>/yum.log</span><br><span class="line">exactarch=1</span><br><span class="line">obsoletes=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">plugins=1</span><br><span class="line">installonly_limit=5</span><br><span class="line">bugtracker_url=http://bugs.centos.org/set_project.php?project_id=23&amp;ref=http://bugs.centos.org/bug_report_page.php?category=yum</span><br><span class="line">distroverpkg=centos-release</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  This is the default, if you make this bigger yum won't see if the metadata</span></span><br><span class="line"><span class="comment"># is newer on the remote and so you'll "gain" the bandwidth of not having to</span></span><br><span class="line"><span class="comment"># download the new metadata and "pay" for it by yum not having correct</span></span><br><span class="line"><span class="comment"># information.</span></span><br><span class="line"><span class="comment">#  It is esp. important, to have correct metadata, for distributions like</span></span><br><span class="line"><span class="comment"># Fedora which don't keep old packages around. If you don't like this checking</span></span><br><span class="line"><span class="comment"># interupting your command line usage, it's much better to have something</span></span><br><span class="line"><span class="comment"># manually check the metadata once an hour (yum-updatesd will do this).</span></span><br><span class="line"><span class="comment"># metadata_expire=90m</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PUT YOUR REPOS HERE OR IN separate files named file.repo</span></span><br><span class="line"><span class="comment"># in /etc/yum.repos.d</span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>rpm 命令：</p>
<ol>
<li>列出安装包清单<blockquote>
<ol>
<li>列出已经安装的所有包：<code>rpm -qa</code>，分页列出：<code>rpm -qa|less</code>，排序列出：<code>rpm -qa | sort</code>，统计多少个：<code>rpm -qa | wc -l</code></li>
</ol>
</blockquote>
</li>
<li>列出某安装包<blockquote>
<ol>
<li>查询已安装包的版本，如 <code>rpm -q curl</code></li>
<li>列出某软件的安装集合，如 <code>rpm -qa|grep nginx</code></li>
<li>列出某软件的安装位置和文件，如 <code>rpm -qla|grep nginx</code></li>
</ol>
</blockquote>
</li>
</ol>
<h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><p>很重要，使用命令 grep。</p>
<p>将一个命令的输出用作另一个命令的输入。</p>
<p>如： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost testdir1202]<span class="comment"># ifconfig | grep 192.168.0</span></span><br><span class="line">[root@localhost testdir1202]<span class="comment"># ifconfig | grep 192.168.2</span></span><br><span class="line">        inet 192.168.2.57  netmask 255.255.255.0  broadcast 192.168.2.255</span><br><span class="line">[root@localhost testdir1202]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h2><p>date 命令显示或设置系统时间。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost testdir1202]<span class="comment"># date</span></span><br><span class="line">Mon Dec  2 01:52:02 PST 2019</span><br><span class="line">[root@localhost testdir1202]<span class="comment"># date -s "2019-12-02 17:53"</span></span><br><span class="line">Mon Dec  2 17:53:00 PST 2019</span><br><span class="line">[root@localhost testdir1202]<span class="comment"># date</span></span><br><span class="line">Mon Dec  2 17:53:05 PST 2019</span><br><span class="line">[root@localhost testdir1202]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>clear 命令清屏，或者使用快捷键【Ctrl+l】。</p>
<p>系统内核：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-514.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>系统版本:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/redhat-release </span></span><br><span class="line">CentOS Linux release 7.7.1908 (Core)</span><br></pre></td></tr></table></figure>

<h2 id="进程相关"><a href="#进程相关" class="headerlink" title="进程相关"></a>进程相关</h2><h3 id="ps-命令"><a href="#ps-命令" class="headerlink" title="ps 命令"></a>ps 命令</h3><p>ps 命令用于显示当前进程 (process) 的状态。</p>
<p>显示进程清单：</p>
<blockquote>
<ol>
<li>ps -ef：查看所有进程，ps -ef | grep bash：查找某一进程</li>
<li>ps -A：显示进程信息，ps -u [user]：显示某用户进程信息，如 ps -u root</li>
<li>ps aux 查看输出结果，输出结果格式：<code>USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND</code></li>
</ol>
</blockquote>
<p><code>ps aux</code> 进程输出结果说明：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USER: 行程拥有者</span><br><span class="line">PID: pid</span><br><span class="line">%CPU: 占用的 CPU 使用率</span><br><span class="line">%MEM: 占用的记忆体使用率</span><br><span class="line">VSZ: 占用的虚拟记忆体大小</span><br><span class="line">RSS: 占用的记忆体大小</span><br><span class="line">TTY: 终端的次要装置号码 (minor device number of tty)</span><br><span class="line">STAT: 该行程的状态，linux的进程有5种状态：</span><br><span class="line">    D 不可中断睡眠 uninterruptible sleep (usually IO)</span><br><span class="line">    R 运行 runnable (on run queue)</span><br><span class="line">    S 可中断睡眠 sleeping</span><br><span class="line">    T 停止 traced or stopped</span><br><span class="line">    Z 僵死 a defunct (”zombie”) process</span><br><span class="line">    s 进程是个领导者进程</span><br><span class="line">    + 该进程为前台进程</span><br><span class="line">    l 该进程是多线程进程</span><br><span class="line">    N 低优先级进程</span><br><span class="line">    &lt; 高优先级进程 </span><br><span class="line">    [] 一个内核线程</span><br><span class="line">    _注: 其它状态还包括W(无驻留页), &lt;(高优先级进程), N(低优先级进程), L(内存锁页)._</span><br><span class="line">START: 启动日期</span><br><span class="line">TIME: 执行的时间</span><br><span class="line">COMMAND:所执行的指令</span><br></pre></td></tr></table></figure>

<p>此外还有一些命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1) ps a 显示现行终端机下的所有程序，包括其他用户的程序。</span><br><span class="line">2）ps -A 显示所有程序。 </span><br><span class="line">3）ps c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。 </span><br><span class="line">4）ps -e 此参数的效果和指定&quot;A&quot;参数相同。 </span><br><span class="line">5）ps e 列出程序时，显示每个程序所使用的环境变量。 </span><br><span class="line">6）ps f 用ASCII字符显示树状结构，表达程序间的相互关系。 </span><br><span class="line">7）ps -H 显示树状结构，表示程序间的相互关系。 </span><br><span class="line">8）ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。 </span><br><span class="line">9）ps s 采用程序信号的格式显示程序状况。 </span><br><span class="line">10）ps S 列出程序时，包括已中断的子程序资料。 </span><br><span class="line">11）ps -t 　指定终端机编号，并列出属于该终端机的程序的状况。 </span><br><span class="line">12）ps u 　以用户为主的格式来显示程序状况。 </span><br><span class="line">13）ps x 　显示所有程序，不以终端机来区分。</span><br></pre></td></tr></table></figure>

<h3 id="top-命令"><a href="#top-命令" class="headerlink" title="top 命令"></a>top 命令</h3><p> top 命令用于实时显示进程（process）的动态。</p>
<p> top 命令语法 <code>top [-] [d delay] [q] [c] [S] [s] [i] [n] [b]</code>。</p>
<p>参数说明：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d : 改变显示的更新速度，或是在交谈式指令列( interactive command)按 s</span><br><span class="line">q : 没有任何延迟的显示速度，如果使用者是有 superuser 的权限，则 top 将会以最高的优先序执行</span><br><span class="line">c : 切换显示模式，共有两种模式，一是只显示执行档的名称，另一种是显示完整的路径与名称</span><br><span class="line">S : 累积模式，会将己完成或消失的子行程 ( dead child process ) 的 CPU time 累积起来</span><br><span class="line">s : 安全模式，将交谈式指令取消, 避免潜在的危机</span><br><span class="line">i : 不显示任何闲置 (idle) 或无用 (zombie) 的行程</span><br><span class="line">n : 更新的次数，完成后将会退出 top</span><br><span class="line">b : 批次档模式，搭配 &quot;n&quot; 参数一起使用，可以用来将 top 的结果输出到档案内</span><br></pre></td></tr></table></figure>

<p>常用命令：</p>
<ol>
<li>显示进程清单<blockquote>
<ol>
<li>top ：显示进程信息</li>
<li>top -c：显示完整命令</li>
<li>top -S：以累积模式显示程序信息</li>
<li>top -n [数字]：设置信息更新次数后退出，如 <code>top -n 3</code> 表示更新3次后停止更新显示</li>
<li>top -d [数字]：设置信息更新时间（单位秒），如 <code>top -d 5</code> 表示更新周期为5秒</li>
</ol>
</blockquote>
</li>
<li>top -p [PID] ：显示指定进程的信息</li>
</ol>
<h3 id="kill-命令"><a href="#kill-命令" class="headerlink" title="kill 命令"></a>kill 命令</h3><p>kill 命令杀掉某进程：</p>
<blockquote>
<ol>
<li>kill 5744：杀掉5744编号的进程</li>
<li>kill -9 5744：强制杀掉5744编号的进程</li>
</ol>
</blockquote>
<h2 id="端口占用情况"><a href="#端口占用情况" class="headerlink" title="端口占用情况"></a>端口占用情况</h2><p>查看端口占用情况可以使用 lsof 和 netstat 命令。</p>
<h3 id="lsof-命令"><a href="#lsof-命令" class="headerlink" title="lsof 命令"></a>lsof 命令</h3><p>lsof(list open files)是一个列出当前系统打开文件的工具。<br>lsof 查看端口占用语法格式：<code>lsof -i:[端口号]</code>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># lsof -i:7000</span></span><br><span class="line">COMMAND   PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME</span><br><span class="line">frps    14636 root    3u  IPv6 2848307      0t0  TCP *:afs3-fileserver (LISTEN)</span><br><span class="line">frps    14636 root    7u  IPv6 4385097      0t0  TCP VM_0_7_centos:afs3-fileserver-&gt;114.88.53.170:53422 (ESTABLISHED)</span><br><span class="line">frps    14636 root    8u  IPv6 4387361      0t0  TCP VM_0_7_centos:afs3-fileserver-&gt;114.88.53.170:53440 (ESTABLISHED)</span><br><span class="line">frps    14636 root   11u  IPv6 4407636      0t0  TCP VM_0_7_centos:afs3-fileserver-&gt;114.88.53.170:53580 (ESTABLISHED)</span><br></pre></td></tr></table></figure>

<p>输出信息含义：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COMMAND：进程名称</span><br><span class="line">PID：进程标识</span><br><span class="line">USER：进程所有者</span><br><span class="line">FD：文件描述符，应用程序通过文件描述符识别文件</span><br><span class="line">TYPE：文件类型</span><br><span class="line">DEVICE：指定磁盘的名称</span><br><span class="line">SIZE：文件的大小</span><br><span class="line">NODE：索引接点，即文件在磁盘上的标识</span><br><span class="line">NAME：打开文件的确切名称</span><br></pre></td></tr></table></figure>

<h3 id="netstat-命令"><a href="#netstat-命令" class="headerlink" title="netstat 命令"></a>netstat 命令</h3><p>netstat 是一个监控TCP/IP网络的非常有用的工具，它可以显示路由表、实际的网络连接以及每一个网络接口设备的状态信息，可显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况。</p>
<p>格式 <code>netstat [-a][-e][-n][-o][-p Protocol][-r][-s][Interval]</code>。</p>
<p>选项的含义：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-a（all） 显示所有socket，包括正在监听的。 </span><br><span class="line">-l 仅列出在Listen(监听)的服务状态。　　</span><br><span class="line">-c 每隔1秒就重新显示一遍，直到用户中断它。 　　</span><br><span class="line">-i 显示所有网络接口的信息，格式“netstat -i”。 　　</span><br><span class="line">-n 以网络IP地址代替名称，显示出网络连接情形。 　</span><br><span class="line">-r 显示核心路由表，格式同“route -e”。 　　</span><br><span class="line">-t（TCP） 显示TCP协议的连接情况 　　</span><br><span class="line">-u（UDP）显示UDP协议的连接情况。 　　</span><br><span class="line">-v 显示正在进行的工作。 　　</span><br><span class="line">-p 显示指定协议信息。 　　</span><br><span class="line">-b 显示在创建每个连接或侦听端口时涉及的可执行程序。 　　</span><br><span class="line">-e 显示以太网统计。此选项可以与 -s 选项结合使用。 　　</span><br><span class="line">-f 显示外部地址的完全限定域名(FQDN)。 　　</span><br><span class="line">-o 显示拥有的与每个连接关联的进程 ID。 　　</span><br><span class="line">-s 显示每个协议的统计。 　　</span><br><span class="line">-x 显示 NetworkDirect 连接、侦听器和共享端点。 　　</span><br><span class="line">-y 显示所有连接的 TCP 连接模板。无法与其他选项结合使用。 　　</span><br><span class="line">interval 重新显示选定的统计，各个显示间暂停的间隔秒数。按 CTRL+C 停止重新显示统计。如果省略，则 netstat 将打印当前的配置信息一次。</span><br></pre></td></tr></table></figure>

<p><code>netstat -lnptu</code> 比较常用 用于列出 tcp和udp 端口和进程等相关信息，使用管道可查看某端口 <code>netstat -lnptu | grep 7000</code>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># netstat -lnptu</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1392/sshd           </span><br><span class="line">tcp6       0      0 :::7000                 :::*                    LISTEN      14636/./frps        </span><br><span class="line">tcp6       0      0 :::6001                 :::*                    LISTEN      14636/./frps        </span><br><span class="line">tcp6       0      0 :::6002                 :::*                    LISTEN      14636/./frps        </span><br><span class="line">udp        0      0 0.0.0.0:68              0.0.0.0:*                           921/dhclient        </span><br><span class="line">udp        0      0 172.17.0.7:123          0.0.0.0:*                           2546/ntpd           </span><br><span class="line">udp        0      0 127.0.0.1:123           0.0.0.0:*                           2546/ntpd           </span><br><span class="line">udp6       0      0 fe80::5054:ff:fed2::123 :::*                                2546/ntpd           </span><br><span class="line">udp6       0      0 ::1:123                 :::*                                2546/ntpd           </span><br><span class="line">[root@VM_0_7_centos ~]<span class="comment"># netstat -lnptu | grep 7000</span></span><br><span class="line">tcp6       0      0 :::7000</span><br></pre></td></tr></table></figure>

<p>常见的组合有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">显示所有端口：netstat -a，显示所有 tcp或udp 端口：netstat -at或-au</span><br><span class="line">显示监听端口：netstat -l， 显示所有监听 tcp或upd 端口：netstat -lt或lu</span><br><span class="line">显示所有端口的统计信息：netstat -s，显示 TCP或UDP 端口的统计信息 netstat -st或-su</span><br></pre></td></tr></table></figure>

<h2 id="网络管理相关"><a href="#网络管理相关" class="headerlink" title="网络管理相关"></a>网络管理相关</h2><ul>
<li>ifconfig：查看所有网络设置</li>
<li>ifconfig [网卡名称] down：禁用网卡</li>
<li>ifconfig [网卡名称] up：启用网卡</li>
<li>ping [ip或网址]：和windows一样，使用【Ctrl+c】取消</li>
</ul>
<h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>TODO</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>linux命令</tag>
        <tag>centos</tag>
        <tag>linux 学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 学习总结(三)：centOS 7 中防火墙配置</title>
    <url>/p/linux-centos-firewall/</url>
    <content><![CDATA[<h1 id="linux-学习总结-三-：centOS-7-中防火墙配置"><a href="#linux-学习总结-三-：centOS-7-中防火墙配置" class="headerlink" title="linux 学习总结(三)：centOS 7 中防火墙配置"></a>linux 学习总结(三)：centOS 7 中防火墙配置</h1><!-- @import "[TOC]" {cmd="toc" depthFrom=2 depthTo=6 orderedList=false} -->

<!-- code_chunk_output -->

<ul>
<li><a href="#查看防火墙信息">查看防火墙信息</a></li>
<li><a href="#systemctl-命令">systemctl 命令</a></li>
<li><a href="#firewall-cmd-命令">firewall-cmd 命令</a></li>
<li><a href="#开启端口">开启端口</a></li>
</ul>
<!-- /code_chunk_output -->



<h2 id="查看防火墙信息"><a href="#查看防火墙信息" class="headerlink" title="查看防火墙信息"></a>查看防火墙信息</h2><p>查看防火墙状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --state</span></span><br><span class="line">running</span><br></pre></td></tr></table></figure>

<p>查看防火墙策略：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --list-all</span></span><br><span class="line">public (active)</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: ens33</span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules:</span><br></pre></td></tr></table></figure>

<p>上面只显示配置文件【/etc/firewalld/zones/public.xml】中的防火墙策略，此配置文件内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># cat /etc/firewalld/zones/public.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;zone&gt;</span><br><span class="line">  &lt;short&gt;Public&lt;/short&gt;</span><br><span class="line">  &lt;description&gt;For use <span class="keyword">in</span> public areas. You <span class="keyword">do</span> not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.&lt;/description&gt;</span><br><span class="line">  &lt;service name=<span class="string">"dhcpv6-client"</span>/&gt;</span><br><span class="line">  &lt;service name=<span class="string">"ssh"</span>/&gt;</span><br><span class="line">&lt;/zone&gt;</span><br></pre></td></tr></table></figure>

<p>查看所有的防火墙策略：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --list-all-zones</span></span><br><span class="line">work</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">drop</span><br><span class="line">  target: DROP</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: </span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">internal</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client mdns samba-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">external</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: yes</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">trusted</span><br><span class="line">  target: ACCEPT</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: </span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">home</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client mdns samba-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dmz</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public (active)</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: ens33</span><br><span class="line">  sources: </span><br><span class="line">  services: dhcpv6-client ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">block</span><br><span class="line">  target: %%REJECT%%</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: </span><br><span class="line">  sources: </span><br><span class="line">  services: </span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  sourceports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules:</span><br></pre></td></tr></table></figure>

<p>上面显示的是目录【/etc/firewalld/zones/】下所有的策略。</p>
<p>重新加载配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<h2 id="systemctl-命令"><a href="#systemctl-命令" class="headerlink" title="systemctl 命令"></a>systemctl 命令</h2><p>systemctl 是 centOS 7 的服务管理工具中主要的工具，它融合之前 service 和 chkconfig 的功能于一体。</p>
<p>启动服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl start firewalld</span></span><br></pre></td></tr></table></figure>

<p>关闭服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl stop firewalld.service</span></span><br></pre></td></tr></table></figure>

<p>重启服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl restart firewalld.service</span></span><br></pre></td></tr></table></figure>

<p>显示服务状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl status firewalld.service</span></span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line"></span><br><span class="line">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: <span class="string">'/usr/sbin/iptables -w2 -w --table filter --delete FO...ailed:</span></span><br><span class="line"><span class="string">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: '</span>/usr/sbin/iptables -w2 -w --table filter --delete FO...ailed:</span><br><span class="line">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: <span class="string">'/usr/sbin/iptables -w2 -w --table filter --delete FO...ailed:</span></span><br><span class="line"><span class="string">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: '</span>/usr/sbin/iptables -w2 -w --table filter --delete IN...ailed:</span><br><span class="line">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: <span class="string">'/usr/sbin/iptables -w2 -w --table filter --delete IN...ailed:</span></span><br><span class="line"><span class="string">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: '</span>/usr/sbin/iptables -w2 -w --table filter --delete OU...ailed:</span><br><span class="line">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: <span class="string">'/usr/sbin/iptables -w2 -w --table filter --delete IN...ailed:</span></span><br><span class="line"><span class="string">Dec 08 04:42:30 localhost.localdomain firewalld[33677]: WARNING: COMMAND_FAILED: '</span>/usr/sbin/iptables -w2 -w --table filter --delete IN...ailed:</span><br><span class="line">Dec 08 04:46:40 localhost.localdomain systemd[1]: Stopping firewalld - dynamic firewall daemon...</span><br><span class="line">Dec 08 04:46:41 localhost.localdomain systemd[1]: Stopped firewalld - dynamic firewall daemon.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br></pre></td></tr></table></figure>

<p>开机时启用服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl enable firewalld.service</span></span><br><span class="line">Created symlink from /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service to /usr/lib/systemd/system/firewalld.service.</span><br><span class="line">Created symlink from /etc/systemd/system/basic.target.wants/firewalld.service to /usr/lib/systemd/system/firewalld.service.</span><br></pre></td></tr></table></figure>

<p>开机时禁用服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl disable firewalld.service</span></span><br><span class="line">Removed symlink /etc/systemd/system/basic.target.wants/firewalld.service.</span><br><span class="line">Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service</span><br></pre></td></tr></table></figure>

<p>查看服务是否开机启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl is-enabled firewalld.service</span></span><br><span class="line">disabled</span><br></pre></td></tr></table></figure>

<p>查看已启动的服务列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl list-unit-files | grep enabled</span></span><br><span class="line">cups.path                                   enabled </span><br><span class="line">abrt-ccpp.service                           enabled </span><br><span class="line">abrt-oops.service                           enabled </span><br><span class="line">abrt-vmcore.service                         enabled </span><br><span class="line">abrt-xorg.service                           enabled </span><br><span class="line">abrtd.service                               enabled </span><br><span class="line">accounts-daemon.service                     enabled </span><br><span class="line">atd.service                                 enabled </span><br><span class="line">auditd.service                              enabled </span><br><span class="line">autovt@.service                             enabled </span><br><span class="line">avahi-daemon.service                        enabled </span><br><span class="line">bluetooth.service                           enabled </span><br><span class="line">chronyd.service                             enabled </span><br><span class="line">crond.service                               enabled </span><br><span class="line">cups.service                                enabled </span><br><span class="line">dbus-org.bluez.service                      enabled </span><br><span class="line">dbus-org.freedesktop.Avahi.service          enabled </span><br><span class="line">dbus-org.freedesktop.ModemManager1.service  enabled </span><br><span class="line">dbus-org.freedesktop.NetworkManager.service enabled </span><br><span class="line">dbus-org.freedesktop.nm-dispatcher.service  enabled </span><br><span class="line">display-manager.service                     enabled </span><br><span class="line">dmraid-activation.service                   enabled </span><br><span class="line">gdm.service                                 enabled </span><br><span class="line">getty@.service                              enabled </span><br><span class="line">irqbalance.service                          enabled </span><br><span class="line">iscsi.service                               enabled </span><br><span class="line">kdump.service                               enabled </span><br><span class="line">ksm.service                                 enabled </span><br><span class="line">ksmtuned.service                            enabled </span><br><span class="line">libstoragemgmt.service                      enabled </span><br><span class="line">libvirtd.service                            enabled </span><br><span class="line">lvm2-monitor.service                        enabled </span><br><span class="line">mdmonitor.service                           enabled </span><br><span class="line">microcode.service                           enabled </span><br><span class="line">ModemManager.service                        enabled </span><br><span class="line">multipathd.service                          enabled </span><br><span class="line">NetworkManager-dispatcher.service           enabled </span><br><span class="line">NetworkManager.service                      enabled </span><br><span class="line">postfix.service                             enabled </span><br><span class="line">qemu-guest-agent.service                    enabled </span><br><span class="line">rngd.service                                enabled </span><br><span class="line">rsyslog.service                             enabled </span><br><span class="line">rtkit-daemon.service                        enabled </span><br><span class="line">smartd.service                              enabled </span><br><span class="line">spice-vdagentd.service                      enabled </span><br><span class="line">sshd.service                                enabled </span><br><span class="line">sysstat.service                             enabled </span><br><span class="line">systemd-readahead-collect.service           enabled </span><br><span class="line">systemd-readahead-drop.service              enabled </span><br><span class="line">systemd-readahead-replay.service            enabled </span><br><span class="line">tuned.service                               enabled </span><br><span class="line">vmtoolsd.service                            enabled </span><br><span class="line">avahi-daemon.socket                         enabled </span><br><span class="line">cups.socket                                 enabled </span><br><span class="line">dm-event.socket                             enabled </span><br><span class="line">iscsid.socket                               enabled </span><br><span class="line">iscsiuio.socket                             enabled </span><br><span class="line">lvm2-lvmetad.socket                         enabled </span><br><span class="line">lvm2-lvmpolld.socket                        enabled </span><br><span class="line">rpcbind.socket                              enabled </span><br><span class="line">virtlockd.socket                            enabled </span><br><span class="line">virtlogd.socket                             enabled </span><br><span class="line">default.target                              enabled </span><br><span class="line">graphical.target                            enabled </span><br><span class="line">nfs-client.target                           enabled </span><br><span class="line">remote-fs.target                            enabled </span><br><span class="line">runlevel5.target                            enabled</span><br></pre></td></tr></table></figure>

<p>查看启动失败的服务列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl --failed</span></span><br><span class="line">  UNIT          LOAD   ACTIVE SUB    DESCRIPTION</span><br><span class="line">● kdump.service loaded failed failed Crash recovery kernel arming</span><br><span class="line"></span><br><span class="line">LOAD   = Reflects whether the unit definition was properly loaded.</span><br><span class="line">ACTIVE = The high-level unit activation state, i.e. generalization of SUB.</span><br><span class="line">SUB    = The low-level unit activation state, values depend on unit <span class="built_in">type</span>.</span><br><span class="line"></span><br><span class="line">1 loaded units listed. Pass --all to see loaded but inactive units, too.</span><br><span class="line">To show all installed unit files use <span class="string">'systemctl list-unit-files'</span>.</span><br></pre></td></tr></table></figure>

<h2 id="firewall-cmd-命令"><a href="#firewall-cmd-命令" class="headerlink" title="firewall-cmd 命令"></a>firewall-cmd 命令</h2><p>查看帮助：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --help</span></span><br></pre></td></tr></table></figure>

<p>查看版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --version</span></span><br><span class="line">FirewallD is not running</span><br></pre></td></tr></table></figure>

<p>打开一下，再查看版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># systemctl start firewalld</span></span><br><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --version</span></span><br><span class="line">0.4.3.2</span><br></pre></td></tr></table></figure>

<p>显示状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --state</span></span><br><span class="line">running</span><br></pre></td></tr></table></figure>

<p>查看所有打开的端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line"></span><br><span class="line">[root@localhost bin]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>是空，一个端口都没打开。</p>
<p>查看区域信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --get-active-zones</span></span><br><span class="line">public</span><br><span class="line">  interfaces: ens33</span><br></pre></td></tr></table></figure>

<p>查看指定的接口所属区域：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --get-zone-of-interface=eht0</span></span><br><span class="line">no zone</span><br></pre></td></tr></table></figure>

<p>拒绝所有包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --panic-on</span></span><br><span class="line"></span><br><span class="line">信号灯超时时间已到</span><br></pre></td></tr></table></figure>

<p>应该是这个命令让连接的虚拟机中的 centOS 断开了。</p>
<p>查看是否拒绝：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --query-panic</span></span><br><span class="line">FirewallD is not running</span><br></pre></td></tr></table></figure>

<p>取消拒绝状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --panic-off</span></span><br><span class="line">FirewallD is not running</span><br></pre></td></tr></table></figure>

<p>提示【FirewallD is not running】，打开再执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl start firewalld</span></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --panic-off</span></span><br><span class="line">Warning: NOT_ENABLED: panic mode is not enabled</span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p>更新防火墙规则(重新加载配置文件)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<h2 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h2><p>以端口80为例，添加一个端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --add-port=80/tcp --permanent</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p>permanent 参数表示永久生效，如果不加则重启就失效。</p>
<p>重新加载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p>查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --query-port=80/tcp</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>

<p>删除：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --remove-port=80/tcp --permanent</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --query-port=80/tcp</span></span><br><span class="line">no</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
        <tag>linux 学习总结</tag>
        <tag>linux防火墙</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 学习总结(一)：网络配置相关</title>
    <url>/p/linux-centos-network/</url>
    <content><![CDATA[<p><code>ifconfig</code> 显示网络设备信息，如虚拟机中的一台 CentOS：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig</span></span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.2.57  netmask 255.255.255.0  broadcast 192.168.2.255</span><br><span class="line">        inet6 fe80::80d2:ed19:d2d6:8db8  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:fb:71:25  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 556385  bytes 794263726 (757.4 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 451226  bytes 46338353 (44.1 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 2304043  bytes 8814826709 (8.2 GiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2304043  bytes 8814826709 (8.2 GiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:6d:7c:70  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>腾讯云一台CentOS：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.17.0.7  netmask 255.255.240.0  broadcast 172.17.15.255</span><br><span class="line">        inet6 fe80::5054:ff:fed2:bdd2  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 52:54:00:d2:bd:d2  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 3083792  bytes 645073156 (615.1 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2866630  bytes 746200829 (711.6 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 1837  bytes 90013 (87.9 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 1837  bytes 90013 (87.9 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>ens33 表示第一块网卡，inet 192.168.2.57 为网卡的ip地址，netmask 255.255.255.0 为子网掩码，broadcast 192.168.2.255 为广播地址</li>
<li>lo 为主机的回环地址</li>
</ul>
<h2 id="一、查看网络配置"><a href="#一、查看网络配置" class="headerlink" title="一、查看网络配置"></a>一、查看网络配置</h2><p>查看网络配置文件(xx是对应的数字)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-ensxx</span><br></pre></td></tr></table></figure>

<p>虚拟机中的初始如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]<span class="comment"># cat ifcfg-ens33 </span></span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line">BOOTPROTO=<span class="string">"dhcp"</span></span><br><span class="line">DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">PEERDNS=<span class="string">"yes"</span></span><br><span class="line">PEERROUTES=<span class="string">"yes"</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">"no"</span></span><br><span class="line">IPV6INIT=<span class="string">"yes"</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">"yes"</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">IPV6_PEERDNS=<span class="string">"yes"</span></span><br><span class="line">IPV6_PEERROUTES=<span class="string">"yes"</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">"no"</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">"stable-privacy"</span></span><br><span class="line">NAME=<span class="string">"ens33"</span></span><br><span class="line">UUID=<span class="string">"208128e4-ad02-4f81-aef1-601f533b485f"</span></span><br><span class="line">DEVICE=<span class="string">"ens33"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>腾讯云中的如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line"><span class="comment"># Created by cloud-init on instance boot automatically, do not edit.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=52:54:00:d2:bd:d2</span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line">ONBOOT=yes</span><br><span class="line">PERSISTENT_DHCLIENT=yes</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">USERCTL=no</span><br><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="二、修改网络配置"><a href="#二、修改网络配置" class="headerlink" title="二、修改网络配置"></a>二、修改网络配置</h2><p>腾讯云的不能修改，虚拟机中的修改项(有修改没有则新增)如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">IPADDR=<span class="string">"192.168.2.57"</span></span><br><span class="line">GATEWAY=<span class="string">"192.168.2.1"</span></span><br><span class="line">NETMASK=<span class="string">"255.255.255.0"</span></span><br><span class="line">DNS=<span class="string">"8.8.8.8"</span></span><br><span class="line">DNS1=<span class="string">"114.114.114.114"</span></span><br></pre></td></tr></table></figure>

<p>保存后，重启网卡：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>

<p>查看网卡状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status network</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl status network</span></span><br><span class="line">● network.service - LSB: Bring up/down networking</span><br><span class="line">   Loaded: loaded (/etc/rc.d/init.d/network; bad; vendor preset: disabled)</span><br><span class="line">   Active: active (exited) since Mon 2019-12-02 01:13:40 PST; 6min ago</span><br><span class="line">     Docs: man:systemd-sysv-generator(8)</span><br><span class="line">  Process: 15058 ExecStop=/etc/rc.d/init.d/network stop (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 15225 ExecStart=/etc/rc.d/init.d/network start (code=exited, status=0/SUCCESS)</span><br><span class="line"></span><br><span class="line">Dec 02 01:13:39 localhost.localdomain systemd[1]: Starting LSB: Bring up/down...</span><br><span class="line">Dec 02 01:13:40 localhost.localdomain network[15225]: Bringing up loopback <span class="keyword">in</span>...</span><br><span class="line">Dec 02 01:13:40 localhost.localdomain network[15225]: Bringing up interface e...</span><br><span class="line">Dec 02 01:13:40 localhost.localdomain network[15225]: [  OK  ]</span><br><span class="line">Dec 02 01:13:40 localhost.localdomain systemd[1]: Started LSB: Bring up/down ...</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="三、测试网络"><a href="#三、测试网络" class="headerlink" title="三、测试网络"></a>三、测试网络</h2><p>测试网络是否配置成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping www.baidu.com</span><br><span class="line">ping [宿主IP]</span><br></pre></td></tr></table></figure>

<p>能够收到数据包说明配置成功。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
        <tag>linux 学习总结</tag>
        <tag>linux网络</tag>
        <tag>linux网络配置</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ 实战笔记（一）：CentOS 7 安装 RabbitMQ</title>
    <url>/p/rabbitmq-centos/</url>
    <content><![CDATA[<h2 id="一、环境安装"><a href="#一、环境安装" class="headerlink" title="一、环境安装"></a>一、环境安装</h2><p>RabbitMQ 是 Erlang 语言开发的，所以需要先安装该语言环境，而该语言又需要很多依赖。</p>
<h3 id="1-1-安装依赖"><a href="#1-1-安装依赖" class="headerlink" title="1.1 安装依赖"></a>1.1 安装依赖</h3><p>使用命令 <code>yum install gcc gcc-c++ glibc-devel make ncurses-devel openssl-devel autoconf java-1.8.0-openjdk-devel git wget wxBase.x86_64</code> 安装需要的依赖：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install gcc gcc-c++ glibc-devel make ncurses-devel openssl-devel autoconf java-1.8.0-openjdk-devel git wget wxBase.x86_64</span></span><br><span class="line">...</span><br><span class="line">Installed:</span><br><span class="line">  autoconf.noarch 0:2.69-11.el7                                       git.x86_64 0:1.8.3.1-21.el7_7                           </span><br><span class="line">  java-1.8.0-openjdk-devel.x86_64 1:1.8.0.242.b08-0.el7_7             ncurses-devel.x86_64 0:5.9-14.20130511.el7_4            </span><br><span class="line">  openssl-devel.x86_64 1:1.0.2k-19.el7                               </span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  keyutils-libs-devel.x86_64 0:1.5.8-3.el7   krb5-devel.x86_64 0:1.15.1-37.el7_7.2   libcom_err-devel.x86_64 0:1.42.9-16.el7  </span><br><span class="line">  libverto-devel.x86_64 0:0.2.5-4.el7        m4.x86_64 0:1.4.16-10.el7               perl-Data-Dumper.x86_64 0:2.145-3.el7    </span><br><span class="line">  perl-Error.noarch 1:0.17020-2.el7          perl-Git.noarch 0:1.8.3.1-21.el7_7      perl-TermReadKey.x86_64 0:2.30-20.el7    </span><br><span class="line">  zlib-devel.x86_64 0:1.2.7-18.el7          </span><br><span class="line"></span><br><span class="line">Updated:</span><br><span class="line">  glibc-devel.x86_64 0:2.17-292.el7             make.x86_64 1:3.82-24.el7             wget.x86_64 0:1.14-18.el7_6.1            </span><br><span class="line"></span><br><span class="line">Dependency Updated:</span><br><span class="line">  copy-jdk-configs.noarch 0:3.3-10.el7_5                    e2fsprogs.x86_64 0:1.42.9-16.el7                                  </span><br><span class="line">  e2fsprogs-libs.x86_64 0:1.42.9-16.el7                     glibc.x86_64 0:2.17-292.el7                                       </span><br><span class="line">  glibc-common.x86_64 0:2.17-292.el7                        glibc-headers.x86_64 0:2.17-292.el7                               </span><br><span class="line">  java-1.8.0-openjdk.x86_64 1:1.8.0.242.b08-0.el7_7         java-1.8.0-openjdk-headless.x86_64 1:1.8.0.242.b08-0.el7_7        </span><br><span class="line">  krb5-libs.x86_64 0:1.15.1-37.el7_7.2                      krb5-workstation.x86_64 0:1.15.1-37.el7_7.2                       </span><br><span class="line">  libcom_err.x86_64 0:1.42.9-16.el7                         libkadm5.x86_64 0:1.15.1-37.el7_7.2                               </span><br><span class="line">  libss.x86_64 0:1.42.9-16.el7                              ncurses.x86_64 0:5.9-14.20130511.el7_4                            </span><br><span class="line">  ncurses-base.noarch 0:5.9-14.20130511.el7_4               ncurses-libs.x86_64 0:5.9-14.20130511.el7_4                       </span><br><span class="line">  zlib.x86_64 0:1.2.7-18.el7                               </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>

<h3 id="1-2-安装-Erlang"><a href="#1-2-安装-Erlang" class="headerlink" title="1.2 安装 Erlang"></a>1.2 安装 Erlang</h3><p>Erlang 官网下载地址：<a href="http://erlang.org/download" target="_blank" rel="noopener">http://erlang.org/download</a></p>
<p>本次选择 22.0 版本下载：<code>wget http://erlang.org/download/otp_src_22.0.tar.gz</code></p>
<p>直接从这个地址下载速度比较慢，建议从其他地方下载。</p>
<p>将下载好的文件移动到 /usr/local 目录下，解压后再进入目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cp otp_src_22.0.tar.gz /usr/local</span></span><br><span class="line">[root@localhost ~]<span class="comment"># tar -zxvf otp_src_22.0.tar.gz</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd /usr/local/otp_src_22.0/</span></span><br><span class="line">[root@localhost otp_src_22.0]<span class="comment"># ls</span></span><br><span class="line">AUTHORS        CONTRIBUTING.md         Jenkinsfile.benchmark      make             otp_versions.table     scripts</span><br><span class="line">bin            erl-build-tool-vars.sh  Jenkinsfile.run-otp-tests  Makefile.in      plt                    system</span><br><span class="line">bootstrap      erts                    Jenkinsfile.windows        otp_build        prebuilt.files         TAR.include</span><br><span class="line">configure      HOWTO                   lib                        otp_patch_apply  proposed_updates.json  xcomp</span><br><span class="line">configure.src  Jenkinsfile</span><br></pre></td></tr></table></figure>

<p>返回上一级目录，创建安装的目录 erlang，当然也可以不切换目录直接使用命 <code>mkdir ../erlang</code> 创建 erlang：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost otp_src_22.0]# cd ..</span><br><span class="line">[root@localhost local]# mkdir erlang</span><br></pre></td></tr></table></figure>

<p>进入目录 <code>otp_src_22.0</code>，配置安装路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd otp_src_22.0/</span></span><br><span class="line">[root@localhost otp_src_22.0]<span class="comment"># ./configure --prefix=/usr/local/erlang</span></span><br><span class="line">...</span><br><span class="line">configure: WARNING:</span><br><span class="line">                wxWidgets must be installed on your system.</span><br><span class="line"></span><br><span class="line">                Please check that wx-config is <span class="keyword">in</span> path, the directory</span><br><span class="line">                <span class="built_in">where</span> wxWidgets libraries are installed (returned by</span><br><span class="line">                <span class="string">'wx-config --libs'</span> or <span class="string">'wx-config --static --libs'</span> <span class="built_in">command</span>)</span><br><span class="line">                is <span class="keyword">in</span> LD_LIBRARY_PATH or equivalent variable and</span><br><span class="line">                wxWidgets version is 2.8.4 or above.</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  APPLICATIONS DISABLED  **********************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">odbc           : ODBC library - link check failed</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  APPLICATIONS INFORMATION  *******************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">wx             : wxWidgets not found, wx will NOT be usable</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  DOCUMENTATION INFORMATION  ******************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">documentation  : </span><br><span class="line">                 fop is missing.</span><br><span class="line">                 Using fakefop to generate placeholder PDF files.</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">[root@localhost otp_src_22.0]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>先使用命令 <code>make</code> 编译下，然后使用命令 <code>make install</code> 进行安装，安装完成后会在目录【/usr.local/erlang/】中产生两个文件夹，其中 bin 就是安装的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost otp_src_22.0]<span class="comment"># make</span></span><br><span class="line">...</span><br><span class="line">[root@localhost otp_src_22.0]<span class="comment"># make install</span></span><br><span class="line">...</span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># ls erlang/</span></span><br><span class="line">bin  lib</span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># ls erlang/bin/</span></span><br><span class="line">ct_run  dialyzer  epmd  erl  erlc  escript  run_erl  to_erl  typer</span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>进入 bin 目录就可以使用 erl 命令了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd erlang/bin</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ./erl</span></span><br><span class="line">Erlang/OTP 22 [erts-10.4] [<span class="built_in">source</span>] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1] [hipe]</span><br><span class="line"></span><br><span class="line">Eshell V10.4  (abort with ^G)</span><br><span class="line">1&gt;</span><br></pre></td></tr></table></figure>

<p>为了方便使用可以添加环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># echo 'export PATH=$PATH:/usr/local/erlang/bin' &gt;&gt; /etc/profile</span></span><br><span class="line">[root@localhost bin]<span class="comment"># source /etc/profile</span></span><br><span class="line">[root@localhost bin]<span class="comment"># erl</span></span><br><span class="line">Erlang/OTP 22 [erts-10.4] [<span class="built_in">source</span>] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1] [hipe]</span><br><span class="line"></span><br><span class="line">Eshell V10.4  (abort with ^G)</span><br><span class="line">1&gt;</span><br></pre></td></tr></table></figure>

<h2 id="二、安装-RabbitMQ"><a href="#二、安装-RabbitMQ" class="headerlink" title="二、安装 RabbitMQ"></a>二、安装 RabbitMQ</h2><p>github 地址：<a href="https://github.com/rabbitmq/rabbitmq-server/" target="_blank" rel="noopener">https://github.com/rabbitmq/rabbitmq-server/</a></p>
<p>本次下载：<a href="https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.24/rabbitmq-server-generic-unix-3.7.24.tar.xz" target="_blank" rel="noopener">https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.24/rabbitmq-server-generic-unix-3.7.24.tar.xz</a></p>
<p>下载的是 .tar.xz 文件，是一个压缩类型的文件：</p>
<p><img src="content/2020-04-06_194847.png" alt="1949"></p>
<p>由于文件下载太慢，这边直接将下载好的文件传到 CentOS 上。</p>
<p>需要用 xz 解压，没有则需要使用命令 <code>yum install -y xz</code> 安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># yum install -y xz</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">gitlab_gitlab-ce/x86_64/signature                                                                       |  862 B  00:00:00     </span><br><span class="line">gitlab_gitlab-ce/x86_64/signature                                                                       | 1.0 kB  00:00:00 !!! </span><br><span class="line">gitlab_gitlab-ce-source/signature                                                                       |  836 B  00:00:00     </span><br><span class="line">gitlab_gitlab-ce-source/signature                                                                       |  951 B  00:00:00 !!! </span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.nju.edu.cn</span><br><span class="line"> * extras: mirrors.nju.edu.cn</span><br><span class="line"> * updates: mirrors.nju.edu.cn</span><br><span class="line">Package xz-5.2.2-1.el7.x86_64 already installed and latest version</span><br><span class="line">Nothing to <span class="keyword">do</span></span><br><span class="line">[root@localhost bin]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>如上我这边已经安装过了。</p>
<p>将压缩包移动到目录【/usr/local】，然后解压：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># mv ~/rabbitmq-server-generic-unix-3.7.24.tar.xz /usr/local/</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># xz -d rabbitmq-server-generic-unix-3.7.24.tar.xz</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># tar -xvf rabbitmq-server-generic-unix-3.7.24.tar</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd rabbitmq_server-3.7.24/</span></span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># ll</span></span><br><span class="line">total 232</span><br><span class="line">drwxr-xr-x. 2 root root  8192 Feb 12 14:18 ebin</span><br><span class="line">drwxr-xr-x. 2 root root    77 Feb 12 14:18 escript</span><br><span class="line">drwxr-xr-x. 3 root root    22 Feb 12 14:18 etc</span><br><span class="line">drwxr-xr-x. 2 root root   242 Feb 12 14:18 include</span><br><span class="line">-rw-r--r--. 1 root root    75 Feb 12 14:18 INSTALL</span><br><span class="line">-rw-r--r--. 1 root root 28095 Feb 12 14:18 LICENSE</span><br><span class="line">-rw-r--r--. 1 root root 11352 Feb 12 14:18 LICENSE-APACHE2</span><br><span class="line">-rw-r--r--. 1 root root 11360 Feb 12 14:18 LICENSE-APACHE2-excanvas</span><br><span class="line">-rw-r--r--. 1 root root 11358 Feb 12 14:18 LICENSE-APACHE2-ExplorerCanvas</span><br><span class="line">-rw-r--r--. 1 root root 10851 Feb 12 14:18 LICENSE-APL2-Stomp-Websocket</span><br><span class="line">-rw-r--r--. 1 root root  1207 Feb 12 14:18 LICENSE-BSD-base64js</span><br><span class="line">-rw-r--r--. 1 root root  1469 Feb 12 14:18 LICENSE-BSD-recon</span><br><span class="line">-rw-r--r--. 1 root root  1274 Feb 12 14:18 LICENSE-erlcloud</span><br><span class="line">-rw-r--r--. 1 root root  1471 Feb 12 14:18 LICENSE-httpc_aws</span><br><span class="line">-rw-r--r--. 1 root root   757 Feb 12 14:18 LICENSE-ISC-cowboy</span><br><span class="line">-rw-r--r--. 1 root root  1084 Feb 12 14:18 LICENSE-MIT-EJS</span><br><span class="line">-rw-r--r--. 1 root root  1087 Feb 12 14:18 LICENSE-MIT-EJS10</span><br><span class="line">-rw-r--r--. 1 root root  1057 Feb 12 14:18 LICENSE-MIT-Erlware-Commons</span><br><span class="line">-rw-r--r--. 1 root root  1069 Feb 12 14:18 LICENSE-MIT-Flot</span><br><span class="line">-rw-r--r--. 1 root root  1075 Feb 12 14:18 LICENSE-MIT-jQuery</span><br><span class="line">-rw-r--r--. 1 root root  1075 Feb 12 14:18 LICENSE-MIT-jQuery164</span><br><span class="line">-rw-r--r--. 1 root root  1087 Feb 12 14:18 LICENSE-MIT-Mochi</span><br><span class="line">-rw-r--r--. 1 root root  1073 Feb 12 14:18 LICENSE-MIT-Sammy</span><br><span class="line">-rw-r--r--. 1 root root  1076 Feb 12 14:18 LICENSE-MIT-Sammy060</span><br><span class="line">-rw-r--r--. 1 root root 24900 Feb 12 14:18 LICENSE-MPL</span><br><span class="line">-rw-r--r--. 1 root root 16726 Feb 12 14:18 LICENSE-MPL2</span><br><span class="line">-rw-r--r--. 1 root root 24899 Feb 12 14:18 LICENSE-MPL-RabbitMQ</span><br><span class="line">-rw-r--r--. 1 root root  1471 Feb 12 14:18 LICENSE-rabbitmq_aws</span><br><span class="line">drwxr-xr-x. 2 root root  4096 Feb 12 14:18 plugins</span><br><span class="line">drwxr-xr-x. 3 root root    20 Feb 12 14:18 priv</span><br><span class="line">drwxr-xr-x. 2 root root   163 Feb 12 14:18 sbin</span><br><span class="line">drwxr-xr-x. 3 root root    17 Feb 12 14:18 share</span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>使用命令 <code>rabbitmq-server</code> 启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># ./sbin/rabbitmq-server</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##  ##</span></span><br><span class="line">  <span class="comment">##  ##      RabbitMQ 3.7.24. Copyright (c) 2007-2020 Pivotal Software, Inc.</span></span><br><span class="line">  <span class="comment">##########  Licensed under the MPL.  See https://www.rabbitmq.com/</span></span><br><span class="line">  <span class="comment">######  ##</span></span><br><span class="line">  <span class="comment">##########  Logs: /usr/local/rabbitmq_server-3.7.24/var/log/rabbitmq/rabbit@localhost.log</span></span><br><span class="line">                    /usr/<span class="built_in">local</span>/rabbitmq_server-3.7.24/var/<span class="built_in">log</span>/rabbitmq/rabbit@localhost_upgrade.log</span><br><span class="line"></span><br><span class="line">              Starting broker...</span><br><span class="line"> completed with 0 plugins.</span><br></pre></td></tr></table></figure>

<p>为了方便可在命令后加上参数 <code>-detached</code> 让其在后台运行。</p>
<p>使用命令 <code>rabbitmqctl status</code> 查看状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost sbin]<span class="comment"># ./rabbitmqctl status</span></span><br><span class="line">Status of node rabbit@localhost ...</span><br><span class="line">[&#123;pid,65261&#125;,</span><br><span class="line"> &#123;running_applications,</span><br><span class="line">     [&#123;rabbit,<span class="string">"RabbitMQ"</span>,<span class="string">"3.7.24"</span>&#125;,</span><br><span class="line">      &#123;mnesia,<span class="string">"MNESIA  CXC 138 12"</span>,<span class="string">"4.16"</span>&#125;,</span><br><span class="line">      &#123;rabbit_common,</span><br><span class="line">          <span class="string">"Modules shared by rabbitmq-server and rabbitmq-erlang-client"</span>,</span><br><span class="line">          <span class="string">"3.7.24"</span>&#125;,</span><br><span class="line">      &#123;ranch,<span class="string">"Socket acceptor pool for TCP protocols."</span>,<span class="string">"1.7.1"</span>&#125;,</span><br><span class="line">      &#123;ssl,<span class="string">"Erlang/OTP SSL application"</span>,<span class="string">"9.3"</span>&#125;,</span><br><span class="line">      &#123;public_key,<span class="string">"Public key infrastructure"</span>,<span class="string">"1.6.7"</span>&#125;,</span><br><span class="line">      &#123;asn1,<span class="string">"The Erlang ASN1 compiler version 5.0.9"</span>,<span class="string">"5.0.9"</span>&#125;,</span><br><span class="line">      &#123;credentials_obfuscation,</span><br><span class="line">          <span class="string">"Helper library that obfuscates sensitive values in process state"</span>,</span><br><span class="line">          <span class="string">"1.1.0"</span>&#125;,</span><br><span class="line">      &#123;crypto,<span class="string">"CRYPTO"</span>,<span class="string">"4.5"</span>&#125;,</span><br><span class="line">      &#123;inets,<span class="string">"INETS  CXC 138 49"</span>,<span class="string">"7.0.8"</span>&#125;,</span><br><span class="line">      &#123;os_mon,<span class="string">"CPO  CXC 138 46"</span>,<span class="string">"2.5"</span>&#125;,</span><br><span class="line">      &#123;sysmon_handler,<span class="string">"Rate-limiting system_monitor event handler"</span>,<span class="string">"1.1.0"</span>&#125;,</span><br><span class="line">      &#123;tools,<span class="string">"DEVTOOLS  CXC 138 16"</span>,<span class="string">"3.2"</span>&#125;,</span><br><span class="line">      &#123;xmerl,<span class="string">"XML parser"</span>,<span class="string">"1.3.21"</span>&#125;,</span><br><span class="line">      &#123;stdout_formatter,</span><br><span class="line">          <span class="string">"Tools to format paragraphs, lists and tables as plain text"</span>,</span><br><span class="line">          <span class="string">"0.2.2"</span>&#125;,</span><br><span class="line">      &#123;jsx,<span class="string">"a streaming, evented json parsing toolkit"</span>,<span class="string">"2.9.0"</span>&#125;,</span><br><span class="line">      &#123;observer_cli,<span class="string">"Visualize Erlang Nodes On The Command Line"</span>,<span class="string">"1.5.2"</span>&#125;,</span><br><span class="line">      &#123;recon,<span class="string">"Diagnostic tools for production use"</span>,<span class="string">"2.5.0"</span>&#125;,</span><br><span class="line">      &#123;lager,<span class="string">"Erlang logging framework"</span>,<span class="string">"3.8.0"</span>&#125;,</span><br><span class="line">      &#123;goldrush,<span class="string">"Erlang event stream processor"</span>,<span class="string">"0.1.9"</span>&#125;,</span><br><span class="line">      &#123;compiler,<span class="string">"ERTS  CXC 138 10"</span>,<span class="string">"7.4"</span>&#125;,</span><br><span class="line">      &#123;syntax_tools,<span class="string">"Syntax tools"</span>,<span class="string">"2.2"</span>&#125;,</span><br><span class="line">      &#123;sasl,<span class="string">"SASL  CXC 138 11"</span>,<span class="string">"3.4"</span>&#125;,</span><br><span class="line">      &#123;stdlib,<span class="string">"ERTS  CXC 138 10"</span>,<span class="string">"3.9"</span>&#125;,</span><br><span class="line">      &#123;kernel,<span class="string">"ERTS  CXC 138 10"</span>,<span class="string">"6.4"</span>&#125;]&#125;,</span><br><span class="line"> &#123;os,&#123;unix,linux&#125;&#125;,</span><br><span class="line"> &#123;erlang_version,</span><br><span class="line">     <span class="string">"Erlang/OTP 22 [erts-10.4] [source] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:64] [hipe]\n"</span>&#125;,</span><br><span class="line"> &#123;memory,</span><br><span class="line">     [&#123;connection_readers,0&#125;,</span><br><span class="line">      &#123;connection_writers,0&#125;,</span><br><span class="line">      &#123;connection_channels,0&#125;,</span><br><span class="line">      &#123;connection_other,0&#125;,</span><br><span class="line">      &#123;queue_procs,0&#125;,</span><br><span class="line">      &#123;queue_slave_procs,0&#125;,</span><br><span class="line">      &#123;plugins,11916&#125;,</span><br><span class="line">      &#123;other_proc,25933696&#125;,</span><br><span class="line">      &#123;metrics,196012&#125;,</span><br><span class="line">      &#123;mgmt_db,0&#125;,</span><br><span class="line">      &#123;mnesia,76168&#125;,</span><br><span class="line">      &#123;other_ets,2571704&#125;,</span><br><span class="line">      &#123;binary,142584&#125;,</span><br><span class="line">      &#123;msg_index,32064&#125;,</span><br><span class="line">      &#123;code,21526815&#125;,</span><br><span class="line">      &#123;atom,1180881&#125;,</span><br><span class="line">      &#123;other_system,12259352&#125;,</span><br><span class="line">      &#123;allocated_unused,5405896&#125;,</span><br><span class="line">      &#123;reserved_unallocated,3940352&#125;,</span><br><span class="line">      &#123;strategy,rss&#125;,</span><br><span class="line">      &#123;total,[&#123;erlang,63931192&#125;,&#123;rss,73277440&#125;,&#123;allocated,69337088&#125;]&#125;]&#125;,</span><br><span class="line"> &#123;alarms,[]&#125;,</span><br><span class="line"> &#123;listeners,[&#123;clustering,25672,<span class="string">"::"</span>&#125;,&#123;amqp,5672,<span class="string">"::"</span>&#125;]&#125;,</span><br><span class="line"> &#123;vm_memory_calculation_strategy,rss&#125;,</span><br><span class="line"> &#123;vm_memory_high_watermark,0.4&#125;,</span><br><span class="line"> &#123;vm_memory_limit,1268578713&#125;,</span><br><span class="line"> &#123;disk_free_limit,50000000&#125;,</span><br><span class="line"> &#123;disk_free,6577901568&#125;,</span><br><span class="line"> &#123;file_descriptors,</span><br><span class="line">     [&#123;total_limit,924&#125;,&#123;total_used,2&#125;,&#123;sockets_limit,829&#125;,&#123;sockets_used,0&#125;]&#125;,</span><br><span class="line"> &#123;processes,[&#123;<span class="built_in">limit</span>,1048576&#125;,&#123;used,231&#125;]&#125;,</span><br><span class="line"> &#123;run_queue,1&#125;,</span><br><span class="line"> &#123;uptime,354&#125;,</span><br><span class="line"> &#123;kernel,&#123;net_ticktime,60&#125;&#125;]</span><br><span class="line">[root@localhost sbin]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>服务关闭使用命令 <code>rabbitmqctl stop</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost sbin]<span class="comment"># ./rabbitmqctl stop</span></span><br><span class="line">Stopping and halting node rabbit@localhost ...</span><br></pre></td></tr></table></figure>

<p>至此，RabbitMQ 安装完成，为了方便管理，添加 RabbitMQ 环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># echo 'export PATH=$PATH:/usr/local/rabbitmq_server-3.7.24/sbin' &gt;&gt; /etc/profile</span></span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>

<p>让 RabbitMQ 后台运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># rabbitmq-server -detached</span></span><br><span class="line">Warning: PID file not written; -detached was passed.</span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># rabbitmqctl status</span></span><br><span class="line">Status of node rabbit@localhost ...</span><br><span class="line">[&#123;pid,68675&#125;,</span><br><span class="line"> &#123;running_applications,</span><br><span class="line">     [&#123;rabbit,<span class="string">"RabbitMQ"</span>,<span class="string">"3.7.24"</span>&#125;,</span><br><span class="line">     ...</span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>查看进程：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># netstat -lnpt</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      87882/./redis-serve </span><br><span class="line">tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      1/systemd           </span><br><span class="line">tcp        0      0 0.0.0.0:4369            0.0.0.0:*               LISTEN      65206/epmd          </span><br><span class="line">tcp        0      0 192.168.122.1:53        0.0.0.0:*               LISTEN      1609/dnsmasq        </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      3653/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      888/cupsd           </span><br><span class="line">tcp        0      0 0.0.0.0:15672           0.0.0.0:*               LISTEN      68675/beam.smp      </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      4385/master         </span><br><span class="line">tcp        0      0 0.0.0.0:25672           0.0.0.0:*               LISTEN      68675/beam.smp      </span><br><span class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      87882/./redis-serve </span><br><span class="line">tcp6       0      0 :::111                  :::*                    LISTEN      1/systemd           </span><br><span class="line">tcp6       0      0 :::4369                 :::*                    LISTEN      65206/epmd          </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      3653/sshd           </span><br><span class="line">tcp6       0      0 ::1:631                 :::*                    LISTEN      888/cupsd           </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      4385/master         </span><br><span class="line">tcp6       0      0 :::5672                 :::*                    LISTEN      68675/beam.smp      </span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>68675 就是 RabbitMQ 的进程。</p>
<h2 id="三、启用-RabbitMQ-的管理插件"><a href="#三、启用-RabbitMQ-的管理插件" class="headerlink" title="三、启用 RabbitMQ 的管理插件"></a>三、启用 RabbitMQ 的管理插件</h2><p>RabbitMQ自带一个 web 管理系统，只需通过启动插件 rabbitmq_management 就可以：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment"># rabbitmq-plugins enable rabbitmq_management</span></span><br><span class="line">Enabling plugins on node rabbit@localhost:</span><br><span class="line">rabbitmq_management</span><br><span class="line">The following plugins have been configured:</span><br><span class="line">  rabbitmq_management</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_web_dispatch</span><br><span class="line">Applying plugin configuration to rabbit@localhost...</span><br><span class="line">The following plugins have been enabled:</span><br><span class="line">  rabbitmq_management</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_web_dispatch</span><br><span class="line"></span><br><span class="line">started 3 plugins.</span><br><span class="line">[root@localhost rabbitmq_server-3.7.24]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>在浏览器中输入地址【<a href="http://ip:15672】就可以访问了，使用">http://ip:15672】就可以访问了，使用</a> guest/guest 登录：</p>
<p><img src="content/2020-04-06_203123.png" alt="2031"></p>
<p><img src="content/2020-04-06_204819.png" alt="2048"></p>
<h2 id="P、常见问题"><a href="#P、常见问题" class="headerlink" title="P、常见问题"></a>P、常见问题</h2><h3 id="P-1-User-can-only-log-in-via-localhost"><a href="#P-1-User-can-only-log-in-via-localhost" class="headerlink" title="P.1 User can only log in via localhost"></a>P.1 User can only log in via localhost</h3><p><img src="content/2020-04-06_203310.png" alt="2033"></p>
<p>出现这个问题的原因是 RabbitMQ 从 3.3.0 版本开始禁止使用 guest/guest 权限通过除 localhost 以外的地址访问。</p>
<p>将 ebin/rabbit.app 中的内容 <code>{loopback_users, [&lt;&lt;&quot;guest&quot;&gt;&gt;]},</code> 改为 <code>{loopback_users, []},</code>，然后重启服务即可。</p>
]]></content>
      <categories>
        <category>消息队列</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（九）： 群晖系统的使用之 Monments</title>
    <url>/p/nas-monments/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221026.png" alt="20200505221320"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221136.png" alt="20200505221331"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221455.png" alt="20200505221506"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221529.png" alt="20200505221542"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222217.png" alt="20200505222249"></p>
<p>安装完成，主页：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222524.png" alt="20200505222540"></p>
<h2 id="手机端登录"><a href="#手机端登录" class="headerlink" title="手机端登录"></a>手机端登录</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222627.png" alt="20200505222635"></p>
<p>开启照片备份：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222821.png" alt="20200505222844"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_222831.png" alt="20200505222856"></p>
<h2 id="电脑端使用"><a href="#电脑端使用" class="headerlink" title="电脑端使用"></a>电脑端使用</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_224032.png" alt="20200505224042"></p>
<h2 id="异常问题"><a href="#异常问题" class="headerlink" title="异常问题"></a>异常问题</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221900.png" alt="20200505221907"><br><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221926.png" alt="20200505221931"><br><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_221949.png" alt="20200505221958"></p>
]]></content>
      <categories>
        <category>nas</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
        <tag>Monments</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（十一）：群晖系统的使用之 Frp 内网穿透</title>
    <url>/p/nas-network-frp/</url>
    <content><![CDATA[<p>服务端部署参考我的另一篇文章：<a href="/p/frp-remote-desk/">frp 内网穿透实战（一）：远程桌面连接 windows</a></p>
<p>使用命令 <code>wget http://kungge.com/assist/frp_0.31.2_linux_amd64.tar.gz</code> 下载 frp 包，然后将包移动至目录【/usr/local/】下，进入该目录解压，进入解压的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Synology:~<span class="comment"># mv -f frp_0.31.2_linux_amd64.tar.gz /usr/local/</span></span><br><span class="line">root@Synology:~<span class="comment"># cd /usr/local/</span></span><br><span class="line">root@Synology:/usr/<span class="built_in">local</span><span class="comment"># ls</span></span><br><span class="line">bin  etc  frp_0.31.2_linux_amd64.tar.gz  lib  libexec  node  packages  share  SynologyApplicationService  transmission  zerotier</span><br><span class="line">root@Synology:/usr/<span class="built_in">local</span><span class="comment"># tar -zxvf frp_0.31.2_linux_amd64.tar.gz </span></span><br><span class="line">frp_0.31.2_linux_amd64/</span><br><span class="line">frp_0.31.2_linux_amd64/frps_full.ini</span><br><span class="line">frp_0.31.2_linux_amd64/frps.ini</span><br><span class="line">frp_0.31.2_linux_amd64/frpc</span><br><span class="line">frp_0.31.2_linux_amd64/frpc_full.ini</span><br><span class="line">frp_0.31.2_linux_amd64/frps</span><br><span class="line">frp_0.31.2_linux_amd64/LICENSE</span><br><span class="line">frp_0.31.2_linux_amd64/frpc.ini</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/frpc@.service</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/frpc.service</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/frps.service</span><br><span class="line">frp_0.31.2_linux_amd64/systemd/frps@.service</span><br><span class="line">root@Synology:/usr/<span class="built_in">local</span><span class="comment"># cd frp_0.31.2_linux_amd64</span></span><br></pre></td></tr></table></figure>

<p>使用命令 <code>vi frpc.ini</code> 修改客户端配置文件，修改内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server_addr = 111.X.69.34</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 5022</span><br><span class="line"></span><br><span class="line">[web1]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_port = 5000</span><br><span class="line">remote_port = 5000</span><br><span class="line">custom_domains = localhost</span><br></pre></td></tr></table></figure>

<ul>
<li>111.X.69.34 是服务器的公网IP</li>
<li>ssh 配的是远程可以通过 ssh 连接工具连接到群晖SSh。</li>
<li>web1 配的是远程访问群晖DSM系统。</li>
</ul>
<p>保存，然后后台启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Synology:/usr/<span class="built_in">local</span>/frp_0.31.2_linux_amd64<span class="comment"># nohup ./frpc -c ./frpc.ini &amp;</span></span><br><span class="line">[1] 20768</span><br><span class="line">root@Synology:/usr/<span class="built_in">local</span>/frp_0.31.2_linux_amd64<span class="comment"># nohup: ignoring input and appending output to ‘nohup.out’</span></span><br></pre></td></tr></table></figure>

<p>查看启动日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Synology:/usr/<span class="built_in">local</span>/frp_0.31.2_linux_amd64<span class="comment"># cat nohup.out</span></span><br><span class="line">2020/05/06 00:19:23 [I] [service.go:250] [b0c859e1dc5b7a1f] login to server success, get run id [b0c859e1dc5b7a1f], server udp port [0]</span><br><span class="line">2020/05/06 00:19:23 [I] [proxy_manager.go:144] [b0c859e1dc5b7a1f] proxy added: [ssh web1]</span><br><span class="line">2020/05/06 00:19:23 [I] [control.go:164] [b0c859e1dc5b7a1f] [ssh] start proxy success</span><br><span class="line">2020/05/06 00:19:23 [I] [control.go:164] [b0c859e1dc5b7a1f] [web1] start proxy success</span><br></pre></td></tr></table></figure>

<p>启动成功了。</p>
<p>服务器防火墙开放5000和5022端口。</p>
<p>直接在远程访问：http://公网IP:5000，如本次将域名【vrgamehome.com】解析到公网IP，因此使用【<a href="http://vrgamehome:5000】访问：">http://vrgamehome:5000】访问：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-06_002512.png" alt="20200506005501"></p>
<p>使用 frp 内网传透完成。</p>
]]></content>
      <categories>
        <category>nas</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
        <tag>内网穿透</tag>
        <tag>frp</tag>
      </tags>
  </entry>
  <entry>
    <title>frp 内网穿透实战（二）：linux 连接和 web 访问</title>
    <url>/p/frp-linux-web/</url>
    <content><![CDATA[<p>本次服务端是 CentOS 7，连接的客户端也是 CentOS 7。</p>
<p>服务端部署详情参考：使用 frp 实现内网穿透（一）：远程桌面连接</p>
<h2 id="一、客户端部署"><a href="#一、客户端部署" class="headerlink" title="一、客户端部署"></a>一、客户端部署</h2><p>客户端也是 linux，因此使用服务端的压缩包【frp_0.31.2_linux_amd64.tar.gz】即可，解压，修改 frpc.ini 文件内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 111.229.69.34</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh2]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6001</span><br><span class="line"></span><br><span class="line">[web1]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_port= 80</span><br><span class="line">remote_port = 6002</span><br><span class="line">custom_domains = localhost</span><br></pre></td></tr></table></figure>

<p>ssh2 配的是远程可以通过 ssh 连接工具连接到本地的 centOS。<br>web1 配的是远程访问本地的一个80端口的网站。</p>
<p>启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost frp_0.31.2_linux_amd64]<span class="comment"># nohup ./frpc -c ./frpc.ini &amp;</span></span><br><span class="line">[1] 125163</span><br><span class="line">[root@localhost frp_0.31.2_linux_amd64]<span class="comment"># nohup: ignoring input and appending output to ‘nohup.out’</span></span><br></pre></td></tr></table></figure>

<p>查看启动日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost frp_0.31.2_linux_amd64]<span class="comment"># cat nohup.out </span></span><br><span class="line">2020/03/25 09:28:46 [I] [service.go:250] [844cd7b62c9cb231] login to server success, get run id [844cd7b62c9cb231], server udp port [0]</span><br><span class="line">2020/03/25 09:28:46 [I] [proxy_manager.go:144] [844cd7b62c9cb231] proxy added: [ssh2 web1]</span><br><span class="line">2020/03/25 09:28:46 [W] [control.go:162] [844cd7b62c9cb231] [ssh2] start error: port already used</span><br><span class="line">2020/03/25 09:28:46 [I] [control.go:164] [844cd7b62c9cb231] [web1] start proxy success</span><br></pre></td></tr></table></figure>

<p>启动成功。</p>
<h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><h3 id="2-1-远程登录-linux"><a href="#2-1-远程登录-linux" class="headerlink" title="2.1 远程登录 linux"></a>2.1 远程登录 linux</h3><p>SSH 连接工具设置：</p>
<p><img src="content/2020-03-26_223608.png" alt="2237"></p>
<p>连接：</p>
<p><img src="content/2020-03-26_223713.png" alt="2238"></p>
<h3 id="2-2-远程访问-linux-内网站"><a href="#2-2-远程访问-linux-内网站" class="headerlink" title="2.2 远程访问 linux 内网站"></a>2.2 远程访问 linux 内网站</h3><p>本地 linux 中部署的80端口网站是 GitLab，使用地址【<a href="http://ip:6002】进行访问：">http://ip:6002】进行访问：</a></p>
<p><img src="content/2020-03-26_222245.png" alt="2223"></p>
<p>如有域名的话，可以将域名解析到这个公网服务器ip，然后通过【域名+端口】访问，如：</p>
<p><img src="content/2020-03-26_222436.png" alt="2225"></p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>frp</tag>
        <tag>linux连接</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（七）： 群晖系统的使用之 Zerotier 实现内网穿透</title>
    <url>/p/nas-network/</url>
    <content><![CDATA[<p>前面讲到路由器端口转发，但是需要公网IP，如果没有公网IP的话可以考虑内网穿透。</p>
<h2 id="内网穿透原理"><a href="#内网穿透原理" class="headerlink" title="内网穿透原理"></a>内网穿透原理</h2><p>百度百科的解释：内网穿透，也即 NAT 穿透，进行 NAT 穿透是为了使具有某一个特定源 IP 地址和源端口号的数据包不被 NAT 设备屏蔽而正确路由到内网主机。</p>
<p>简单点说就是让外部能访问某局域网内没有公网IP的计算机。</p>
<p>ngrok和frp 反向代理型。<br>zerotier 点对点的型。</p>
<h2 id="注册登录-zerotier"><a href="#注册登录-zerotier" class="headerlink" title="注册登录 zerotier"></a>注册登录 zerotier</h2><p>点击登录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163302.png" alt="20200505163620"></p>
<p>点击注册：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163345.png" alt="20200505163716"></p>
<p>输入基本信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163420.png" alt="20200505163753"></p>
<p>登录邮箱验证：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163446.png" alt="20200505163817"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163530.png" alt="20200505163840"></p>
<p>注册成功后账户信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_163927.png" alt="20200505163955"></p>
<p>API Access Tokens 是开发者使用的，这里暂不使用，其它信息也不用改。</p>
<h2 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h2><p>点击 Networks 菜单，然后 Create a Network 则会创建一个网络：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_164241.png" alt="20200505164400"></p>
<p>点击 ID 进入详情，可以看到IP网段：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_164606.png" alt="20200505164622"></p>
<p>可以看到当前没有设备连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_164650.png" alt="20200505164737"></p>
<h2 id="安装群晖版客户端"><a href="#安装群晖版客户端" class="headerlink" title="安装群晖版客户端"></a>安装群晖版客户端</h2><p>点击 the download page 进入下载页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_164858.png" alt="20200505164937"></p>
<p>下载页面展示了下载连接，支持很多设备。下载群晖版：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_165730.png" alt="20200505170946"></p>
<p>点击进入可下载的列表：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_165757.png" alt="20200505171010"></p>
<p>选择需要下载的版本，如果是白群晖可根据 cpu 型号来选，进入群晖官方网站查看配置列表，网页地址【<a href="https://www.synology.com/zh-cn/knowledgebase/DSM/tutorial/Compatibility_Peripherals/What_kind_of_CPU_does_my_NAS_have】：" target="_blank" rel="noopener">https://www.synology.com/zh-cn/knowledgebase/DSM/tutorial/Compatibility_Peripherals/What_kind_of_CPU_does_my_NAS_have】：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_170218.png" alt="20200505170224"></p>
<p>比如使用的设备是【DS918+】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_170411.png" alt="20200505170429"></p>
<p>进入 intel 官网【<a href="https://ark.intel.com/content/www/cn/zh/ark.html#@Processors】查看这个型号cpu信息获取" target="_blank" rel="noopener">https://ark.intel.com/content/www/cn/zh/ark.html#@Processors】查看这个型号cpu信息获取</a> cpu 代号，搜索【j3455】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_180744.png" alt="20200505180831"></p>
<p>搜索到的结果：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_170627.png" alt="20200505170659"></p>
<p>得到的是 Apoll Lake，对应找到 zerotier 版软件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_170854.png" alt="20200505170910"></p>
<p>如果是黑群晖则需要根据引导模拟的cpu来对应版本，进入信息中心可查找到：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171344.png" alt="20200505171423"></p>
<p>进入套件中心，选择手动安装：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171709.png" alt="20200505171940"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171818.png" alt="20200505171957"></p>
<p>选择安装的位置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171830.png" alt="20200505172020"></p>
<p>下一步，应用：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_171837.png" alt="20200505172041"></p>
<h2 id="群晖版客户端连接-zerotier-网络"><a href="#群晖版客户端连接-zerotier-网络" class="headerlink" title="群晖版客户端连接 zerotier 网络"></a>群晖版客户端连接 zerotier 网络</h2><p>打开 zerotier 将网络ID输入连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172352.png" alt="20200505173020"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172416.png" alt="20200505173030"></p>
<p>等待连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172426.png" alt="20200505173054"></p>
<p>连接失败了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172504.png" alt="20200505173115"></p>
<p>为什么连接失败了，因为 zerotier 后台需要允许连接，勾选：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172651.png" alt="20200505173204"></p>
<p>连接成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_172937.png" alt="20200505173220"></p>
<p>进入网络可以看到新增了一个局域网连接：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_173347.png" alt="20200505173514"></p>
<h2 id="安装-windows-版客户端并连接-zerotier-网络"><a href="#安装-windows-版客户端并连接-zerotier-网络" class="headerlink" title="安装 windows 版客户端并连接 zerotier 网络"></a>安装 windows 版客户端并连接 zerotier 网络</h2><p>windows 版在另外一个云服务器上安装。</p>
<p>下载 windows 版：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_165036.png" alt="20200505165233"></p>
<p>安装：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_165331.png" alt="20200505165444"></p>
<p>运行，先点击 NodID 登录，然后 Join Network：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_173910.png" alt="20200505174831"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_174025.png" alt="20200505174847"></p>
<p>加入网络，然后会弹出一个网络发现，确定：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_174036.png" alt="20200505174918"></p>
<p>查看网络连接，多了一个虚拟网络：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_180348.png" alt="20200505180430"></p>
<p>查看连接信息：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_174734.png" alt="20200505174950"></p>
<p>未连接成功，还需要勾选下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_175044.png" alt="20200505175109"></p>
<p>再次查看，已经连接成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_175134.png" alt="20200505175150"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_175319.png" alt="20200505175328"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_181107.png" alt="20200505181118"></p>
<h2 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h2><p>在 windows 上 ping nas 虚拟网络地址测试连通性，发现很不稳定：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ping 172.30.235.184</span><br><span class="line"></span><br><span class="line">正在 Ping 172.30.235.184 具有 32 字节的数据:</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br><span class="line">来自 172.30.235.184 的回复: 字节&#x3D;32 时间&#x3D;554ms TTL&#x3D;64</span><br><span class="line"></span><br><span class="line">172.30.235.184 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 &#x3D; 4，已接收 &#x3D; 1，丢失 &#x3D; 3 (75% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 &#x3D; 554ms，最长 &#x3D; 554ms，平均 &#x3D; 554ms</span><br></pre></td></tr></table></figure>

<p>在 windows 上访问群晖系统失败。</p>
]]></content>
      <categories>
        <category>nas</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>内网穿透</tag>
        <tag>端口转发</tag>
      </tags>
  </entry>
  <entry>
    <title>多级路由器如何设置端口转发</title>
    <url>/p/router-port-transfer/</url>
    <content><![CDATA[<p>拨号的路由器是一台 TP-LINK，然后在该路由器上接了一台 PHICOMM K2 作为二级路由器（ip为），台式机电脑连接的是 K2。</p>
<p>本次以这种组合进行设置，其他组合设置大同小异。</p>
<h2 id="一、二级路由器设置"><a href="#一、二级路由器设置" class="headerlink" title="一、二级路由器设置"></a>一、二级路由器设置</h2><p>K2 路由器的IP为【192.168.1.107】。</p>
<h3 id="1-1-设置静态IP"><a href="#1-1-设置静态IP" class="headerlink" title="1.1 设置静态IP"></a>1.1 设置静态IP</h3><p>建议将该路由器IP设置为静态的：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_142042.png" alt="20200505142107"></p>
<h3 id="1-2-设置端口转发"><a href="#1-2-设置端口转发" class="headerlink" title="1.2 设置端口转发"></a>1.2 设置端口转发</h3><p>电脑IP为【192.168.2.165】，进入端口转发管理页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_130535.png" alt="20200505142552"></p>
<p>服务器IP就是电脑的IP，保存即可。</p>
<h2 id="二、一级路由器设置"><a href="#二、一级路由器设置" class="headerlink" title="二、一级路由器设置"></a>二、一级路由器设置</h2><p>进入 TP-LINK 管理后台，然后进入虚拟服务器：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_125647.png" alt="20200505141629"></p>
<p>添加并保存：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_130147.png" alt="20200505141836"></p>
<h2 id="三、测试是否生效"><a href="#三、测试是否生效" class="headerlink" title="三、测试是否生效"></a>三、测试是否生效</h2><p>可以通过在电脑上搭建一个网站，然后通过访问 <code>【http://公网IP:端口】</code>进行验证。</p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>端口转发</tag>
        <tag>路由器</tag>
      </tags>
  </entry>
  <entry>
    <title>redis 五种数据类型的基本使用</title>
    <url>/p/redis-datatype/</url>
    <content><![CDATA[<p>redis 中有5种基本的数据类型：</p>
<ul>
<li>string</li>
<li>hash</li>
<li>list</li>
<li>set</li>
<li>zset</li>
</ul>
<p>常用命令：</p>
<ul>
<li>type：查看当前结构类型</li>
<li>ttl：查看当前键的过期时间，-1代表永不过期</li>
<li>flushall：清空所有库的数据</li>
<li>save：强制保存</li>
<li>del：删除指定的 key</li>
<li>rename：重命名 key 的名称</li>
</ul>
<h3 id="一、string"><a href="#一、string" class="headerlink" title="一、string"></a>一、string</h3><p>string 数据类型是开发中使用最多的。</p>
<p>string 常用命令：</p>
<ul>
<li>set：设置值</li>
<li>setex：设置 key 的过期时间，单位为秒</li>
<li>psetex：设置 key 的过期时间，单位为毫秒</li>
<li>get：获取 key 对应的值</li>
<li>getrange：获取 key 中字符串(范围)的子字符</li>
<li>getset：设置 key 的值，并返回旧值</li>
<li>mset：一次设置多个 key-value，如 <code>mset key1638 val1638 key1639 val1639</code></li>
<li>mget：获取多个 key 对应的值 ru <code>mget key1638 key1639</code></li>
<li>setnx：只有在 key 不存在时才设置值 </li>
<li>strlen：获取 key 对应值的长度 如     <code>strlen key1638</code></li>
<li>msetnx：批量设置 key 的值，当且仅当所有给定 key 都不存在时才设置成功</li>
<li>incr：将 key 的值增1</li>
<li>incrby：将 key 的值增长设置的值，如 <code>incrby key1645 2</code></li>
<li>decr：将 key 的值减1</li>
<li>decrby：将 key 的值减少设置的值</li>
<li>append：将 key 的值追加内容，如 <code>append key1</code></li>
<li>del：指定删除 key</li>
</ul>
<h3 id="二、hash"><a href="#二、hash" class="headerlink" title="二、hash"></a>二、hash</h3><p>hash 是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象。</p>
<p>hash 常用命令：</p>
<ul>
<li>hset：设置 key 的值，如 <code>hset theUser name jack</code></li>
<li>hget：获取 kye 对应字段的值，如 <code>hget theUser name</code></li>
<li>hexists：判断 key 对应的字段是否存在，如 <code>hexists theUser name</code></li>
<li>hgetall：获取 key 所有字段和值，如 <code>hgetall theUser</code></li>
<li>hkeys：获取 key 所有字段，如 <code>hkeys theUser</code></li>
<li>hvals：获取 key 字段所有值，如 <code>hvals theUser</code></li>
<li>hlen：获取 key 字段的个数，如 <code>hlen theUser</code></li>
<li>hmget：获取 key 指定字段对应的值，如 <code>hmget theUser name age</code></li>
<li>hmset：设置 key 指定字段的值，如 <code>hmset theUser weight 50 height 165</code></li>
<li>expire：设置 key 的过期时间，如 <code>expire car 10</code></li>
<li>hdel：删除 key 指定字段，如 <code>hdel theUser weight</code></li>
</ul>
<h3 id="三、list"><a href="#三、list" class="headerlink" title="三、list"></a>三、list</h3><p>列表是简单的字符串列表，按照插入顺序排序</p>
<p>list 常用命令：</p>
<ul>
<li>lpush：将一个或多个值插入列表头部，如 <code>lpush lkey1 aa bb cc</code></li>
<li>llen：获取列表长度，如 <code>llen lkey1</code></li>
<li>lrange：获取列表指定范围内的数据，如 <code>lrange lkey1 1 2</code></li>
<li>lset：通过索引设置列表元素的值，如 <code>lset lkey1 2 bc</code></li>
<li>lindex：通过索引获取列表中的元素，如 <code>lindex lkey1 1</code></li>
<li>lpop：移出并获取列表中的第1个元素，当列表中数据不存在时，key 自动删除</li>
<li>rpop：移出并获取列表中的最后1个元素，当列表中数据不存在时，key 自动删除</li>
</ul>
<h3 id="四、set"><a href="#四、set" class="headerlink" title="四、set"></a>四、set</h3><p> set 是 string 类型的无序集合，集合成员是唯一的。</p>
<p> set 常用命令：</p>
<ul>
<li>sadd：向集合中添加一个或多个元素，如 <code>sadd skey1 m1 m2 m3</code></li>
<li>scard：获取集合元素个数，如 <code>scard skey1</code></li>
<li>smembers：获取集合中的所有元素，如 <code>smembers skey1</code></li>
<li>sdiff：获取指定所有集合的差集，如 <code>sdiff skey1 skey2</code></li>
<li>sinter：获取指定所有集合的交集，如 <code>sinter skey1 skey2</code></li>
<li>sunion：获取指定所有集合的并集，如 <code>sunion skey1 skey2</code></li>
<li>srandmember：获取指定集合中一个或多个随机数，如 <code>srandmember skey2</code></li>
<li>sismember：判断某个元素是否为集合成员，如 <code>sismember skey2 m1</code></li>
<li>spop：随机移出一个元素，并返回这个元素，如 <code>spop skey2</code></li>
</ul>
<h3 id="五、zset"><a href="#五、zset" class="headerlink" title="五、zset"></a>五、zset</h3><p>zset 是 string 类型的有序集合，集合成员是唯一的。每个元素都关联一个 double 类型的分数。</p>
<p>zset 常用命令：</p>
<ul>
<li>zadd：向集合中添加一个或多个元素，如 <code>zadd zkey1 50 m1 60 m2 40 m3 70 m4</code></li>
<li>zcard：获取集合元素个数，如 <code>zcard zkey1</code></li>
<li>zscore：获取集合中元素的分数值，如 <code>zscore zkey1 m1</code></li>
<li>zcount：获取集合中元素的分数值在指定范围内的个数，如 <code>zcount zkey1 60 70</code></li>
<li>zrank：获取集合某个元素在有序集合中排序的索引，如 <code>zrank zkey1 m2</code></li>
<li>zincrby：指定集合中某元素值增长的大小，如 <code>zincrby zkey1 100 m2</code></li>
<li>zrange：通过索引区间获取集合指定区间内的元素，如 <code>zrange zkey1 2 4</code></li>
</ul>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>redis数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>在 linux 中安装与启动 redis 详解</title>
    <url>/p/redis-instal-start/</url>
    <content><![CDATA[<p>本次使用的版本是 redis-4.0.14。</p>
<h2 id="一、安装-redis"><a href="#一、安装-redis" class="headerlink" title="一、安装 redis"></a>一、安装 redis</h2><p>下载地址：<a href="http://download.redis.io/releases/redis-4.0.14.tar.gz" target="_blank" rel="noopener">http://download.redis.io/releases/redis-4.0.14.tar.gz</a></p>
<p>下载完成进行解压，然后删除压缩包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xf redis-4.0.14.tar.gz </span><br><span class="line">rm -rf ./redis-4.0.14.tar.gz</span><br></pre></td></tr></table></figure>

<p>redis 版本4需要 tcl(版本3不需要)，因此需要先安装 tcl：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install tcl -y</span><br></pre></td></tr></table></figure>

<p>需要对源码进行编译，因为 redis 是 c 语言开发的，编译需要依赖 gcc 环境，因此需要先安装 gcc-c++：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install gcc-c++ -y</span><br></pre></td></tr></table></figure>

<p>进入 redis 目录，查看是否有 Makefile 目录，如果有说明是可以源码编译的，redis 目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd redis-4.0.14/</span></span><br><span class="line">[root@localhost redis-4.0.14]<span class="comment"># ll</span></span><br><span class="line">total 304</span><br><span class="line">-rw-rw-r--.  1 root root 166629 Mar 18  2019 00-RELEASENOTES</span><br><span class="line">-rw-rw-r--.  1 root root     53 Mar 18  2019 BUGS</span><br><span class="line">-rw-rw-r--.  1 root root   1815 Mar 18  2019 CONTRIBUTING</span><br><span class="line">-rw-rw-r--.  1 root root   1487 Mar 18  2019 COPYING</span><br><span class="line">drwxrwxr-x.  6 root root    124 Mar 18  2019 deps</span><br><span class="line">-rw-rw-r--.  1 root root     11 Mar 18  2019 INSTALL</span><br><span class="line">-rw-rw-r--.  1 root root    151 Mar 18  2019 Makefile</span><br><span class="line">-rw-rw-r--.  1 root root   4223 Mar 18  2019 MANIFESTO</span><br><span class="line">-rw-rw-r--.  1 root root  20543 Mar 18  2019 README.md</span><br><span class="line">-rw-rw-r--.  1 root root  58766 Mar 18  2019 redis.conf</span><br><span class="line">-rwxrwxr-x.  1 root root    271 Mar 18  2019 runtest</span><br><span class="line">-rwxrwxr-x.  1 root root    280 Mar 18  2019 runtest-cluster</span><br><span class="line">-rwxrwxr-x.  1 root root    281 Mar 18  2019 runtest-sentinel</span><br><span class="line">-rw-rw-r--.  1 root root   7921 Mar 18  2019 sentinel.conf</span><br><span class="line">drwxrwxr-x.  3 root root   4096 Mar 18  2019 src</span><br><span class="line">drwxrwxr-x. 10 root root    167 Mar 18  2019 tests</span><br></pre></td></tr></table></figure>

<p>编译 redis(以4核方式，速度快)源文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make -j 4</span><br></pre></td></tr></table></figure>

<p>编译完成，提示【Hint: It’s a good idea to run ‘make test’ ;)】</p>
<p>make test 表示测试编译是否有问题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make <span class="built_in">test</span> -j 4</span><br></pre></td></tr></table></figure>

<p>测试编译没什么问题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\o/ All tests passed without errors!</span><br><span class="line"></span><br><span class="line">Cleanup: may take some time... OK</span><br><span class="line">make[1]: Leaving directory /root/redis-4.0.14/src</span><br></pre></td></tr></table></figure>

<p>安装 redis 到指定目录【/usr/local/redis】:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make PREFIX=/usr/<span class="built_in">local</span>/redis install</span><br></pre></td></tr></table></figure>

<p>进入安装的 bin 目录，里面就是所有的 redis 命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost redis-4.0.14]<span class="comment"># cd /usr/local/redis/</span></span><br><span class="line">[root@localhost redis]<span class="comment"># ll</span></span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x. 2 root root 134 Dec  2 08:02 bin</span><br><span class="line">[root@localhost redis]<span class="comment"># cd bin/</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ll</span></span><br><span class="line">total 21884</span><br><span class="line">-rwxr-xr-x. 1 root root 2451040 Dec  2 08:02 redis-benchmark</span><br><span class="line">-rwxr-xr-x. 1 root root 5777304 Dec  2 08:02 redis-check-aof</span><br><span class="line">-rwxr-xr-x. 1 root root 5777304 Dec  2 08:02 redis-check-rdb</span><br><span class="line">-rwxr-xr-x. 1 root root 2617120 Dec  2 08:02 redis-cli</span><br><span class="line">lrwxrwxrwx. 1 root root      12 Dec  2 08:02 redis-sentinel -&gt; redis-server</span><br><span class="line">-rwxr-xr-x. 1 root root 5777304 Dec  2 08:02 redis-server</span><br><span class="line">[root@localhost bin]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>到此 redis 安装完成。</p>
<h2 id="二、启动-redis"><a href="#二、启动-redis" class="headerlink" title="二、启动 redis"></a>二、启动 redis</h2><p>启动 redis 有多种方式：</p>
<ul>
<li>前端默认启动</li>
<li>指定端口启动</li>
<li>指定配置文件启动</li>
</ul>
<h3 id="2-1-前端默认启动"><a href="#2-1-前端默认启动" class="headerlink" title="2.1 前端默认启动"></a>2.1 前端默认启动</h3><p>前端默认启动可使用命令【./redis-server】启动即可：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.01.png" alt="Alt text" title="Optional title"></p>
<p>如上所示，可以看到，Redis 的版本是 4.0.14，运行的模式是【standalone mode】(单机模式)，端口是6379，当把当前的关掉，redis 服务就自动关闭了。</p>
<p>重新打开一个会话，进入 redis 的 bin 目录，开启一个客户端连接 redis：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli </span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> key1 val1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get key1</span><br><span class="line"><span class="string">"val1"</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> key2 val2</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> key3 val3</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"key2"</span></span><br><span class="line">2) <span class="string">"key3"</span></span><br><span class="line">3) <span class="string">"key1"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>当关闭 redis 服务后：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.02.png" alt="Alt text" title="Optional title"></p>
<p>客户端就连接不上，重新打开后，再次连接原来的数据还在，这是因为 redis 有数据备份机制，存在文件 dump.rdb 中。</p>
<p>再次启动 redis，可以看到数据是从磁盘加载的：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.03.png" alt="Alt text" title="Optional title"></p>
<h3 id="2-2-指定端口启动"><a href="#2-2-指定端口启动" class="headerlink" title="2.2 指定端口启动"></a>2.2 指定端口启动</h3><p>如指定端口6380启动，使用命令【./redis-server –port 6380】:</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.04.png" alt="Alt text" title="Optional title"></p>
<p>但是当客户端连接时却连不上，因为连接的是默认端口 6379：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli</span></span><br><span class="line">Could not connect to Redis at 127.0.0.1:6379: Connection refused</span><br><span class="line">Could not connect to Redis at 127.0.0.1:6379: Connection refused</span><br><span class="line">not connected&gt;</span><br></pre></td></tr></table></figure>

<p>那么需要指定连接到指定端口，使用命令【./redis-cli -p 6380】即可。</p>
<h3 id="2-3-指定配置文件启动"><a href="#2-3-指定配置文件启动" class="headerlink" title="2.3 指定配置文件启动"></a>2.3 指定配置文件启动</h3><p>在开发的时候一般会将配置文件拷贝，将配置文件【/root/redis-4.0.14/redis.conf】拷贝到 redis 的 bin 目录中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># cp /root/redis-4.0.14/redis.conf ./redis.conf</span></span><br></pre></td></tr></table></figure>

<p>文本文件内容比较多，大多是注释，将注释去掉看起来比较清晰：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># cat redis.conf | grep -v "#" | grep -v "^$"</span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize no</span><br><span class="line">supervised no</span><br><span class="line">pidfile /var/run/redis_6379.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">""</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir ./</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">slave-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">slave-lazy-flush no</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble no</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure>

<p>以配置文件方式启动 redis 服务使用命令 <code>./redis-server ./redis.conf</code></p>
<p>查看启动的 redis 服务： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps -ef | grep redis</span></span><br><span class="line">root      19811  17108  0 06:01 pts/4    00:00:00 ./redis-server 127.0.0.1:6379</span><br><span class="line">root      19849  17061  0 06:06 pts/3    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>

<p>在实际使用时往往会部署多台 redis，不同的 redis 不同的端口号，配置文件以端口号命名：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat redis.conf | grep -v <span class="string">"#"</span> | grep -v <span class="string">"^$"</span> &gt; redis_6379.conf</span><br></pre></td></tr></table></figure>

<p>将 redis 安装目录拷贝多个，目录名称用端口号体现，配置文件也是一样，这样方便管理。</p>
<h2 id="三、远程连接-redis"><a href="#三、远程连接-redis" class="headerlink" title="三、远程连接 redis"></a>三、远程连接 redis</h2><p>远程连接 redis 使用命令  <code>./redis-cli -p [端口号] -h [主机]</code>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -p 6379 -h 127.0.0.1</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>4.0版本的 redis 保护机制，默认绑定了 127.0.0.1 ，在 redis.conf 文件中的配置 <code>bind 127.0.0.1</code>。<br>可以使用 requirepass 设置访问密码，如 <code>requirepass 1234567a</code>。</p>
<p>客户端连接到 redis 就需要输入密码，不然无法使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -p 6379 -h 127.0.0.1</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(error) NOAUTH Authentication required.</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>输入密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -p 6379 -h 127.0.0.1</span></span><br><span class="line">127.0.0.1:6379&gt; auth 1234567a</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"key1"</span></span><br><span class="line">2) <span class="string">"key3"</span></span><br><span class="line">3) <span class="string">"key2"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>或者使用命令时带上密码： <code>./redis-cli -p [端口号] -h [主机] -a [密码]</code>，如<code>./redis-cli -p 6379 -h 127.0.0.1 -a 1234567a</code>，但这样会提示不安全：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -p 6379 -h 127.0.0.1 -a 1234567a</span></span><br><span class="line">Warning: Using a password with <span class="string">'-a'</span> option on the <span class="built_in">command</span> line interface may not be safe.</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"key2"</span></span><br><span class="line">2) <span class="string">"key3"</span></span><br><span class="line">3) <span class="string">"key1"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<p>如果是局域网中的一台主机连接该 redis，报如下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\noinstall\redis\redis-2.4.5-win32-win64\64bit&gt; ./redis-cli -p 6379 -h 192.168.2.57</span><br><span class="line">redis 192.168.2.57:6379&gt; auth 1234567a</span><br><span class="line">(error) DENIED Redis is running <span class="keyword">in</span> protected mode because protected mode is enabled, </span><br><span class="line">no <span class="built_in">bind</span> address was specified, no authentication password is requested to clients.</span><br><span class="line"> In this mode connections are only accepted from the loopback interface. </span><br><span class="line"> If you want to connect from external computers to Redis you may adopt one of the following solutions: </span><br><span class="line"> 1) Just <span class="built_in">disable</span> protected mode sending the <span class="built_in">command</span> <span class="string">'CONFIG SET protected-mode no'</span> from the loopback interface by connecting to Redis from the same host the server is running,</span><br><span class="line">  however MAKE SURE Redis is not publicly accessible from internet <span class="keyword">if</span> you <span class="keyword">do</span> so. </span><br><span class="line"> Use CONFIG REWRITE to make this change permanent. </span><br><span class="line"> 2) Alternatively you can just <span class="built_in">disable</span> the protected mode by editing the Redis configuration file, </span><br><span class="line"> and setting the protected mode option to <span class="string">'no'</span>, and <span class="keyword">then</span> restarting the server. </span><br><span class="line"> 3) If you started the server manually just <span class="keyword">for</span> testing, restart it with the <span class="string">'--protected-mode no'</span> option. </span><br><span class="line"> 4) Setup a <span class="built_in">bind</span> address or an authentication password. </span><br><span class="line"> NOTE: You only need to <span class="keyword">do</span> one of the above things <span class="keyword">in</span> order <span class="keyword">for</span> the server to start accepting connections from the outside.</span><br><span class="line">redis 192.168.2.57:6379&gt;</span><br></pre></td></tr></table></figure>




<h2 id="四、关闭-redis"><a href="#四、关闭-redis" class="headerlink" title="四、关闭 redis"></a>四、关闭 redis</h2><p>使用 Ctrl+C 可以强制关闭 redis，或者使用命令 <code>kill -9 [端口号]</code> 但是容易导致数据丢失，正常关闭应该使用命令，如【./redis-cli -p 6380 shutdown】，redis 服务端已经关闭了：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201912/tech.redis.2019120201.05.png" alt="Alt text" title="Optional title"></p>
<p>关闭 redis 要保证数据不丢失。</p>
<p>如果设置了密码，则需要加上密码才能关闭，使用命令 <code>./redis-cli -a [密码] -p [端口号]</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]# .&#x2F;redis-cli -p 6379 shutdown</span><br><span class="line">(error) NOAUTH Authentication required.</span><br><span class="line">[root@localhost bin]# .&#x2F;redis-cli -a 1234567a -p 6379 shutdown</span><br><span class="line">Warning: Using a password with &#39;-a&#39; option on the command line interface may not be safe</span><br></pre></td></tr></table></figure>

<h2 id="五、防火墙配置"><a href="#五、防火墙配置" class="headerlink" title="五、防火墙配置"></a>五、防火墙配置</h2><p>虽然通过 ssh 工具连接可以连接和操作 redis，但是在外面用程序连接会连接超时，这是因为端口不被外面访问，要设置防火墙。</p>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>redis安装</tag>
        <tag>redis启动</tag>
      </tags>
  </entry>
  <entry>
    <title>在 java 中使用 jedis 操作 redis</title>
    <url>/p/redis-jedis/</url>
    <content><![CDATA[<p>本次使用的 jedis jar 包是【jedis-2.9.0.jar】，将包添加到项目中。</p>
<p>java 连接代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> redisDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jedis 连接演示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        singleTest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">singleTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Jedis jedis=<span class="keyword">new</span> Jedis(<span class="string">"192.168.2.57"</span>,<span class="number">6379</span>);<span class="comment">// 创建jedis连接</span></span><br><span class="line">        jedis.auth(<span class="string">"1234567a"</span>);<span class="comment">// 设置密码</span></span><br><span class="line">        jedis.select(<span class="number">2</span>);<span class="comment">// 设置指定库</span></span><br><span class="line"></span><br><span class="line">        jedis.set(<span class="string">"strKey1"</span>,<span class="string">"strKey1Val"</span>);<span class="comment">//设置key对应的值</span></span><br><span class="line">        String key1Val = jedis.get(<span class="string">"strKey1"</span>);<span class="comment">//获取key对应的值</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"strKey1 的值是："</span>+key1Val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用 jedis 连接报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> redis.clients.jedis.exceptions.JedisConnectionException: java.net.SocketTimeoutException: connect timed out</span><br><span class="line">	at redis.clients.jedis.Connection.connect(Connection.java:207)</span><br><span class="line">	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)</span><br><span class="line">	at redis.clients.jedis.Connection.sendCommand(Connection.java:126)</span><br><span class="line">	at redis.clients.jedis.Connection.sendCommand(Connection.java:117)</span><br><span class="line">	at redis.clients.jedis.BinaryClient.auth(BinaryClient.java:564)</span><br><span class="line">	at redis.clients.jedis.BinaryJedis.auth(BinaryJedis.java:2138)</span><br><span class="line">	at redisDemo.JedisTest.main(JedisTest.java:12)</span><br><span class="line">Caused by: java.net.SocketTimeoutException: connect timed out</span><br><span class="line">	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)</span><br><span class="line">	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)</span><br><span class="line">	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)</span><br><span class="line">	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)</span><br><span class="line">	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)</span><br><span class="line">	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)</span><br><span class="line">	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)</span><br><span class="line">	at java.net.Socket.connect(Socket.java:589)</span><br><span class="line">	at redis.clients.jedis.Connection.connect(Connection.java:184)</span><br><span class="line">	... 6 more</span><br><span class="line">Disconnected from the target VM, address: <span class="string">'127.0.0.1:63851'</span>, transport: <span class="string">'socket'</span></span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 1</span><br></pre></td></tr></table></figure>

<p>redis 服务已经启动，在 Linux 上可以操作，但是为啥连接不上？</p>
<p>这可能是因为 redis 服务所在服务器端口不能被访问，应该设置下防火墙，将 redis 使用的端口添加到防火墙策略中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --state</span></span><br><span class="line">running</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --add-port=6379/tcp --permanent</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line">6379/tcp</span><br></pre></td></tr></table></figure>

<p>打开后就可以使用了，输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Connected to the target VM, address: <span class="string">'127.0.0.1:65165'</span>, transport: <span class="string">'socket'</span></span><br><span class="line">strKey1 的值是：strKey1Val</span><br></pre></td></tr></table></figure>

<p>使用连接池的方式来操作 redis，需要引入一个 jar 包【commons-pool2-2.4.2.jar】：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> redisDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jedis 连接演示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//singleTest();</span></span><br><span class="line">        poolTest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">poolTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        JedisPoolConfig config=<span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        config.setMaxTotal(<span class="number">10</span>);</span><br><span class="line">        config.setMaxIdle(<span class="number">5</span>);</span><br><span class="line">        config.setMaxWaitMillis(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        JedisPool pool=<span class="keyword">new</span> JedisPool(config,<span class="string">"192.168.2.57"</span>,<span class="number">6379</span>);</span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line"></span><br><span class="line">        jedis.auth(<span class="string">"1234567a"</span>);</span><br><span class="line">        jedis.select(<span class="number">3</span>);</span><br><span class="line">        jedis.set(<span class="string">"strKey2151"</span>,<span class="string">"abcde"</span>);</span><br><span class="line"></span><br><span class="line">        String keyVal = jedis.get(<span class="string">"strKey2151"</span>);<span class="comment">//获取key对应的值</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"strKey2151 的值是："</span>+keyVal);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">strKey2151 的值是：abcde</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>java使用redis</tag>
        <tag>java</tag>
        <tag>jedis</tag>
      </tags>
  </entry>
  <entry>
    <title>nas 折腾笔记（八）： 群晖系统的使用之 Video Station</title>
    <url>/p/nas-video-station/</url>
    <content><![CDATA[<h2 id="播放失败"><a href="#播放失败" class="headerlink" title="播放失败"></a>播放失败</h2><p>一直在转：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_214629.png" alt="20200505214648"></p>
<p>应该是转码的问题，网上搜了下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_214744.png" alt="20200505214758"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_214825.png" alt="20200505214833"></p>
<p>一直显示有转码任务：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_215052.png" alt="20200505215112"></p>
<p>后面上传了一批电影，打开【蜘蛛侠：英雄归来HD高清中英双字.mkv】，可以正常观看：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_233744.png" alt="20200505233822"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-06_001016.png" alt="20200506001033"></p>
<h2 id="关于洗白问题"><a href="#关于洗白问题" class="headerlink" title="关于洗白问题"></a>关于洗白问题</h2><p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-05_215327.png" alt="20200505215345"></p>
]]></content>
      <categories>
        <category>nas</category>
      </categories>
      <tags>
        <tag>群晖</tag>
        <tag>dsm</tag>
        <tag>套件</tag>
        <tag>Video Station</tag>
      </tags>
  </entry>
  <entry>
    <title>frp 内网穿透实战（一）：远程桌面连接 windows</title>
    <url>/p/frp-remote-desk/</url>
    <content><![CDATA[<h1 id="frp-内网穿透实战（一）：远程桌面连接-windows"><a href="#frp-内网穿透实战（一）：远程桌面连接-windows" class="headerlink" title="frp 内网穿透实战（一）：远程桌面连接 windows"></a>frp 内网穿透实战（一）：远程桌面连接 windows</h1><!-- @import "[TOC]" {cmd="toc" depthFrom=2 depthTo=6 orderedList=false} -->

<!-- code_chunk_output -->

<ul>
<li><a href="#一-部署">一、部署</a><ul>
<li><a href="#11-服务端部署">1.1 服务端部署</a></li>
<li><a href="#12-客户端部署">1.2 客户端部署</a></li>
</ul>
</li>
<li><a href="#二-测试">二、测试</a></li>
<li><a href="#三-知识点">三、知识点</a></li>
</ul>
<!-- /code_chunk_output -->

<br>

<p>frp github 中文文档：<a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/fatedier/frp/blob/master/README_zh.md</a></p>
<p>release 下载：<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases</a></p>
<p><em>注：服务器端和客户端下载的版本要保持一致。</em></p>
<p>本次下载的版本是【v0.31.2】：<a href="https://github.com/fatedier/frp/releases/tag/v0.31.2" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases/tag/v0.31.2</a></p>
<p>本次演示的是通过 frp 内网穿透，在远程连接一台windows电脑。</p>
<h2 id="一、部署"><a href="#一、部署" class="headerlink" title="一、部署"></a>一、部署</h2><p>部署分为服务器端和客户端，服务器是阿里云的一台 CentOS 云服务器，客户机就是本地一台 windows。</p>
<h3 id="1-1-服务端部署"><a href="#1-1-服务端部署" class="headerlink" title="1.1 服务端部署"></a>1.1 服务端部署</h3><p>本次下载的文件是【frp_0.31.2_linux_amd64.tar.gz】。</p>
<p>因为用到了服务器默认是 7000 端口，需要在防火墙中开启，如果是云服务器则只需要在安全组的入站方向增加一个端口即可。<br>由于下面客户端配置的端口是 6000 ，因此一起加上：</p>
<p><img src="content/2020-03-24_232349.png" alt="2323"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将文件上传到服务器</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压压缩包</span></span><br><span class="line">tar -zxvf frp_0.31.2_linux_amd64.tar.gz</span><br><span class="line">​</span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> frp_0.31.2_linux_amd64</span><br><span class="line">​</span><br><span class="line"><span class="comment"># 设置后台运行frp服务端</span></span><br><span class="line">nohup ./frps -c ./frps.ini &amp;</span><br></pre></td></tr></table></figure>

<p>查看 nohub.out 日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment"># cat nohup.out </span></span><br><span class="line">2020/03/24 22:48:05 [I] [service.go:152] frps tcp listen on 0.0.0.0:7000</span><br><span class="line">2020/03/24 22:48:05 [I] [root.go:205] start frps success</span><br><span class="line">[root@VM_0_7_centos frp_0.31.2_linux_amd64]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>服务端启动成功。</p>
<h3 id="1-2-客户端部署"><a href="#1-2-客户端部署" class="headerlink" title="1.2 客户端部署"></a>1.2 客户端部署</h3><p>本次下载的文件是【frp_0.31.2_windows_386.zip】。</p>
<p>解压目录，修改 frpc.ini 文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 111.X.X.34</span><br><span class="line">server_port &#x3D; 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 127.0.0.1</span><br><span class="line">local_port &#x3D; 3389</span><br><span class="line">remote_port &#x3D; 6000</span><br></pre></td></tr></table></figure>

<p>进入解压的根目录，输入命令 <code>frpc -c frpc.ini</code> ：</p>
<p><img src="content/2020-03-24_231655.png" alt="2317"></p>
<p>客户端启动成功。</p>
<p>开启远程桌面功能：</p>
<p><img src="content/2020-03-24_230259.png" alt="2318"></p>
<h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><p>找一台非局域网的电脑远程连接上面部署的电脑：</p>
<p><img src="content/2020-03-24_230744.png" alt="2325"></p>
<p>校验了用户名或密码错误，出现了这个说明连接到了，下面输入正确的用户名密码：</p>
<p><img src="content/2020-03-24_230925.png" alt="2326"></p>
<p>连接成功。</p>
<p>如有域名的话，可以将域名解析到这个公网服务器ip，然后通过【域名+端口】访问。</p>
<h2 id="三、知识点"><a href="#三、知识点" class="headerlink" title="三、知识点"></a>三、知识点</h2>]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>frp</tag>
        <tag>远程桌面</tag>
      </tags>
  </entry>
  <entry>
    <title>sql server 附加的数据库变成只读解决</title>
    <url>/p/sqlserver-attach-problem/</url>
    <content><![CDATA[<p>本次操作的数据库是 SQL Server 2016，其他版本的类似。</p>
<h2 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h2><p>将云服务器中的数据库分离之后再附加到另外一台服务器上，数据库显示只读状态。</p>
<h2 id="二、问题解决"><a href="#二、问题解决" class="headerlink" title="二、问题解决"></a>二、问题解决</h2><h3 id="2-1-解决方案一"><a href="#2-1-解决方案一" class="headerlink" title="2.1 解决方案一"></a>2.1 解决方案一</h3><p>将数据库再分离，然后使用 windows 内置账户登录再附加就可以了。</p>
<h3 id="2-1-解决方案二"><a href="#2-1-解决方案二" class="headerlink" title="2.1 解决方案二"></a>2.1 解决方案二</h3><p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_231712.png" alt="只读设置"></p>
<p>右键数据库，进入属性，选择状态页，将【数据库为只读】设为 False：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_231945.png" alt="只读"></p>
<p>如果没有成功，报如下错误：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_232420.png" alt="2324"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">标题: Microsoft SQL Server Management Studio</span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">数据库 &quot;kwdb&quot; 的 更改 失败。  (Microsoft.SqlServer.Smo)</span><br><span class="line"></span><br><span class="line">有关帮助信息，请单击: http:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink?ProdName&#x3D;Microsoft+SQL+Server&amp;ProdVer&#x3D;14.0.17289.0+((SSMS_Rel_17_4).181117-0805)&amp;EvtSrc&#x3D;Microsoft.SqlServer.Management.Smo.ExceptionTemplates.FailedOperationExceptionText&amp;EvtID&#x3D;更改+Database&amp;LinkId&#x3D;20476</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line">其他信息:</span><br><span class="line"></span><br><span class="line">执行 Transact-SQL 语句或批处理时发生了异常。 (Microsoft.SqlServer.ConnectionInfo)</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">无法打开物理文件“C:\Special\DB\kwdb.mdf”。操作系统错误 5:“5(拒绝访问。)”。</span><br><span class="line">无法打开物理文件“C:\Special\DB\kwdb_log.ldf”。操作系统错误 5:“5(拒绝访问。)”。</span><br><span class="line">无法重新启动数据库“kwdb”。将恢复到以前的状态。</span><br><span class="line">ALTER DATABASE 语句失败。</span><br><span class="line">正在回滚不合法事务。估计回滚已完成: 0%。</span><br><span class="line">正在回滚不合法事务。估计回滚已完成: 100%。 (Microsoft SQL Server，错误: 5120)</span><br><span class="line"></span><br><span class="line">有关帮助信息，请单击: http:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink?ProdName&#x3D;Microsoft%20SQL%20Server&amp;ProdVer&#x3D;13.00.1601&amp;EvtSrc&#x3D;MSSQLServer&amp;EvtID&#x3D;5120&amp;LinkId&#x3D;20476</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line">按钮:</span><br><span class="line"></span><br><span class="line">确定</span><br><span class="line">------------------------------</span><br></pre></td></tr></table></figure>

<p>查看数据库文件属性：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_232733.png" alt="2327"></p>
<p>当前登录的用户 Administrator 其实是对文件有完全控制权限，但是登录的数据库账户是 sa，所以就没有这种权限。</p>
<p>如果是内置账户登录再附加数据库是可以的，所以方案一是可行的。</p>
<p>如果仍使用 sa 登录，则需要添加一个【Network Service】账户完全控制权限，可尝试一下，如果还不行，建议采用方案一。</p>
<p>具体操作如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_233536.png" alt="2351"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_233553.png" alt="2352"></p>
<p>分离再重新附加。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
        <tag>数据库附加</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlserver 中使用 sql 解析 json 格式数据的实现方案</title>
    <url>/p/sqlserver-json/</url>
    <content><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><p>公司老系统设计接口请求结果放到了一个表里的一个字段中，是一个 json 格式的数据，需要解析里面的某个字段的值，如：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"Content"</span>: &#123;</span><br><span class="line">    <span class="attr">"prePactNo"</span>: <span class="string">"20191217003209329291"</span>,</span><br><span class="line">    <span class="attr">"dealSts"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="attr">"dealDesc"</span>: <span class="string">"自动审批通过"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"IsSuccess"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"Message"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"RespCode"</span>: <span class="string">"0000"</span>,</span><br><span class="line">  <span class="attr">"RespDesc"</span>: <span class="string">"通信成功"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>需要解析出 dealDesc 的值。</p>
<h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><p>可以随便用一种程序语言来写一个程序来解析，比如 java、c# 等，但是如果只能用 sql 实现呢？</p>
<p>ResponseJson 存储的就是上面说的 json 格式的数据，实现 SQL 如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span> w.ResponseJson,</span><br><span class="line">       <span class="keyword">SUBSTRING</span>(w.ResponseJson, p1.number + <span class="number">13</span>, p2.number-p1.number<span class="number">-13</span>) <span class="keyword">AS</span> Resul,p1.number,p2.number</span><br><span class="line"><span class="keyword">FROM</span> business.WMXWRequestLog w <span class="keyword">WITH</span> (NOLOCK)</span><br><span class="line">    <span class="keyword">JOIN</span></span><br><span class="line">    (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">number</span></span><br><span class="line">        <span class="keyword">FROM</span> master.dbo.spt_values</span><br><span class="line">        <span class="keyword">WHERE</span> <span class="keyword">type</span> = <span class="string">'P'</span></span><br><span class="line">              <span class="keyword">AND</span> <span class="built_in">number</span> &gt; <span class="number">0</span></span><br><span class="line">    ) p1</span><br><span class="line">        <span class="keyword">ON</span> <span class="keyword">CHARINDEX</span>(<span class="string">',"dealDesc":"'</span>, w.ResponseJson) = p1.number</span><br><span class="line">		 <span class="keyword">JOIN</span></span><br><span class="line">    (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">number</span></span><br><span class="line">        <span class="keyword">FROM</span> master.dbo.spt_values</span><br><span class="line">        <span class="keyword">WHERE</span> <span class="keyword">type</span> = <span class="string">'P'</span></span><br><span class="line">              <span class="keyword">AND</span> <span class="built_in">number</span> &gt; <span class="number">0</span></span><br><span class="line">    ) p2</span><br><span class="line">        <span class="keyword">ON</span> <span class="keyword">CHARINDEX</span>(<span class="string">'"&#125;,"IsSuccess":'</span>, w.ResponseJson) = p2.number</span><br><span class="line"><span class="keyword">WHERE</span>  InterfaceName = <span class="string">'SinglePreAduit'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> w.Id <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>

<p>得到的【Resul】就是需要的值。有了这个思路，还可以解析更多的值。</p>
<h2 id="实现原理分析"><a href="#实现原理分析" class="headerlink" title="实现原理分析"></a>实现原理分析</h2><p>上面的 sql 用到了系统里的一个表【master.dbo.spt_values】，这是一个数字辅助表，使用了其 type 和 number 两个字段，取出的是 【type = ‘P’ AND number &gt; 0】的数据，在数据库中执行下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_222913.png" alt="20200511222923"></p>
<p>其 number 就是从1到2047连续的数字，因为一个 josn 格式是固定的，结合这个特性，再利用这个数字(即字符串的位置)我们就能建立表连接，然后取相对位置，就能取出 json 格式里的任何字段的数据了，但是缺陷是只能取到2047。</p>
<p>这个表就是一个辅助表，不光有我们用到了数字（type=’P’），还有 bool（type=’B’），有兴趣的可以去研究研究。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>sqlserver</tag>
        <tag>sqlserver数据格式</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2 学习笔记：基本使用</title>
    <url>/p/struts2-base/</url>
    <content><![CDATA[<p>Struts2 是一个 MVC 框架。</p>
<p>Struts1 完全依赖于 Servlet 的 API 但是耦合性太高，被 Struts2 替代了。</p>
<p>Struts2 并不是在 Struts1 基础上设计的，两者没有直接的关系。</p>
<h2 id="一、环境配置"><a href="#一、环境配置" class="headerlink" title="一、环境配置"></a>一、环境配置</h2><p>下载 Struts2 的压缩包，下载地址：<a href="https://struts.apache.org/" target="_blank" rel="noopener">https://struts.apache.org/</a></p>
<p>本次下载的版本是【struts-2.3.37】。</p>
<p>下载完成后，我们打开压缩包：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020102.png" alt="struts2"></p>
<h3 id="1-1-框架中的核心依赖"><a href="#1-1-框架中的核心依赖" class="headerlink" title="1.1 框架中的核心依赖"></a>1.1 框架中的核心依赖</h3><p>将 struts2 空的核心架包【apps/struts2-blank.war】 拷贝出来：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020103.png" alt="struts2"></p>
<p>放到 Tomcat 安装目录 webapps 下面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020104.png" alt="struts2"></p>
<p>然后启动 Tomcat 【bin/startup.bat】，启动成功后，得到 Tomcat 目录下【webapps/struts2-blank/WEB-INF/lib】下的文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020105.png" alt="struts2"></p>
<p>也可以不用像上面那么麻烦，直接解压 war 后缀的文件，具体操作如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020107.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020108.png" alt="struts2"></p>
<p>将这些文件拷贝到项目中，然后【Add as Library…】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020106.png" alt="struts2"></p>
<h3 id="1-2-创建核心过滤器"><a href="#1-2-创建核心过滤器" class="headerlink" title="1.2 创建核心过滤器"></a>1.2 创建核心过滤器</h3><p>在 web.xml 中添加 Struts2 框架的核心过滤器的配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.action<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中 filter-class 就是：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020109.png" alt="struts2"></p>
<h3 id="1-3-创建-struts-xml-文件"><a href="#1-3-创建-struts-xml-文件" class="headerlink" title="1.3 创建 struts.xml 文件"></a>1.3 创建 struts.xml 文件</h3><p>创建 Resources 目录：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020110.png" alt="struts2"></p>
<p>在这个目录下新建 struts.xml 文件，文件头从文件中拷贝出来：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020111.png" alt="struts2"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-4-启动项目验证"><a href="#1-4-启动项目验证" class="headerlink" title="1.4 启动项目验证"></a>1.4 启动项目验证</h3><p>添加 Tomcat 配置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020112.png" alt="struts2"></p>
<p>启动项目，如果访问成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020112-2.png" alt="struts2"></p>
<p>则到此环境配置完成。</p>
<h2 id="二、Struts2-的基本使用"><a href="#二、Struts2-的基本使用" class="headerlink" title="二、Struts2 的基本使用"></a>二、Struts2 的基本使用</h2><h3 id="2-1-一个简单的例子"><a href="#2-1-一个简单的例子" class="headerlink" title="2.1 一个简单的例子"></a>2.1 一个简单的例子</h3><p>创建 ActionTest 类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ActionTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ActionTest 被实例化"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>index.jsp：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>这里是主页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  这是主页内容</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>struts.xml 配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--name 要保证唯一 namespace 是逻辑的命名空间--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg1"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg1ns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest1"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayHi"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"hi"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg2"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg2ns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest1"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayHi"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"hi"</span> <span class="attr">type</span>=<span class="string">"redirect"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>extends 是继承的 package，struts-default 是默认的 package：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020113.png" alt="struts2"></p>
<p>即使在不同的 package 中 action 的 name 相同，可以通过 namespace 增加逻辑命名空间，访问效果如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020114.png" alt="struts2"></p>
<p>配置的视图，默认使用的是转发（type=”dispatcher”），在 pkg2 中指定【type=”redirect”】则为重定向，当访问【<a href="http://localhost:8080/struts2test/pkg2ns/actionTest1.action】" target="_blank" rel="noopener">http://localhost:8080/struts2test/pkg2ns/actionTest1.action】</a><br>地址栏会变成【<a href="http://localhost:8080/struts2test/index.jsp】。" target="_blank" rel="noopener">http://localhost:8080/struts2test/index.jsp】。</a></p>
<p>几乎所有的都是使用转发。</p>
<h3 id="2-2-传值"><a href="#2-2-传值" class="headerlink" title="2.2 传值"></a>2.2 传值</h3><p>如何将值传到视图中和将视图中的值传到后台？</p>
<h4 id="2-2-1-后台传值到视图"><a href="#2-2-1-后台传值到视图" class="headerlink" title="2.2.1 后台传值到视图"></a>2.2.1 后台传值到视图</h4><p>Struts2 的 Action 中不能定义方法名前缀为 get、set。</p>
<p>只需在类中定义一个变量，并且需要定义对这个变量的 get 方法，如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.msg=<span class="string">"hi"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后在视图页面展示出来，如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>这里是主页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">这是主页内容，msg 为 $&#123;msg&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>渲染效果如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020115.png" alt="struts2"></p>
<p>如果有多个视图方法？</p>
<p>如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ActionTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ActionTest ActionTest()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hi"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hello"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayYes</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"yes"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"yes"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>struts.xml：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--name要保证唯一 namespace是逻辑的命名空间--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg1"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg1ns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest1"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayHi"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"hi"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest2"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayHello"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"hello"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest3"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"sayYes"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"yes"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>渲染效果分别如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020116.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020117.png" alt="struts2"></p>
<p>后台输出：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020118.png" alt="struts2"></p>
<p>说明每调用一次，实例化一次对象。</p>
<h4 id="2-2-2-视图传值到后台"><a href="#2-2-2-视图传值到后台" class="headerlink" title="2.2.2 视图传值到后台"></a>2.2.2 视图传值到后台</h4><p>新建视图页面 test1.jsp：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test1 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"pkgTest/actionTest2_test1.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>对于视图页面传值，后台类必须设置 get 和 set 方法，新建类 ActionTest2：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"test1() userName="</span>+<span class="keyword">this</span>.userName+<span class="string">" age="</span>+<span class="keyword">this</span>.age);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020125.png" alt="struts2"></p>
<p>后台打印出了视图传过来的值，说明传值成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020126.png" alt="struts2"></p>
<h4 id="2-2-3-传复合型参数"><a href="#2-2-3-传复合型参数" class="headerlink" title="2.2.3 传复合型参数"></a>2.2.3 传复合型参数</h4><p>实际开发中，参数是以类的属性存在，这就是复合型参数。</p>
<p>新建一个实体类 UserInfo：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>后台类 ActionTest2 改为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserInfo userInfo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfo <span class="title">getUserInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserInfo</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userInfo = userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"test2() userName="</span>+<span class="keyword">this</span>.userInfo.getUserName()+<span class="string">" age="</span>+<span class="keyword">this</span>.userInfo.getAge());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test2"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新建 test2.jsp：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test2 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"pkgTest/actionTest2_test2.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userInfo.userName"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userInfo.age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>struts.xml 配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkgTest"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkgTest"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest2_*"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest2"</span> <span class="attr">method</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span>/&#123;1&#125;Result.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>设置 actionTest2_test2.action 对应的视图是 /test2Result.jsp，这个 jsp 内容：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test2Result 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">test2Result 页面，姓名：$&#123;userInfo.getUserName()&#125;  年龄：$&#123;userInfo.getAge()&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>test2.jsp 页面提交时后台接收到了视图页传过来的值，打印：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">test2() userName&#x3D;mark age&#x3D;29</span><br></pre></td></tr></table></figure>

<p>会转发到视图【/test2Result.jsp】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020301.png" alt="struts2"></p>
<p>实现的是双向绑定。</p>
<h3 id="2-3-通配符的使用"><a href="#2-3-通配符的使用" class="headerlink" title="2.3 通配符的使用"></a>2.3 通配符的使用</h3><p>通配符非常灵活。</p>
<h4 id="2-3-1-一个类不同方法的通配"><a href="#2-3-1-一个类不同方法的通配" class="headerlink" title="2.3.1 一个类不同方法的通配"></a>2.3.1 一个类不同方法的通配</h4><p>ActionTest 修改如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ActionTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ActionTest ActionTest()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hi"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hello"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">yes</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"yes"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"yes"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>struts.xml 配置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg2"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg2ns"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest_*"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>访问渲染效果如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020119.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020120.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020121.png" alt="struts2"></p>
<p>可以使用 constant 修改默认的变量：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020122.png" alt="struts2"></p>
<p>默认的变量在 default.properties 中设置：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020123.png" alt="struts2"></p>
<p>如配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.enable.SlashesInActionNames"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>则可以使用【/】作为访问路径的常量，如【&lt;action name=”actionTest/*” …】。</p>
<p>如配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.configuration.xml.reload"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>则更改 struts2 的配置文件后自动加载。</p>
<p>前面是一个视图，如果是多个视图呢？</p>
<p>增加页面 hi.jsp、hello.jsp、yes.jsp，struts.xml 配置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkg3"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkg3ns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"actionTest_*"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.ActionTest"</span> <span class="attr">method</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span>/&#123;1&#125;.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>渲染效果如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020124.png" alt="struts2"></p>
<h4 id="2-3-2-不同类的通配"><a href="#2-3-2-不同类的通配" class="headerlink" title="2.3.2 不同类的通配"></a>2.3.2 不同类的通配</h4><p>只需要修改 struts.xml 中 class 的通配即可，这里不作详解。</p>
<h3 id="2-4-使用-Servlet"><a href="#2-4-使用-Servlet" class="headerlink" title="2.4 使用 Servlet"></a>2.4 使用 Servlet</h3><p>通过 ActionContext 可以获取 request 对象。</p>
<p>通过 ServletActionContext 可以获取 pageContext 对象和 request 对象。</p>
<p>新建一个类 ServletAction 继承 ActionSupport：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.PageContext;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ActionContext context= ActionContext.getContext();<span class="comment">//request 对象</span></span><br><span class="line">        Map&lt;String, Object&gt; session = context.getSession();<span class="comment">//session 对象</span></span><br><span class="line">        Map&lt;String, Object&gt; application = context.getApplication();<span class="comment">//application 对象</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"yes"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        PageContext pageContext = ServletActionContext.getPageContext();</span><br><span class="line">        HttpServletRequest request = ServletActionContext.getRequest();</span><br><span class="line">        ServletContext servletContext = ServletActionContext.getServletContext();<span class="comment">//application</span></span><br><span class="line">        </span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新建一个类 ServletAction2，通过实现接口可以实现 IoC 功能：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.ApplicationAware;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.RequestAware;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.SessionAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletAction2</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> <span class="keyword">implements</span> <span class="title">ApplicationAware</span>, <span class="title">SessionAware</span>, <span class="title">RequestAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String, Object&gt; application;</span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String, Object&gt; request;</span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String, Object&gt; session;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplication</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.application=map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRequest</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.request=map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSession</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.session=map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新建一个视图类 UserAction 继承 ServletAction2：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.struts.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.struts.servlet.ServletAction2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> <span class="keyword">extends</span> <span class="title">ServletAction2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> UserInfo userInfo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfo <span class="title">getUserInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserInfo</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userInfo = userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"test() userName="</span>+<span class="keyword">this</span>.userInfo.getUserName()+<span class="string">" age="</span>+<span class="keyword">this</span>.userInfo.getAge());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.msg=<span class="string">"hello world"</span>;</span><br><span class="line">        <span class="keyword">this</span>.request.put(<span class="string">"theRequest"</span>,<span class="string">"theRequest data"</span>);</span><br><span class="line">        <span class="keyword">this</span>.session.put(<span class="string">"theSession"</span>,<span class="string">"theSession data"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>test 方法中接收了视图页面传过来的数据，给类中的 msg 变量赋值，然后在 request 对象和 session 对象中分别存入数据。</p>
<p>struts.xml 配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pkgTest"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">namespace</span>=<span class="string">"/pkgTest"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"*_*"</span> <span class="attr">class</span>=<span class="string">"com.struts.demo.&#123;1&#125;Action"</span> <span class="attr">method</span>=<span class="string">"&#123;2&#125;"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置视图--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/userResult.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>视图 userResult.jsp ：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>userResult 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">test2Result 页面，姓名：$&#123;userInfo.getUserName()&#125;  年龄：$&#123;userInfo.getAge()&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">msg 数据：$&#123;requestScope.msg&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">request 对象中的数据：$&#123;theRequest&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">session 对象中的数据：$&#123;theSession&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过一个视图页 userTest.jsp 来提交数据：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>userTest 页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"pkgTest/User_test.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userInfo.userName"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userInfo.age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>测试范例如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020501.png" alt="struts2"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020020502.png" alt="struts2"></p>
<h2 id="三、Struts2-多模块的使用"><a href="#三、Struts2-多模块的使用" class="headerlink" title="三、Struts2 多模块的使用"></a>三、Struts2 多模块的使用</h2><p>本次演示是实际开发中多个目录的情况，每个模块一个目录，下面对应 action 和 exception，项目结构如下：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020-03-14_220730.png" alt="proj dir"></p>
<h3 id="3-1-创建-Action"><a href="#3-1-创建-Action" class="headerlink" title="3.1 创建 Action"></a>3.1 创建 Action</h3><p>新建 BaseAction 作为所谓父类的 Action，用来统一管理子类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.common.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.RequestAware;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.SessionAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Action 类的父类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> <span class="keyword">implements</span> <span class="title">RequestAware</span>, <span class="title">SessionAware</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 当前用户的key</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CURRENT_USER=<span class="string">"current_user"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String,Object&gt; request;</span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String,Object&gt; session;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRequest</span><span class="params">(Map&lt;String,Object&gt; var1)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.request=var1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSession</span><span class="params">(Map&lt;String, Object&gt; var1)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.session=var1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">getCurrentUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> session.get(CURRENT_USER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>一个模块一个 Action，用来继承 BaseAction，如本次的 User 模块下 UserAction：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.user.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nice.core.common.action.BaseAction;</span><br><span class="line"><span class="keyword">import</span> com.nice.core.entity.UserInfo;</span><br><span class="line"><span class="keyword">import</span> com.nice.core.user.ex.UserException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> <span class="keyword">extends</span> <span class="title">BaseAction</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserInfo userInfo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfo <span class="title">getUserInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserInfo</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userInfo = userInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserAction login start"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(userInfo.getUserName()+<span class="string">" "</span>+userInfo.getPassword());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"kwan"</span>.equals(userInfo.getUserName()) &amp;&amp; <span class="string">"123"</span>.equals(userInfo.getPassword()))&#123;</span><br><span class="line">            System.out.println(<span class="string">"login successful"</span>);</span><br><span class="line">            session.put(CURRENT_USER,userInfo.getUserName());</span><br><span class="line">            <span class="keyword">return</span> SUCCESS;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UserException(<span class="string">"用户登录异常"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-创建异常处理类"><a href="#3-2-创建异常处理类" class="headerlink" title="3.2 创建异常处理类"></a>3.2 创建异常处理类</h3><p>实际开发会建立自己的异常，如新建一个公共的异常类【BusinessException】：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.common.ex;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异常的父类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BusinessException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">BusinessException</span><span class="params">(String message, Throwable cause,</span></span></span><br><span class="line"><span class="function"><span class="params">                               <span class="keyword">boolean</span> enableSuppression,</span></span></span><br><span class="line"><span class="function"><span class="params">                               <span class="keyword">boolean</span> writableStackTrace)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>各个模块的异常类都继承这个公共异常类，更好的规范，，如【UserException】:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.user.ex;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nice.core.common.ex.BusinessException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户信息异常处理类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserException</span> <span class="keyword">extends</span> <span class="title">BusinessException</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserException</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">UserException</span><span class="params">(String message, Throwable cause,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">boolean</span> enableSuppression,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">boolean</span> writableStackTrace)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-3-struts-配置"><a href="#3-3-struts-配置" class="headerlink" title="3.3 struts 配置"></a>3.3 struts 配置</h3><p>新建 struts.xml 文件，具体的模块 action 并不建立在此文件中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--可以使用【/】作为访问路径的常量--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.enable.SlashesInActionNames"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--更改 struts2 的配置文件后自动加载--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.configuration.xml.reload"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--后缀名配置常量，支持多个以逗号分隔--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.action.extension"</span> <span class="attr">value</span>=<span class="string">"do,action,,"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--包含零散的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">"config/user/struts-user.xml"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--定义基本包，如果 abstract 设为 true，则抽象包下面配置的 Action 元素无效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"basepkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">abstract</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置全局视图--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">global-results</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">type</span>=<span class="string">"redirect"</span> <span class="attr">name</span>=<span class="string">"login"</span>&gt;</span>/loginPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"error"</span>&gt;</span>/errorPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">global-results</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--配置全局异常--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exception-mapping</span> <span class="attr">exception</span>=<span class="string">"java.lang.Exception"</span> <span class="attr">result</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在资源目录【Resources】中会区分不同模块，因此会以一个模块建立一个目录，user 模块的 struts 配置【struts-user.xml】：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"userpkg"</span> <span class="attr">extends</span>=<span class="string">"basepkg"</span> <span class="attr">namespace</span>=<span class="string">"/userns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"*"</span>  <span class="attr">class</span>=<span class="string">"com.nice.core.user.action.UserAction"</span> <span class="attr">method</span>=<span class="string">"&#123;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/WEB-INF/views/user/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 struts.xml 中通过 include 标签将各模块的 struts 配置导入进来，配置全局视图、配置全局异常。</p>
<h3 id="3-3-创建视图页面"><a href="#3-3-创建视图页面" class="headerlink" title="3.3 创建视图页面"></a>3.3 创建视图页面</h3><p>本次模拟实现一个简单的登录操作，登录页面【loginPage.jsp】：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">"$&#123;pageContext.request.contextPath&#125;"</span> /&gt;</span><br><span class="line">    &lt;title&gt;用户登录页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">"/userns/login.do"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    用户名：&lt;input type=<span class="string">"text"</span> name=<span class="string">"userInfo.userName"</span>&gt; &lt;br&gt;</span><br><span class="line">    密码：&lt;input type=<span class="string">"text"</span> name=<span class="string">"userInfo.password"</span>&gt; &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"登录"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>登录成功的页面：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;用户登录后的主页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">当前登录用户：$&#123;sessionScope.current_user&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-4-登录验证演示"><a href="#3-4-登录验证演示" class="headerlink" title="3.4 登录验证演示"></a>3.4 登录验证演示</h3><p>登录页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020-03-14_215832.png" alt="loginPage"></p>
<p>登录成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020-03-14_215904.png" alt="login success"></p>
<h3 id="3-5-异常处理"><a href="#3-5-异常处理" class="headerlink" title="3.5 异常处理"></a>3.5 异常处理</h3><p>异常有系统异常和业务异常。</p>
<p>若是系统异常，对应的错误页面【errorPage.jsp】：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;这是错误页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    系统出现异常。</span><br><span class="line">    &lt;s:debug&gt;&lt;/s:debug&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>业务异常的错误页面【businessExPage.jsp】：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;业务异常页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    这是业务异常页面。&lt;br&gt;</span><br><span class="line">异常信息：$&#123;exception.message&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>struts.xml 全局异常配置改为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"basepkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span> <span class="attr">abstract</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置全局视图--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">global-results</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">type</span>=<span class="string">"redirect"</span> <span class="attr">name</span>=<span class="string">"login"</span>&gt;</span>/loginPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"error"</span>&gt;</span>/errorPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"businessEx"</span>&gt;</span>/businessExPage.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">global-results</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置全局异常--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exception-mapping</span> <span class="attr">exception</span>=<span class="string">"java.lang.Exception"</span> <span class="attr">result</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exception-mapping</span> <span class="attr">exception</span>=<span class="string">"com.nice.core.common.ex.BusinessException"</span> <span class="attr">result</span>=<span class="string">"businessEx"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>登录页面输入错误的用户和密码，上面的【UserAction】类中在逻辑中是直接 <code>throw new UserException(&quot;用户登录异常&quot;);</code>，因此会抛出一个业务异常：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020-03-14_230637.png" alt="异常页面"></p>
<h2 id="三、Struts2-拦截器"><a href="#三、Struts2-拦截器" class="headerlink" title="三、Struts2 拦截器"></a>三、Struts2 拦截器</h2><h3 id="3-1-自定义拦截器类"><a href="#3-1-自定义拦截器类" class="headerlink" title="3.1 自定义拦截器类"></a>3.1 自定义拦截器类</h3><p>拦截器分成两种：</p>
<ul>
<li>类拦截器：AbstractInterceptor</li>
<li>方法拦截器：MethodFilterInterceptor</li>
</ul>
<br>

<p>下面做一个小实例用来控制登录拦截，如果需要登录的页面则进行拦截（判断是否登录，没有登录则跳转到登录页）。</p>
<p>自定义类拦截器【TheClassInteceptor】如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.common.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nice.core.common.action.BaseAction;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.Action;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionInvocation;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.interceptor.AbstractInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TheClassInteceptor</span> <span class="keyword">extends</span> <span class="title">AbstractInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">intercept</span><span class="params">(ActionInvocation actionInvocation)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"TheClassInteceptor intercept start"</span>);</span><br><span class="line"></span><br><span class="line">        Object action = actionInvocation.getAction();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"actionInvocation.getAction()="</span>+action);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当前登录用户的 session</span></span><br><span class="line">        Object sessionObj = actionInvocation.getInvocationContext().getSession().get(BaseAction.CURRENT_USER);</span><br><span class="line"></span><br><span class="line">        System.out.println(BaseAction.CURRENT_USER+<span class="string">" session ="</span>+sessionObj);</span><br><span class="line"></span><br><span class="line">        String result=Action.LOGIN;</span><br><span class="line">        <span class="keyword">if</span>(sessionObj!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            result=actionInvocation.invoke();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义方法拦截器【TheMethodInterceptor】如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nice.core.common.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nice.core.common.action.BaseAction;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.Action;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionInvocation;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.interceptor.MethodFilterInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方法拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TheMethodInterceptor</span> <span class="keyword">extends</span> <span class="title">MethodFilterInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">doIntercept</span><span class="params">(ActionInvocation actionInvocation)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"TheMethodInterceptor doIntercept start"</span>);</span><br><span class="line"></span><br><span class="line">        Object action = actionInvocation.getAction();</span><br><span class="line">        System.out.println(<span class="string">"actionInvocation.getAction()="</span>+action);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当前登录用户的 session</span></span><br><span class="line">        Object sessionObj = actionInvocation.getInvocationContext().getSession().get(BaseAction.CURRENT_USER);</span><br><span class="line"></span><br><span class="line">        System.out.println(BaseAction.CURRENT_USER+<span class="string">" session ="</span>+sessionObj);</span><br><span class="line"></span><br><span class="line">        String result= Action.LOGIN;</span><br><span class="line">        <span class="keyword">if</span>(sessionObj!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            result=actionInvocation.invoke();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-拦截器配置"><a href="#3-2-拦截器配置" class="headerlink" title="3.2 拦截器配置"></a>3.2 拦截器配置</h3><p>自定义的拦截器写好了还要在【struts.xml】中进行配置。</p>
<p>Struts2 默认内置了很多拦截器，配置在【struts-default.xml】中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">class</span>=<span class="string">"com.opensymphony.xwork2.interceptor.AliasInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"autowiring"</span> <span class="attr">class</span>=<span class="string">"com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"chain"</span> <span class="attr">class</span>=<span class="string">"com.opensymphony.xwork2.interceptor.ChainingInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"conversionError"</span> <span class="attr">class</span>=<span class="string">"org.apache.struts2.interceptor.StrutsConversionErrorInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"cookie"</span> <span class="attr">class</span>=<span class="string">"org.apache.struts2.interceptor.CookieInterceptor"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"cookieProvider"</span> <span class="attr">class</span>=<span class="string">"org.apache.struts2.interceptor.CookieProviderInterceptor"</span>/&gt;</span></span><br><span class="line">            ...</span><br><span class="line"></span><br><span class="line">             <span class="comment">&lt;!-- Basic stack --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"basicStack"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"exception"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"servletConfig"</span>/&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Sample validation and workflow stack --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"validationWorkflowStack"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"basicStack"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"validation"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"workflow"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在配置自定义拦截器时会覆盖默认使用内置的拦截器，因此应先引用原默认拦截器【defaultStack】：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册自定义拦截器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"loginInterceptor"</span> <span class="attr">class</span>=<span class="string">"com.nice.core.common.interceptor.TheMethodInterceptor"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置一个拦截栈--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"loginStack"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"loginInterceptor"</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"excludeMethods"</span>&gt;</span>login<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置所有子包都默认使用的拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-interceptor-ref</span> <span class="attr">name</span>=<span class="string">"loginStack"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>上面配置了全局的登录拦截，排除的方法【excludeMethods】为【login】，因此在进入其他页面时会被拦截判断是否登录。</p>
<h3 id="3-3-拦截器效果演示"><a href="#3-3-拦截器效果演示" class="headerlink" title="3.3 拦截器效果演示"></a>3.3 拦截器效果演示</h3><p>在用户模块新增一个页面用于新增用户，【UserAction】中添加方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟新增</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.msg=<span class="string">"新增页面"</span>;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接通过地址【/userns/add.do】访问会这个页面会进入自定义的拦截器【TheMethodInterceptor】方法【doIntercept】中，拿不到登录 session，后台打印日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TheMethodInterceptor doIntercept start</span><br><span class="line">actionInvocation.getAction()=com.nice.core.user.action.UserAction@556479a2</span><br><span class="line">current_user session =null</span><br></pre></td></tr></table></figure>

<p>页面跳转到登录页面，先登录再访问这个新增页面就会放行，新增页面就能访问到</p>
<p><img src="http://img2.kungge.com/md-content/2020/202002/struts2.2020-03-15_122159.png" alt="用户新增页面"></p>
]]></content>
      <categories>
        <category>Java框架</category>
      </categories>
      <tags>
        <tag>struts2</tag>
        <tag>java框架</tag>
      </tags>
  </entry>
  <entry>
    <title>nuget.org 温馨邮件提示 github 上出现 API key 暖心</title>
    <url>/p/nuget-nugetorg-email/</url>
    <content><![CDATA[<p>今天收到 nuget.org 邮件，标题【[NuGet Gallery] API key ‘APIKeysCreateKeyName’ revoked due to a potential leak】</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_143907.png" alt="nuget邮件"></p>
<p>内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hi kungge,</span><br><span class="line">This is your friendly NuGet security bot! It appears that an API key &#39;APIKeysCreateKeyName&#39; assoicated with your account was posted at GitHub. As a precautionary measure, we have revoked this key to protect your account and packages. Please review your packages for any unauthorized activity.</span><br><span class="line">Your key was found here: https:&#x2F;&#x2F;github.com&#x2F;Ants-double&#x2F;huanhuncao&#x2F;blob&#x2F;68baf96585872db6a50d044bbb5dc8f63a5fc753&#x2F;nexus%20nuget%20npm&#x2F;%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%8A%8A%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E5%88%B0Nuget%E4%BB%93%E5%BA%93%E4%B8%AD%E5%BF%83.md</span><br><span class="line">In the future, please be mindful of accidentally posting your API keys publicly!</span><br><span class="line">You can regenerate this key or create a new one on the Manage API Keys page.</span><br><span class="line">Here are the recommended ways to manage API keys:</span><br><span class="line">•	Save the API key into a local NuGet.Config using the NuGet CLI. This file should NOT be checked-in to version control or GitHub;</span><br><span class="line">•	Use environment variables to set and access API keys.</span><br><span class="line">•	Use GitHub encrypted secrets to store and access API keys.</span><br><span class="line">Need help? Reply to this email or contact support.</span><br><span class="line">Thanks,</span><br><span class="line">The NuGet Gallery Team</span><br><span class="line"></span><br><span class="line">Privacy Statement</span><br><span class="line">Microsoft Corporation</span><br><span class="line">One Microsoft Way</span><br><span class="line">Redmond, WA 98052 USA</span><br></pre></td></tr></table></figure>

<p>将邮件中提到的网址【<a href="https://github.com/Ants-double/huanhuncao/blob/68baf96585872db6a50d044bbb5dc8f63a5fc753/nexus%20nuget%20npm/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%8A%8A%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E5%88%B0Nuget%E4%BB%93%E5%BA%93%E4%B8%AD%E5%BF%83.md】点进去查看：" target="_blank" rel="noopener">https://github.com/Ants-double/huanhuncao/blob/68baf96585872db6a50d044bbb5dc8f63a5fc753/nexus%20nuget%20npm/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%8A%8A%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E5%88%B0Nuget%E4%BB%93%E5%BA%93%E4%B8%AD%E5%BF%83.md】点进去查看：</a></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-22_143510.png" alt="github一地址"></p>
<p>这是啥情况？？？</p>
]]></content>
      <categories>
        <category>包管理</category>
      </categories>
      <tags>
        <tag>nugut</tag>
        <tag>nuget.org</tag>
      </tags>
  </entry>
  <entry>
    <title>NuGet 打包并发布到私仓 ProGet</title>
    <url>/p/nuget-proget/</url>
    <content><![CDATA[<h2 id="创建包"><a href="#创建包" class="headerlink" title="创建包"></a>创建包</h2><p>使用工具【PackageExplorer.4.4.25】。</p>
<p>打开【NuGetPackageExplorer】如果需要新增一个 package，点击【Create a new package】</p>
<p>右边是一个空白页，右键 【Add Lib Folder】</p>
<p>然后 【Add .Net Folder】：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201911/nuget_2019-11-28_141057.png" alt="nuget_2019-11-28_141057" title="nuget_2019-11-28_141057.png"></p>
<p>选择需要的版本，比如本次建了【net40】和【net45】。</p>
<p>右键点击【Add Existing File…】选择添加 dll 文件。</p>
<p>添加完成后，点击左边的编辑按钮编辑元数据：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201911/nuget_2019-11-28_142207.png" alt="nuget_2019-11-28_142207" title="nuget_2019-11-28_142207"></p>
<p>注：如果有依赖需要点击【Edit dependencies】添加依赖。</p>
<p>编辑完成，点击左上角的【√】，然后点击菜单【File】下的【Save】保存，如本次保存的文件【Tamir.SharpSSHVAssist.1.1.1.13.nupkg】。</p>
<h2 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h2><p>包创建完成后需要将包发布到私仓，本次发布到 ProGet。</p>
<p>打开 ProGet 管理页面，进入【Packages】，点击【Add Package】:</p>
<p><img src="http://img2.kungge.com/md-content/2019/201911/nuget_2019-11-28_142814.png" alt="nuget_2019-11-28_142814" title="Optional title"></p>
<p>点击【Upload from Disk】，将上面生成的 .nupkg 上传。</p>
<p>上传完成后在 NuGet 控制台就可以搜索到你上传的包了：</p>
<p><img src="http://img2.kungge.com/md-content/2019/201911/nuget_2019-11-28_143148.png" alt="nuget_2019-11-28_143148.png" title="Optional title"></p>
]]></content>
      <categories>
        <category>包管理</category>
      </categories>
      <tags>
        <tag>nugut</tag>
        <tag>nugut打包</tag>
        <tag>proget</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战（一）：搭建开源博客系统 Hexo，并将其部署到 GitHub</title>
    <url>/p/hexo-create-github/</url>
    <content><![CDATA[<p>Hexo 是使用 Node.js 技术实现的静态博客框架，依赖很少，安装非常简单，可以将 markdown 文件生成博客文章，而<br>且可以将生成的静态内容发布到 Github 上。</p>
<p>本次使用的操作系统是 Windows，在 Linux 上操作类似。</p>
<h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><h3 id="1-1-安装-git"><a href="#1-1-安装-git" class="headerlink" title="1.1 安装 git"></a>1.1 安装 git</h3><p>下载地址：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></p>
<p>本次下载安装的文件是【Git-2.22.0-64-bit.exe】。</p>
<p>安装完成后在命令窗口输入命令 <code>git --version</code> 验证是否安装成功，如下能输出 git 版本说明安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;git --version</span><br><span class="line">git version 2.22.0.windows.1</span><br></pre></td></tr></table></figure>

<p>在鼠标右键也会有 git 操作的显示：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_212329.png" alt="2123"></p>
<h3 id="1-2-安装-Node-js"><a href="#1-2-安装-Node-js" class="headerlink" title="1.2 安装 Node.js"></a>1.2 安装 Node.js</h3><p>下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p>
<p>本次下载安装的文件是【node-v12.16.1-x64.msi】。</p>
<p>安装完成后在命令窗口输入命令 <code>node -v</code> 验证是否安装成功，如下能输出 node 版本说明安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;node -v</span><br><span class="line">v12.16.1</span><br></pre></td></tr></table></figure>

<h2 id="二、安装-Hexo"><a href="#二、安装-Hexo" class="headerlink" title="二、安装 Hexo"></a>二、安装 Hexo</h2><p>使用命令 <code>npm install -g hexo-cli</code> 安装 Hexo。</p>
<p>使用命令 <code>hexo init blog</code> 初始化博客：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010139.png" alt="2054"></p>
<p>如上已初始化完成，目录结构如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<ul>
<li>_config.yml：网站配置信息文件</li>
<li>package.json：应用程序的信息</li>
<li>scaffolds：目标目录</li>
<li>source：存放用户资源的目录，除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</li>
<li>themes：主题目录，hexo 会根据主题来生成静态页面</li>
</ul>
<h2 id="三、基本使用-hexo"><a href="#三、基本使用-hexo" class="headerlink" title="三、基本使用 hexo"></a>三、基本使用 hexo</h2><p>进入 blog 文件夹，使用命令 <code>hexo server</code> （可简写 <code>hexo s</code>）启动服务：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010630.png" alt="2057"></p>
<p>如上 hexo 博客系统服务已启动完成，浏览器输入地址 <code>http://localhost:4000</code> 访问：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010648.png" alt="2059"></p>
<p>系统默认新建了一个 Hello World 博文，其实这个博客就是目录【source/_posts】中文件为【hello-world.md】的内容，使用命令 <code>hexo new &quot;Hello by hexo newcommand&quot;</code> 则会在该目录中新增一个文件【Hello-by-hexo-new-command.md】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010936.png" alt="2101"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Special\Test\HexoTest\blog&gt;hexo new <span class="string">"Hello by hexo new command"</span></span><br><span class="line">INFO  Created: C:\Special\Test\HexoTest\blog\<span class="built_in">source</span>\_posts\Hello-by-hexo-new-command.md</span><br></pre></td></tr></table></figure>

<p>就会在博客系统中产生一篇名为【Hello by hexo newcommand】的博文：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_010959.png" alt="2102"></p>
<p>直接在目录中【source/_posts】拷贝过来一个文件，如【frp.2020032301.md】，Hexo 检测到有文件就会在博客系统中生成一篇博文与文件名相同的博文，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_211234.png" alt="0329"></p>
<p>如果是多层目录，也会对应生成多层路径如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_203410.png" alt="2034"></p>
<h2 id="四、结合-GitHub-使用"><a href="#四、结合-GitHub-使用" class="headerlink" title="四、结合 GitHub 使用"></a>四、结合 GitHub 使用</h2><h3 id="4-1-GitHub-创建个人仓库"><a href="#4-1-GitHub-创建个人仓库" class="headerlink" title="4.1 GitHub 创建个人仓库"></a>4.1 GitHub 创建个人仓库</h3><p>登录 GitHub ,新建仓库（New repository）,在 Repository name 输入【你的用户名.github.io】，这样配置在后面部署到 GitHub 时就能被失败，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_215644.png" alt="2327"></p>
<h3 id="4-2-Git-与-GitHub-帐号绑定"><a href="#4-2-Git-与-GitHub-帐号绑定" class="headerlink" title="4.2 Git 与 GitHub 帐号绑定"></a>4.2 Git 与 GitHub 帐号绑定</h3><ol>
<li>配置 git 全局的的用户名和邮箱</li>
</ol>
<p>将 git 全局的的用户名和邮箱配置成 GitHub：</p>
<blockquote>
<ol>
<li>使用命令 <code>git config --global user.name &quot;你的GitHub用户名&quot;</code> 配置 git 全局的的用户名。</li>
<li>使用命令 <code>git config --global user.email &quot;你的GitHub使用的邮箱&quot;</code> 配置 git 全局的的邮箱。</li>
</ol>
</blockquote>
<p>范例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ git config --global user.name <span class="string">"kungge"</span></span><br><span class="line"></span><br><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ git config --global user.email <span class="string">"kunggewan@hotmail.com"</span></span><br><span class="line"></span><br><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ git config user.name</span><br><span class="line">kungge</span><br><span class="line"></span><br><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ git config user.email</span><br><span class="line">kunggewan@hotmail.com</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>生成密钥</li>
</ol>
<p>使用命令 <code>ssh-keygen -t rsa -C &quot;kunggewan@hotmail.com&quot;</code> 后一直回车即可，范例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 ~</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"kunggewan@hotmail.com"</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/Administrator/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/Administrator/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/Administrator/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:97THjWf3vbYf4BpwOfUra/sz/Sr0gk8SFNEU9RotcM0 kunggewan@hotmail.com</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 3072]----+</span></span><br><span class="line"><span class="string">|          o++ooo |</span></span><br><span class="line"><span class="string">|           ..o oE|</span></span><br><span class="line"><span class="string">|          .  .o o|</span></span><br><span class="line"><span class="string">|         .  o .+ |</span></span><br><span class="line"><span class="string">|        S.o+.... |</span></span><br><span class="line"><span class="string">|         .o++o.o.|</span></span><br><span class="line"><span class="string">|          .++++o*|</span></span><br><span class="line"><span class="string">|          .o=o+**|</span></span><br><span class="line"><span class="string">|           oo===%|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure>

<p>这样就在目录【C:\Users\你的用户名.ssh】中生成密钥，如【C:\Users\Administrator.ssh】中：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_222602.png" alt="2309"></p>
<ol start="3">
<li>将生成的密钥更新到 GitHub 上</li>
</ol>
<p>打开 GitHub settings 下的 【SSH and GPG keys】，然后添加 SSH Key，Title 自取，Key 的内容为上面生成的文件【id_rsa.pub】的内容：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_222710.png" alt="2312"></p>
<p>点击【Add SSH Key】后会在列表中显示新增的 SSH Key，如：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_222726.png" alt="2316"></p>
<ol start="4">
<li>验证是否成功</li>
</ol>
<p>使用命令 <code>ssh -T git@github.com</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Administrator@ecs-x-large-2-win-20200316202505 MINGW64 /c/Special/Test/HexoTest/blog</span><br><span class="line">$ ssh -T git@github.com</span><br><span class="line">The authenticity of host <span class="string">'github.com (52.74.223.119)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCsp***TxdCARLviKw6E5SY8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>github.com,52.74.223.119<span class="string">' (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Hi kungge! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<h3 id="4-3-将-Hexo-部署到-GitHub"><a href="#4-3-将-Hexo-部署到-GitHub" class="headerlink" title="4.3 将 Hexo 部署到 GitHub"></a>4.3 将 Hexo 部署到 GitHub</h3><p>打开配置文件【_config.yml】，将 deploy 节点下内容修改如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;kungge&#x2F;kungge.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>repo 为你上面创建的项目仓库地址。</p>
<p>安装 git 部署插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Special\Test\HexoTest\blog&gt;npm install hexo-deployer-git --save</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@2.1.2: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br><span class="line"></span><br><span class="line">+ hexo-deployer-git@2.1.0</span><br><span class="line">added 1 package from 1 contributor and audited 570 packages <span class="keyword">in</span> 3.271s</span><br><span class="line"></span><br><span class="line">5 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">found 2 low severity vulnerabilities</span><br><span class="line">  run `npm audit fix` to fix them, or `npm audit` <span class="keyword">for</span> details</span><br></pre></td></tr></table></figure>

<p>然后分别执行如下命令：</p>
<ul>
<li><code>hexo clean</code>：清除</li>
<li><code>hexo generate</code>，可简写成 <code>hexo g</code>：生成静态内容</li>
<li><code>hexo deploy</code>，可简写成 <code>hexo d</code>：部署文章</li>
</ul>
<p>执行部署命令 <code>hexo deploy</code> 时，会要求输入 GitHub 的用户名和密码：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_224043.png" alt="2324"></p>
<br>

<p>登录确认，如果出现如下则表示部署成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_232554.png" alt="2325"></p>
<p><em>注：如果失败可参考【P.3 部署到 GitHub 失败】解决。</em></p>
<p>如下已部署到 GitHub 成功：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_225412.png" alt="2254"></p>
<p>查看 GitHub 仓库代码可看到静态页面已经发布过来了：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-30_001637.png" alt="0017"></p>
<h2 id="五、绑定域名"><a href="#五、绑定域名" class="headerlink" title="五、绑定域名"></a>五、绑定域名</h2><h3 id="5-1-域名解析设置"><a href="#5-1-域名解析设置" class="headerlink" title="5.1 域名解析设置"></a>5.1 域名解析设置</h3><p>进入域名控制台，本次使用的华为云，添加记录集，主机记录，如果是主域名，则使用 www，如果是二级域名则使用二级域名名称，如 blog，类型选择 CNAME，值就是你的 github 博客网站项目地址，如 <code>kungge.github.com</code>：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_225323.png" alt="20200508230714"></p>
<p>这个时候如果直接访问你的域名还是会404报错：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_225514.png" alt="20200508230831"></p>
<h3 id="5-2-github-设置"><a href="#5-2-github-设置" class="headerlink" title="5.2 github 设置"></a>5.2 github 设置</h3><p>进入你的项目，点击 Settings 进入设置页面：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_225542.png" alt="20200508231343"></p>
<p>在 GitHub Pages 一栏中找到 Custom domain 然后在文本框中输入你的域名，点击 save 即可：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-08_225728.png" alt="20200508231455"></p>
<p>其实这个时候就可以通过访问域名来访问网站了。</p>
<h3 id="5-3-本地博客设置"><a href="#5-3-本地博客设置" class="headerlink" title="5.3 本地博客设置"></a>5.3 本地博客设置</h3><p>在本地博客的 blog/source  目录中，创建一个记事本，内容输入你的域名，如本次为 blog.kungge.com，保存为 CNAME 文件名称，不要带后缀。</p>
<p>然后使用如下三个命令来重新生成内容并部署到 Github。</p>
<h2 id="P、常见问题"><a href="#P、常见问题" class="headerlink" title="P、常见问题"></a>P、常见问题</h2><h3 id="P1-安装-hexo-出错"><a href="#P1-安装-hexo-出错" class="headerlink" title="P1 安装 hexo 出错"></a>P1 安装 hexo 出错</h3><p>使用命令 <code>npm install -g hexo-cli</code> 后，再使用的时候报 git 不是内部或外部命令：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_002023.png" alt="2025"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_004703.png" alt="2026"></p>
<p>解决办法：重新删除目录重来。</p>
<h3 id="P2-图片解析不出来"><a href="#P2-图片解析不出来" class="headerlink" title="P2 图片解析不出来"></a>P2 图片解析不出来</h3><p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_211540.png" alt="0329"></p>
<p>可以将图片放置在目录【source】，这样图片就能显示出来：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_212858.png" alt="2130"></p>
<p>但是这样肯定不行，当图片不哦多时则会占据大量的存储空间，文章加载时候会变慢，而且md文件过多图片过多，这个目录就会变得很大，难于维护。</p>
<p>可以使用图床解决这个问题，图片存储在云存储中，如阿里云存储、又拍云存储等第三方的文件存储服务，使用的使用使用图片链接地址即可，如在 markdown 中就可以这样使用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![2323](http:&#x2F;&#x2F;img.kungge.com&#x2F;a&#x2F;2020-03-24_232349.png)</span><br></pre></td></tr></table></figure>

<h3 id="P3-部署到-GitHub-失败"><a href="#P3-部署到-GitHub-失败" class="headerlink" title="P3 部署到 GitHub 失败"></a>P3 部署到 GitHub 失败</h3><p>使用命令 <code>hexo d</code> 部署如出现访问git地址失败，如： </p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_224648.png" alt="2247"></p>
<p>解决：重新使用命令 <code>hexo d</code> 则会在命令窗口要求输入 github 的用户和密码，回车即可：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202003/2020-03-29_225202.png" alt="2252"></p>
]]></content>
      <categories>
        <category>开源博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 搭建</tag>
        <tag>hexo 部署</tag>
        <tag>github</tag>
        <tag>hexo 实战</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 实战：搜索引擎 SEO Settings</title>
    <url>/p/hexo-seo/</url>
    <content><![CDATA[<p>本次以百度为例。</p>
<h2 id="添加网站"><a href="#添加网站" class="headerlink" title="添加网站"></a>添加网站</h2><p>进入【<a href="https://ziyuan.baidu.com/linksubmit/index?" target="_blank" rel="noopener">百度站长平台</a>】，添加站点</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_214348.png" alt="20200510215249"></p>
<p>添加的站点需要验证：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_002624.png" alt="20200511002631"></p>
<p>next 支持 SEO Settings，将标签内容赋值给 <code>baidu_site_verification</code>：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># SEO Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Baidu transformation on mobile devices.</span></span><br><span class="line"><span class="attr">disable_baidu_transformation:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If true, site-subtitle will be added to index page.</span></span><br><span class="line"><span class="comment"># Remember to set up your site-subtitle in Hexo `_config.yml` (e.g. subtitle: Subtitle)</span></span><br><span class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically add external URL with Base64 encrypt &amp; decrypt.</span></span><br><span class="line"><span class="attr">exturl:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters</span></span><br><span class="line"><span class="attr">google_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bing Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.bing.com/webmaster</span></span><br><span class="line"><span class="attr">bing_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Yandex Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://webmaster.yandex.ru</span></span><br><span class="line"><span class="attr">yandex_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://ziyuan.baidu.com/site</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span> <span class="string">&lt;meta</span> <span class="string">name="baidu-site-verification"</span> <span class="string">content="xSB5shU7SK"</span> <span class="string">/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO.</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>因此采用【HTMl标签验证】：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_220432.png" alt="20200510225133"></p>
<p>html 内容就是 content 中的内容。</p>
<p>点击完成验证，验证成功后，进入站点属性：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_001139.png" alt="20200511001220"></p>
<p>因为是一个子站，所以关联主体：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_001240.png" alt="20200511001306"></p>
<p>在站点管理中可以看到新站已经验证完成：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_001357.png" alt="20200511001439"></p>
<p>如果已经有主站添加了验证，可以批量添加子站：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_001320.png" alt="20200510215413"></p>
<h2 id="提交链接"><a href="#提交链接" class="headerlink" title="提交链接"></a>提交链接</h2><p>使用 npm 自动生成 sitemap，然后将其提交到百度或者其它搜索引擎。</p>
<p>安装两个组件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<p>生成，在 public 目录中会生成 sitemap.xml 和 baidusitemap.xml 两个文件。</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_000027.png" alt="20200511000047"></p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-11_000329.png" alt="20200511000337"></p>
<p>生成的 baidusitemap.xml 中只包含文章内容，其它页面不包含（如404、类别、标签页面等）。</p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="验证网站失败"><a href="#验证网站失败" class="headerlink" title="验证网站失败"></a>验证网站失败</h3><p>验证网站：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_214358.png" alt="20200510215322"></p>
<p>在 source 目录中添加这个文件，然后重新生成再发布即可。</p>
<p>查看这个文件是否发布：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_224443.png" alt="20200510224458"></p>
<p>还可以选择 HTML 标签验证：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_220432.png" alt="20200510221147"></p>
<p>然后点击完成验证，验证失败：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_224624.png" alt="20200510224657"></p>
<p>因为最终生成的这个文件不再是之前的那个文件：</p>
<p><img src="http://img2.kungge.com/md-content/2020/202005/2020-05-10_224900.png" alt="20200510224932"></p>
]]></content>
      <categories>
        <category>开源博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo 实战</tag>
        <tag>hexo seo</tag>
        <tag>seo</tag>
      </tags>
  </entry>
</search>
